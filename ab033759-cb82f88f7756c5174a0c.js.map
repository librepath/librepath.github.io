{"version":3,"file":"ab033759-cb82f88f7756c5174a0c.js","mappings":"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","sources":["webpack://sjxx/./node_modules/markmap-lib/dist/browser/index.js"],"sourcesContent":["var _regeneratorRuntime = require(\"/Users/max/@dev/sjxx/node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _asyncToGenerator = require(\"/Users/max/@dev/sjxx/node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n\nvar _toConsumableArray = require(\"/Users/max/@dev/sjxx/node_modules/@babel/runtime/helpers/toConsumableArray.js\");\n\nvar _slicedToArray = require(\"/Users/max/@dev/sjxx/node_modules/@babel/runtime/helpers/slicedToArray.js\");\n\nvar _classCallCheck = require(\"/Users/max/@dev/sjxx/node_modules/@babel/runtime/helpers/classCallCheck.js\");\n\nvar _createClass = require(\"/Users/max/@dev/sjxx/node_modules/@babel/runtime/helpers/createClass.js\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nrequire(\"core-js/modules/esnext.global-this.js\");\n\n/*! markmap-lib v0.12.0 | MIT License */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('katex')) : typeof define === 'function' && define.amd ? define(['exports', 'katex'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.markmap = global.markmap || {}, global.window.katex));\n})(this, function (exports, require$$0) {\n  'use strict';\n\n  function _interopDefaultLegacy(e) {\n    return e && typeof e === 'object' && 'default' in e ? e[\"default\"] : e;\n  }\n\n  var require$$0__default = /*#__PURE__*/_interopDefaultLegacy(require$$0);\n\n  function _extends$1() {\n    _extends$1 = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends$1.apply(this, arguments);\n  }\n  /*! markmap-common v0.1.6 | MIT License */\n\n\n  var Hook = /*#__PURE__*/function () {\n    function Hook() {\n      _classCallCheck(this, Hook);\n\n      this.listeners = [];\n    }\n\n    _createClass(Hook, [{\n      key: \"tap\",\n      value: function tap(fn) {\n        var _this = this;\n\n        this.listeners.push(fn);\n        return function () {\n          return _this.revoke(fn);\n        };\n      }\n    }, {\n      key: \"revoke\",\n      value: function revoke(fn) {\n        var i = this.listeners.indexOf(fn);\n        if (i >= 0) this.listeners.splice(i, 1);\n      }\n    }, {\n      key: \"revokeAll\",\n      value: function revokeAll() {\n        this.listeners.splice(0);\n      }\n    }, {\n      key: \"call\",\n      value: function call() {\n        var _iterator = _createForOfIteratorHelper(this.listeners),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var fn = _step.value;\n            fn.apply(void 0, arguments);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }]);\n\n    return Hook;\n  }();\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  function escapeHtml$1(html) {\n    return html.replace(/[&<\"]/g, function (m) {\n      return {\n        '&': '&amp;',\n        '<': '&lt;',\n        '\"': '&quot;'\n      }[m];\n    });\n  }\n\n  function escapeScript(content) {\n    return content.replace(/<(\\/script>)/g, '\\\\x3c$2');\n  }\n\n  function htmlOpen(tagName, attrs) {\n    var attrStr = attrs ? Object.entries(attrs).map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n\n      if (value == null || value === false) return;\n      key = \" \".concat(escapeHtml$1(key));\n      if (value === true) return key;\n      return \"\".concat(key, \"=\\\"\").concat(escapeHtml$1(value), \"\\\"\");\n    }).filter(Boolean).join('') : '';\n    return \"<\".concat(tagName).concat(attrStr, \">\");\n  }\n\n  function htmlClose(tagName) {\n    return \"</\".concat(tagName, \">\");\n  }\n\n  function wrapHtml(tagName, content, attrs) {\n    if (content == null) return htmlOpen(tagName, attrs);\n    return htmlOpen(tagName, attrs) + (content || '') + htmlClose(tagName);\n  }\n\n  function buildCode(fn, args) {\n    var params = args.map(function (arg) {\n      if (typeof arg === 'function') return arg.toString();\n      return JSON.stringify(arg != null ? arg : null);\n    }).join(',');\n    return \"(\".concat(fn.toString(), \")(\").concat(params, \")\");\n  }\n\n  function persistJS(items, context) {\n    return items.map(function (item) {\n      if (item.type === 'script') return wrapHtml('script', '', item.data);\n\n      if (item.type === 'iife') {\n        var _item$data3 = item.data,\n            fn = _item$data3.fn,\n            getParams = _item$data3.getParams;\n        return wrapHtml('script', escapeScript(buildCode(fn, (getParams == null ? void 0 : getParams(context)) || [])));\n      }\n\n      return '';\n    });\n  }\n\n  function persistCSS(items) {\n    return items.map(function (item) {\n      if (item.type === 'stylesheet') {\n        return wrapHtml('link', null, _extends({\n          rel: 'stylesheet'\n        }, item.data));\n      }\n      /* else if (item.type === 'style') */\n\n\n      return wrapHtml('style', item.data);\n    });\n  }\n\n  Math.random().toString(36).slice(2, 8);\n\n  function wrapFunction(fn, _ref3) {\n    var before = _ref3.before,\n        after = _ref3.after;\n    return function wrapped() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var ctx = {\n        args: args,\n        thisObj: this\n      };\n\n      try {\n        if (before) before(ctx);\n      } catch (_unused) {// ignore\n      }\n\n      ctx.result = fn.apply(ctx.thisObj, ctx.args);\n\n      try {\n        if (after) after(ctx);\n      } catch (_unused2) {// ignore\n      }\n\n      return ctx.result;\n    };\n  }\n\n  function memoize(fn) {\n    var cache = {};\n    return function memoized() {\n      var key = \"\".concat(arguments.length <= 0 ? undefined : arguments[0]);\n      var data = cache[key];\n\n      if (!data) {\n        data = {\n          value: fn.apply(void 0, arguments)\n        };\n        cache[key] = data;\n      }\n\n      return data.value;\n    };\n  }\n\n  function createElement(tagName, props, attrs) {\n    var el = document.createElement(tagName);\n\n    if (props) {\n      Object.entries(props).forEach(function (_ref4) {\n        var _ref5 = _slicedToArray(_ref4, 2),\n            key = _ref5[0],\n            value = _ref5[1];\n\n        el[key] = value;\n      });\n    }\n\n    if (attrs) {\n      Object.entries(attrs).forEach(function (_ref6) {\n        var _ref7 = _slicedToArray(_ref6, 2),\n            key = _ref7[0],\n            value = _ref7[1];\n\n        el.setAttribute(key, value);\n      });\n    }\n\n    return el;\n  }\n\n  var memoizedPreloadJS = memoize(function (url) {\n    document.head.append(createElement('link', {\n      rel: 'preload',\n      as: 'script',\n      href: url\n    }));\n  });\n\n  function loadJSItem(item, context) {\n    if (item.type === 'script') {\n      return new Promise(function (resolve, reject) {\n        var _item$data;\n\n        document.head.append(createElement('script', _extends({}, item.data, {\n          onload: resolve,\n          onerror: reject\n        }))); // Run inline script synchronously\n\n        if (!((_item$data = item.data) != null && _item$data.src)) resolve();\n      });\n    }\n\n    if (item.type === 'iife') {\n      var _item$data4 = item.data,\n          fn = _item$data4.fn,\n          getParams = _item$data4.getParams;\n      fn.apply(void 0, _toConsumableArray((getParams == null ? void 0 : getParams(context)) || []));\n    }\n  }\n\n  function loadJS(_x, _x2) {\n    return _loadJS.apply(this, arguments);\n  }\n\n  function _loadJS() {\n    _loadJS = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(items, context) {\n      var needPreload, _iterator5, _step5, item;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              needPreload = items.filter(function (item) {\n                var _item$data2;\n\n                return item.type === 'script' && ((_item$data2 = item.data) == null ? void 0 : _item$data2.src);\n              });\n              if (needPreload.length > 1) needPreload.forEach(function (item) {\n                return memoizedPreloadJS(item.data.src);\n              });\n              context = _extends({\n                getMarkmap: function getMarkmap() {\n                  return window.markmap;\n                }\n              }, context);\n              _iterator5 = _createForOfIteratorHelper(items);\n              _context.prev = 4;\n\n              _iterator5.s();\n\n            case 6:\n              if ((_step5 = _iterator5.n()).done) {\n                _context.next = 12;\n                break;\n              }\n\n              item = _step5.value;\n              _context.next = 10;\n              return loadJSItem(item, context);\n\n            case 10:\n              _context.next = 6;\n              break;\n\n            case 12:\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](4);\n\n              _iterator5.e(_context.t0);\n\n            case 17:\n              _context.prev = 17;\n\n              _iterator5.f();\n\n              return _context.finish(17);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 14, 17, 20]]);\n    }));\n    return _loadJS.apply(this, arguments);\n  }\n\n  var template = \"<!DOCTYPE html>\\n<html>\\n<head>\\n<meta charset=\\\"UTF-8\\\">\\n<meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n<meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\">\\n<title>Markmap</title>\\n<style>\\n* {\\n  margin: 0;\\n  padding: 0;\\n}\\n#mindmap {\\n  display: block;\\n  width: 100vw;\\n  height: 100vh;\\n}\\n</style>\\n<!--CSS-->\\n</head>\\n<body>\\n<svg id=\\\"mindmap\\\"></svg>\\n<!--JS-->\\n</body>\\n</html>\\n\";\n  var BASE_JS = [\"https://cdn.jsdelivr.net/npm/d3@\".concat(\"6.7.0\"), \"https://cdn.jsdelivr.net/npm/markmap-view@\".concat(\"0.2.7\")].map(function (src) {\n    return {\n      type: 'script',\n      data: {\n        src: src\n      }\n    };\n  });\n\n  function fillTemplate(root, assets, extra) {\n    if (typeof extra === 'function') {\n      extra = {\n        getOptions: extra\n      };\n    }\n\n    extra = _extends$1({\n      baseJs: BASE_JS\n    }, extra);\n    var scripts = assets.scripts,\n        styles = assets.styles;\n\n    var cssList = _toConsumableArray(styles ? persistCSS(styles) : []);\n\n    var context = {\n      getMarkmap: function getMarkmap() {\n        return window.markmap;\n      },\n      getOptions: extra.getOptions,\n      data: root\n    };\n    var jsList = [].concat(_toConsumableArray(persistJS(extra.baseJs)), _toConsumableArray(persistJS([].concat(_toConsumableArray(scripts || []), [{\n      type: 'iife',\n      data: {\n        fn: function fn(getMarkmap, getOptions, data) {\n          var _getMarkmap = getMarkmap(),\n              Markmap = _getMarkmap.Markmap;\n\n          window.mm = Markmap.create('svg#mindmap', getOptions == null ? void 0 : getOptions(), data);\n        },\n        getParams: function getParams(_ref8) {\n          var getMarkmap = _ref8.getMarkmap,\n              getOptions = _ref8.getOptions,\n              data = _ref8.data;\n          return [getMarkmap, getOptions, data];\n        }\n      }\n    }]), context)));\n    var html = template.replace('<!--CSS-->', function () {\n      return cssList.join('');\n    }).replace('<!--JS-->', function () {\n      return jsList.join('');\n    });\n    return html;\n  } // List of valid entities\n  //\n  // Generate with ./support/entities.js script\n  //\n\n  /*eslint quotes:0*/\n\n\n  var entities = {\n    \"Aacute\": \"\\xC1\",\n    \"aacute\": \"\\xE1\",\n    \"Abreve\": \"\\u0102\",\n    \"abreve\": \"\\u0103\",\n    \"ac\": \"\\u223E\",\n    \"acd\": \"\\u223F\",\n    \"acE\": \"\\u223E\\u0333\",\n    \"Acirc\": \"\\xC2\",\n    \"acirc\": \"\\xE2\",\n    \"acute\": \"\\xB4\",\n    \"Acy\": \"\\u0410\",\n    \"acy\": \"\\u0430\",\n    \"AElig\": \"\\xC6\",\n    \"aelig\": \"\\xE6\",\n    \"af\": \"\\u2061\",\n    \"Afr\": \"\\uD835\\uDD04\",\n    \"afr\": \"\\uD835\\uDD1E\",\n    \"Agrave\": \"\\xC0\",\n    \"agrave\": \"\\xE0\",\n    \"alefsym\": \"\\u2135\",\n    \"aleph\": \"\\u2135\",\n    \"Alpha\": \"\\u0391\",\n    \"alpha\": \"\\u03B1\",\n    \"Amacr\": \"\\u0100\",\n    \"amacr\": \"\\u0101\",\n    \"amalg\": \"\\u2A3F\",\n    \"AMP\": \"&\",\n    \"amp\": \"&\",\n    \"And\": \"\\u2A53\",\n    \"and\": \"\\u2227\",\n    \"andand\": \"\\u2A55\",\n    \"andd\": \"\\u2A5C\",\n    \"andslope\": \"\\u2A58\",\n    \"andv\": \"\\u2A5A\",\n    \"ang\": \"\\u2220\",\n    \"ange\": \"\\u29A4\",\n    \"angle\": \"\\u2220\",\n    \"angmsd\": \"\\u2221\",\n    \"angmsdaa\": \"\\u29A8\",\n    \"angmsdab\": \"\\u29A9\",\n    \"angmsdac\": \"\\u29AA\",\n    \"angmsdad\": \"\\u29AB\",\n    \"angmsdae\": \"\\u29AC\",\n    \"angmsdaf\": \"\\u29AD\",\n    \"angmsdag\": \"\\u29AE\",\n    \"angmsdah\": \"\\u29AF\",\n    \"angrt\": \"\\u221F\",\n    \"angrtvb\": \"\\u22BE\",\n    \"angrtvbd\": \"\\u299D\",\n    \"angsph\": \"\\u2222\",\n    \"angst\": \"\\xC5\",\n    \"angzarr\": \"\\u237C\",\n    \"Aogon\": \"\\u0104\",\n    \"aogon\": \"\\u0105\",\n    \"Aopf\": \"\\uD835\\uDD38\",\n    \"aopf\": \"\\uD835\\uDD52\",\n    \"ap\": \"\\u2248\",\n    \"apacir\": \"\\u2A6F\",\n    \"apE\": \"\\u2A70\",\n    \"ape\": \"\\u224A\",\n    \"apid\": \"\\u224B\",\n    \"apos\": \"'\",\n    \"ApplyFunction\": \"\\u2061\",\n    \"approx\": \"\\u2248\",\n    \"approxeq\": \"\\u224A\",\n    \"Aring\": \"\\xC5\",\n    \"aring\": \"\\xE5\",\n    \"Ascr\": \"\\uD835\\uDC9C\",\n    \"ascr\": \"\\uD835\\uDCB6\",\n    \"Assign\": \"\\u2254\",\n    \"ast\": \"*\",\n    \"asymp\": \"\\u2248\",\n    \"asympeq\": \"\\u224D\",\n    \"Atilde\": \"\\xC3\",\n    \"atilde\": \"\\xE3\",\n    \"Auml\": \"\\xC4\",\n    \"auml\": \"\\xE4\",\n    \"awconint\": \"\\u2233\",\n    \"awint\": \"\\u2A11\",\n    \"backcong\": \"\\u224C\",\n    \"backepsilon\": \"\\u03F6\",\n    \"backprime\": \"\\u2035\",\n    \"backsim\": \"\\u223D\",\n    \"backsimeq\": \"\\u22CD\",\n    \"Backslash\": \"\\u2216\",\n    \"Barv\": \"\\u2AE7\",\n    \"barvee\": \"\\u22BD\",\n    \"Barwed\": \"\\u2306\",\n    \"barwed\": \"\\u2305\",\n    \"barwedge\": \"\\u2305\",\n    \"bbrk\": \"\\u23B5\",\n    \"bbrktbrk\": \"\\u23B6\",\n    \"bcong\": \"\\u224C\",\n    \"Bcy\": \"\\u0411\",\n    \"bcy\": \"\\u0431\",\n    \"bdquo\": \"\\u201E\",\n    \"becaus\": \"\\u2235\",\n    \"Because\": \"\\u2235\",\n    \"because\": \"\\u2235\",\n    \"bemptyv\": \"\\u29B0\",\n    \"bepsi\": \"\\u03F6\",\n    \"bernou\": \"\\u212C\",\n    \"Bernoullis\": \"\\u212C\",\n    \"Beta\": \"\\u0392\",\n    \"beta\": \"\\u03B2\",\n    \"beth\": \"\\u2136\",\n    \"between\": \"\\u226C\",\n    \"Bfr\": \"\\uD835\\uDD05\",\n    \"bfr\": \"\\uD835\\uDD1F\",\n    \"bigcap\": \"\\u22C2\",\n    \"bigcirc\": \"\\u25EF\",\n    \"bigcup\": \"\\u22C3\",\n    \"bigodot\": \"\\u2A00\",\n    \"bigoplus\": \"\\u2A01\",\n    \"bigotimes\": \"\\u2A02\",\n    \"bigsqcup\": \"\\u2A06\",\n    \"bigstar\": \"\\u2605\",\n    \"bigtriangledown\": \"\\u25BD\",\n    \"bigtriangleup\": \"\\u25B3\",\n    \"biguplus\": \"\\u2A04\",\n    \"bigvee\": \"\\u22C1\",\n    \"bigwedge\": \"\\u22C0\",\n    \"bkarow\": \"\\u290D\",\n    \"blacklozenge\": \"\\u29EB\",\n    \"blacksquare\": \"\\u25AA\",\n    \"blacktriangle\": \"\\u25B4\",\n    \"blacktriangledown\": \"\\u25BE\",\n    \"blacktriangleleft\": \"\\u25C2\",\n    \"blacktriangleright\": \"\\u25B8\",\n    \"blank\": \"\\u2423\",\n    \"blk12\": \"\\u2592\",\n    \"blk14\": \"\\u2591\",\n    \"blk34\": \"\\u2593\",\n    \"block\": \"\\u2588\",\n    \"bne\": \"=\\u20E5\",\n    \"bnequiv\": \"\\u2261\\u20E5\",\n    \"bNot\": \"\\u2AED\",\n    \"bnot\": \"\\u2310\",\n    \"Bopf\": \"\\uD835\\uDD39\",\n    \"bopf\": \"\\uD835\\uDD53\",\n    \"bot\": \"\\u22A5\",\n    \"bottom\": \"\\u22A5\",\n    \"bowtie\": \"\\u22C8\",\n    \"boxbox\": \"\\u29C9\",\n    \"boxDL\": \"\\u2557\",\n    \"boxDl\": \"\\u2556\",\n    \"boxdL\": \"\\u2555\",\n    \"boxdl\": \"\\u2510\",\n    \"boxDR\": \"\\u2554\",\n    \"boxDr\": \"\\u2553\",\n    \"boxdR\": \"\\u2552\",\n    \"boxdr\": \"\\u250C\",\n    \"boxH\": \"\\u2550\",\n    \"boxh\": \"\\u2500\",\n    \"boxHD\": \"\\u2566\",\n    \"boxHd\": \"\\u2564\",\n    \"boxhD\": \"\\u2565\",\n    \"boxhd\": \"\\u252C\",\n    \"boxHU\": \"\\u2569\",\n    \"boxHu\": \"\\u2567\",\n    \"boxhU\": \"\\u2568\",\n    \"boxhu\": \"\\u2534\",\n    \"boxminus\": \"\\u229F\",\n    \"boxplus\": \"\\u229E\",\n    \"boxtimes\": \"\\u22A0\",\n    \"boxUL\": \"\\u255D\",\n    \"boxUl\": \"\\u255C\",\n    \"boxuL\": \"\\u255B\",\n    \"boxul\": \"\\u2518\",\n    \"boxUR\": \"\\u255A\",\n    \"boxUr\": \"\\u2559\",\n    \"boxuR\": \"\\u2558\",\n    \"boxur\": \"\\u2514\",\n    \"boxV\": \"\\u2551\",\n    \"boxv\": \"\\u2502\",\n    \"boxVH\": \"\\u256C\",\n    \"boxVh\": \"\\u256B\",\n    \"boxvH\": \"\\u256A\",\n    \"boxvh\": \"\\u253C\",\n    \"boxVL\": \"\\u2563\",\n    \"boxVl\": \"\\u2562\",\n    \"boxvL\": \"\\u2561\",\n    \"boxvl\": \"\\u2524\",\n    \"boxVR\": \"\\u2560\",\n    \"boxVr\": \"\\u255F\",\n    \"boxvR\": \"\\u255E\",\n    \"boxvr\": \"\\u251C\",\n    \"bprime\": \"\\u2035\",\n    \"Breve\": \"\\u02D8\",\n    \"breve\": \"\\u02D8\",\n    \"brvbar\": \"\\xA6\",\n    \"Bscr\": \"\\u212C\",\n    \"bscr\": \"\\uD835\\uDCB7\",\n    \"bsemi\": \"\\u204F\",\n    \"bsim\": \"\\u223D\",\n    \"bsime\": \"\\u22CD\",\n    \"bsol\": \"\\\\\",\n    \"bsolb\": \"\\u29C5\",\n    \"bsolhsub\": \"\\u27C8\",\n    \"bull\": \"\\u2022\",\n    \"bullet\": \"\\u2022\",\n    \"bump\": \"\\u224E\",\n    \"bumpE\": \"\\u2AAE\",\n    \"bumpe\": \"\\u224F\",\n    \"Bumpeq\": \"\\u224E\",\n    \"bumpeq\": \"\\u224F\",\n    \"Cacute\": \"\\u0106\",\n    \"cacute\": \"\\u0107\",\n    \"Cap\": \"\\u22D2\",\n    \"cap\": \"\\u2229\",\n    \"capand\": \"\\u2A44\",\n    \"capbrcup\": \"\\u2A49\",\n    \"capcap\": \"\\u2A4B\",\n    \"capcup\": \"\\u2A47\",\n    \"capdot\": \"\\u2A40\",\n    \"CapitalDifferentialD\": \"\\u2145\",\n    \"caps\": \"\\u2229\\uFE00\",\n    \"caret\": \"\\u2041\",\n    \"caron\": \"\\u02C7\",\n    \"Cayleys\": \"\\u212D\",\n    \"ccaps\": \"\\u2A4D\",\n    \"Ccaron\": \"\\u010C\",\n    \"ccaron\": \"\\u010D\",\n    \"Ccedil\": \"\\xC7\",\n    \"ccedil\": \"\\xE7\",\n    \"Ccirc\": \"\\u0108\",\n    \"ccirc\": \"\\u0109\",\n    \"Cconint\": \"\\u2230\",\n    \"ccups\": \"\\u2A4C\",\n    \"ccupssm\": \"\\u2A50\",\n    \"Cdot\": \"\\u010A\",\n    \"cdot\": \"\\u010B\",\n    \"cedil\": \"\\xB8\",\n    \"Cedilla\": \"\\xB8\",\n    \"cemptyv\": \"\\u29B2\",\n    \"cent\": \"\\xA2\",\n    \"CenterDot\": \"\\xB7\",\n    \"centerdot\": \"\\xB7\",\n    \"Cfr\": \"\\u212D\",\n    \"cfr\": \"\\uD835\\uDD20\",\n    \"CHcy\": \"\\u0427\",\n    \"chcy\": \"\\u0447\",\n    \"check\": \"\\u2713\",\n    \"checkmark\": \"\\u2713\",\n    \"Chi\": \"\\u03A7\",\n    \"chi\": \"\\u03C7\",\n    \"cir\": \"\\u25CB\",\n    \"circ\": \"\\u02C6\",\n    \"circeq\": \"\\u2257\",\n    \"circlearrowleft\": \"\\u21BA\",\n    \"circlearrowright\": \"\\u21BB\",\n    \"circledast\": \"\\u229B\",\n    \"circledcirc\": \"\\u229A\",\n    \"circleddash\": \"\\u229D\",\n    \"CircleDot\": \"\\u2299\",\n    \"circledR\": \"\\xAE\",\n    \"circledS\": \"\\u24C8\",\n    \"CircleMinus\": \"\\u2296\",\n    \"CirclePlus\": \"\\u2295\",\n    \"CircleTimes\": \"\\u2297\",\n    \"cirE\": \"\\u29C3\",\n    \"cire\": \"\\u2257\",\n    \"cirfnint\": \"\\u2A10\",\n    \"cirmid\": \"\\u2AEF\",\n    \"cirscir\": \"\\u29C2\",\n    \"ClockwiseContourIntegral\": \"\\u2232\",\n    \"CloseCurlyDoubleQuote\": \"\\u201D\",\n    \"CloseCurlyQuote\": \"\\u2019\",\n    \"clubs\": \"\\u2663\",\n    \"clubsuit\": \"\\u2663\",\n    \"Colon\": \"\\u2237\",\n    \"colon\": \":\",\n    \"Colone\": \"\\u2A74\",\n    \"colone\": \"\\u2254\",\n    \"coloneq\": \"\\u2254\",\n    \"comma\": \",\",\n    \"commat\": \"@\",\n    \"comp\": \"\\u2201\",\n    \"compfn\": \"\\u2218\",\n    \"complement\": \"\\u2201\",\n    \"complexes\": \"\\u2102\",\n    \"cong\": \"\\u2245\",\n    \"congdot\": \"\\u2A6D\",\n    \"Congruent\": \"\\u2261\",\n    \"Conint\": \"\\u222F\",\n    \"conint\": \"\\u222E\",\n    \"ContourIntegral\": \"\\u222E\",\n    \"Copf\": \"\\u2102\",\n    \"copf\": \"\\uD835\\uDD54\",\n    \"coprod\": \"\\u2210\",\n    \"Coproduct\": \"\\u2210\",\n    \"COPY\": \"\\xA9\",\n    \"copy\": \"\\xA9\",\n    \"copysr\": \"\\u2117\",\n    \"CounterClockwiseContourIntegral\": \"\\u2233\",\n    \"crarr\": \"\\u21B5\",\n    \"Cross\": \"\\u2A2F\",\n    \"cross\": \"\\u2717\",\n    \"Cscr\": \"\\uD835\\uDC9E\",\n    \"cscr\": \"\\uD835\\uDCB8\",\n    \"csub\": \"\\u2ACF\",\n    \"csube\": \"\\u2AD1\",\n    \"csup\": \"\\u2AD0\",\n    \"csupe\": \"\\u2AD2\",\n    \"ctdot\": \"\\u22EF\",\n    \"cudarrl\": \"\\u2938\",\n    \"cudarrr\": \"\\u2935\",\n    \"cuepr\": \"\\u22DE\",\n    \"cuesc\": \"\\u22DF\",\n    \"cularr\": \"\\u21B6\",\n    \"cularrp\": \"\\u293D\",\n    \"Cup\": \"\\u22D3\",\n    \"cup\": \"\\u222A\",\n    \"cupbrcap\": \"\\u2A48\",\n    \"CupCap\": \"\\u224D\",\n    \"cupcap\": \"\\u2A46\",\n    \"cupcup\": \"\\u2A4A\",\n    \"cupdot\": \"\\u228D\",\n    \"cupor\": \"\\u2A45\",\n    \"cups\": \"\\u222A\\uFE00\",\n    \"curarr\": \"\\u21B7\",\n    \"curarrm\": \"\\u293C\",\n    \"curlyeqprec\": \"\\u22DE\",\n    \"curlyeqsucc\": \"\\u22DF\",\n    \"curlyvee\": \"\\u22CE\",\n    \"curlywedge\": \"\\u22CF\",\n    \"curren\": \"\\xA4\",\n    \"curvearrowleft\": \"\\u21B6\",\n    \"curvearrowright\": \"\\u21B7\",\n    \"cuvee\": \"\\u22CE\",\n    \"cuwed\": \"\\u22CF\",\n    \"cwconint\": \"\\u2232\",\n    \"cwint\": \"\\u2231\",\n    \"cylcty\": \"\\u232D\",\n    \"Dagger\": \"\\u2021\",\n    \"dagger\": \"\\u2020\",\n    \"daleth\": \"\\u2138\",\n    \"Darr\": \"\\u21A1\",\n    \"dArr\": \"\\u21D3\",\n    \"darr\": \"\\u2193\",\n    \"dash\": \"\\u2010\",\n    \"Dashv\": \"\\u2AE4\",\n    \"dashv\": \"\\u22A3\",\n    \"dbkarow\": \"\\u290F\",\n    \"dblac\": \"\\u02DD\",\n    \"Dcaron\": \"\\u010E\",\n    \"dcaron\": \"\\u010F\",\n    \"Dcy\": \"\\u0414\",\n    \"dcy\": \"\\u0434\",\n    \"DD\": \"\\u2145\",\n    \"dd\": \"\\u2146\",\n    \"ddagger\": \"\\u2021\",\n    \"ddarr\": \"\\u21CA\",\n    \"DDotrahd\": \"\\u2911\",\n    \"ddotseq\": \"\\u2A77\",\n    \"deg\": \"\\xB0\",\n    \"Del\": \"\\u2207\",\n    \"Delta\": \"\\u0394\",\n    \"delta\": \"\\u03B4\",\n    \"demptyv\": \"\\u29B1\",\n    \"dfisht\": \"\\u297F\",\n    \"Dfr\": \"\\uD835\\uDD07\",\n    \"dfr\": \"\\uD835\\uDD21\",\n    \"dHar\": \"\\u2965\",\n    \"dharl\": \"\\u21C3\",\n    \"dharr\": \"\\u21C2\",\n    \"DiacriticalAcute\": \"\\xB4\",\n    \"DiacriticalDot\": \"\\u02D9\",\n    \"DiacriticalDoubleAcute\": \"\\u02DD\",\n    \"DiacriticalGrave\": \"`\",\n    \"DiacriticalTilde\": \"\\u02DC\",\n    \"diam\": \"\\u22C4\",\n    \"Diamond\": \"\\u22C4\",\n    \"diamond\": \"\\u22C4\",\n    \"diamondsuit\": \"\\u2666\",\n    \"diams\": \"\\u2666\",\n    \"die\": \"\\xA8\",\n    \"DifferentialD\": \"\\u2146\",\n    \"digamma\": \"\\u03DD\",\n    \"disin\": \"\\u22F2\",\n    \"div\": \"\\xF7\",\n    \"divide\": \"\\xF7\",\n    \"divideontimes\": \"\\u22C7\",\n    \"divonx\": \"\\u22C7\",\n    \"DJcy\": \"\\u0402\",\n    \"djcy\": \"\\u0452\",\n    \"dlcorn\": \"\\u231E\",\n    \"dlcrop\": \"\\u230D\",\n    \"dollar\": \"$\",\n    \"Dopf\": \"\\uD835\\uDD3B\",\n    \"dopf\": \"\\uD835\\uDD55\",\n    \"Dot\": \"\\xA8\",\n    \"dot\": \"\\u02D9\",\n    \"DotDot\": \"\\u20DC\",\n    \"doteq\": \"\\u2250\",\n    \"doteqdot\": \"\\u2251\",\n    \"DotEqual\": \"\\u2250\",\n    \"dotminus\": \"\\u2238\",\n    \"dotplus\": \"\\u2214\",\n    \"dotsquare\": \"\\u22A1\",\n    \"doublebarwedge\": \"\\u2306\",\n    \"DoubleContourIntegral\": \"\\u222F\",\n    \"DoubleDot\": \"\\xA8\",\n    \"DoubleDownArrow\": \"\\u21D3\",\n    \"DoubleLeftArrow\": \"\\u21D0\",\n    \"DoubleLeftRightArrow\": \"\\u21D4\",\n    \"DoubleLeftTee\": \"\\u2AE4\",\n    \"DoubleLongLeftArrow\": \"\\u27F8\",\n    \"DoubleLongLeftRightArrow\": \"\\u27FA\",\n    \"DoubleLongRightArrow\": \"\\u27F9\",\n    \"DoubleRightArrow\": \"\\u21D2\",\n    \"DoubleRightTee\": \"\\u22A8\",\n    \"DoubleUpArrow\": \"\\u21D1\",\n    \"DoubleUpDownArrow\": \"\\u21D5\",\n    \"DoubleVerticalBar\": \"\\u2225\",\n    \"DownArrow\": \"\\u2193\",\n    \"Downarrow\": \"\\u21D3\",\n    \"downarrow\": \"\\u2193\",\n    \"DownArrowBar\": \"\\u2913\",\n    \"DownArrowUpArrow\": \"\\u21F5\",\n    \"DownBreve\": \"\\u0311\",\n    \"downdownarrows\": \"\\u21CA\",\n    \"downharpoonleft\": \"\\u21C3\",\n    \"downharpoonright\": \"\\u21C2\",\n    \"DownLeftRightVector\": \"\\u2950\",\n    \"DownLeftTeeVector\": \"\\u295E\",\n    \"DownLeftVector\": \"\\u21BD\",\n    \"DownLeftVectorBar\": \"\\u2956\",\n    \"DownRightTeeVector\": \"\\u295F\",\n    \"DownRightVector\": \"\\u21C1\",\n    \"DownRightVectorBar\": \"\\u2957\",\n    \"DownTee\": \"\\u22A4\",\n    \"DownTeeArrow\": \"\\u21A7\",\n    \"drbkarow\": \"\\u2910\",\n    \"drcorn\": \"\\u231F\",\n    \"drcrop\": \"\\u230C\",\n    \"Dscr\": \"\\uD835\\uDC9F\",\n    \"dscr\": \"\\uD835\\uDCB9\",\n    \"DScy\": \"\\u0405\",\n    \"dscy\": \"\\u0455\",\n    \"dsol\": \"\\u29F6\",\n    \"Dstrok\": \"\\u0110\",\n    \"dstrok\": \"\\u0111\",\n    \"dtdot\": \"\\u22F1\",\n    \"dtri\": \"\\u25BF\",\n    \"dtrif\": \"\\u25BE\",\n    \"duarr\": \"\\u21F5\",\n    \"duhar\": \"\\u296F\",\n    \"dwangle\": \"\\u29A6\",\n    \"DZcy\": \"\\u040F\",\n    \"dzcy\": \"\\u045F\",\n    \"dzigrarr\": \"\\u27FF\",\n    \"Eacute\": \"\\xC9\",\n    \"eacute\": \"\\xE9\",\n    \"easter\": \"\\u2A6E\",\n    \"Ecaron\": \"\\u011A\",\n    \"ecaron\": \"\\u011B\",\n    \"ecir\": \"\\u2256\",\n    \"Ecirc\": \"\\xCA\",\n    \"ecirc\": \"\\xEA\",\n    \"ecolon\": \"\\u2255\",\n    \"Ecy\": \"\\u042D\",\n    \"ecy\": \"\\u044D\",\n    \"eDDot\": \"\\u2A77\",\n    \"Edot\": \"\\u0116\",\n    \"eDot\": \"\\u2251\",\n    \"edot\": \"\\u0117\",\n    \"ee\": \"\\u2147\",\n    \"efDot\": \"\\u2252\",\n    \"Efr\": \"\\uD835\\uDD08\",\n    \"efr\": \"\\uD835\\uDD22\",\n    \"eg\": \"\\u2A9A\",\n    \"Egrave\": \"\\xC8\",\n    \"egrave\": \"\\xE8\",\n    \"egs\": \"\\u2A96\",\n    \"egsdot\": \"\\u2A98\",\n    \"el\": \"\\u2A99\",\n    \"Element\": \"\\u2208\",\n    \"elinters\": \"\\u23E7\",\n    \"ell\": \"\\u2113\",\n    \"els\": \"\\u2A95\",\n    \"elsdot\": \"\\u2A97\",\n    \"Emacr\": \"\\u0112\",\n    \"emacr\": \"\\u0113\",\n    \"empty\": \"\\u2205\",\n    \"emptyset\": \"\\u2205\",\n    \"EmptySmallSquare\": \"\\u25FB\",\n    \"emptyv\": \"\\u2205\",\n    \"EmptyVerySmallSquare\": \"\\u25AB\",\n    \"emsp\": \"\\u2003\",\n    \"emsp13\": \"\\u2004\",\n    \"emsp14\": \"\\u2005\",\n    \"ENG\": \"\\u014A\",\n    \"eng\": \"\\u014B\",\n    \"ensp\": \"\\u2002\",\n    \"Eogon\": \"\\u0118\",\n    \"eogon\": \"\\u0119\",\n    \"Eopf\": \"\\uD835\\uDD3C\",\n    \"eopf\": \"\\uD835\\uDD56\",\n    \"epar\": \"\\u22D5\",\n    \"eparsl\": \"\\u29E3\",\n    \"eplus\": \"\\u2A71\",\n    \"epsi\": \"\\u03B5\",\n    \"Epsilon\": \"\\u0395\",\n    \"epsilon\": \"\\u03B5\",\n    \"epsiv\": \"\\u03F5\",\n    \"eqcirc\": \"\\u2256\",\n    \"eqcolon\": \"\\u2255\",\n    \"eqsim\": \"\\u2242\",\n    \"eqslantgtr\": \"\\u2A96\",\n    \"eqslantless\": \"\\u2A95\",\n    \"Equal\": \"\\u2A75\",\n    \"equals\": \"=\",\n    \"EqualTilde\": \"\\u2242\",\n    \"equest\": \"\\u225F\",\n    \"Equilibrium\": \"\\u21CC\",\n    \"equiv\": \"\\u2261\",\n    \"equivDD\": \"\\u2A78\",\n    \"eqvparsl\": \"\\u29E5\",\n    \"erarr\": \"\\u2971\",\n    \"erDot\": \"\\u2253\",\n    \"Escr\": \"\\u2130\",\n    \"escr\": \"\\u212F\",\n    \"esdot\": \"\\u2250\",\n    \"Esim\": \"\\u2A73\",\n    \"esim\": \"\\u2242\",\n    \"Eta\": \"\\u0397\",\n    \"eta\": \"\\u03B7\",\n    \"ETH\": \"\\xD0\",\n    \"eth\": \"\\xF0\",\n    \"Euml\": \"\\xCB\",\n    \"euml\": \"\\xEB\",\n    \"euro\": \"\\u20AC\",\n    \"excl\": \"!\",\n    \"exist\": \"\\u2203\",\n    \"Exists\": \"\\u2203\",\n    \"expectation\": \"\\u2130\",\n    \"ExponentialE\": \"\\u2147\",\n    \"exponentiale\": \"\\u2147\",\n    \"fallingdotseq\": \"\\u2252\",\n    \"Fcy\": \"\\u0424\",\n    \"fcy\": \"\\u0444\",\n    \"female\": \"\\u2640\",\n    \"ffilig\": \"\\uFB03\",\n    \"fflig\": \"\\uFB00\",\n    \"ffllig\": \"\\uFB04\",\n    \"Ffr\": \"\\uD835\\uDD09\",\n    \"ffr\": \"\\uD835\\uDD23\",\n    \"filig\": \"\\uFB01\",\n    \"FilledSmallSquare\": \"\\u25FC\",\n    \"FilledVerySmallSquare\": \"\\u25AA\",\n    \"fjlig\": \"fj\",\n    \"flat\": \"\\u266D\",\n    \"fllig\": \"\\uFB02\",\n    \"fltns\": \"\\u25B1\",\n    \"fnof\": \"\\u0192\",\n    \"Fopf\": \"\\uD835\\uDD3D\",\n    \"fopf\": \"\\uD835\\uDD57\",\n    \"ForAll\": \"\\u2200\",\n    \"forall\": \"\\u2200\",\n    \"fork\": \"\\u22D4\",\n    \"forkv\": \"\\u2AD9\",\n    \"Fouriertrf\": \"\\u2131\",\n    \"fpartint\": \"\\u2A0D\",\n    \"frac12\": \"\\xBD\",\n    \"frac13\": \"\\u2153\",\n    \"frac14\": \"\\xBC\",\n    \"frac15\": \"\\u2155\",\n    \"frac16\": \"\\u2159\",\n    \"frac18\": \"\\u215B\",\n    \"frac23\": \"\\u2154\",\n    \"frac25\": \"\\u2156\",\n    \"frac34\": \"\\xBE\",\n    \"frac35\": \"\\u2157\",\n    \"frac38\": \"\\u215C\",\n    \"frac45\": \"\\u2158\",\n    \"frac56\": \"\\u215A\",\n    \"frac58\": \"\\u215D\",\n    \"frac78\": \"\\u215E\",\n    \"frasl\": \"\\u2044\",\n    \"frown\": \"\\u2322\",\n    \"Fscr\": \"\\u2131\",\n    \"fscr\": \"\\uD835\\uDCBB\",\n    \"gacute\": \"\\u01F5\",\n    \"Gamma\": \"\\u0393\",\n    \"gamma\": \"\\u03B3\",\n    \"Gammad\": \"\\u03DC\",\n    \"gammad\": \"\\u03DD\",\n    \"gap\": \"\\u2A86\",\n    \"Gbreve\": \"\\u011E\",\n    \"gbreve\": \"\\u011F\",\n    \"Gcedil\": \"\\u0122\",\n    \"Gcirc\": \"\\u011C\",\n    \"gcirc\": \"\\u011D\",\n    \"Gcy\": \"\\u0413\",\n    \"gcy\": \"\\u0433\",\n    \"Gdot\": \"\\u0120\",\n    \"gdot\": \"\\u0121\",\n    \"gE\": \"\\u2267\",\n    \"ge\": \"\\u2265\",\n    \"gEl\": \"\\u2A8C\",\n    \"gel\": \"\\u22DB\",\n    \"geq\": \"\\u2265\",\n    \"geqq\": \"\\u2267\",\n    \"geqslant\": \"\\u2A7E\",\n    \"ges\": \"\\u2A7E\",\n    \"gescc\": \"\\u2AA9\",\n    \"gesdot\": \"\\u2A80\",\n    \"gesdoto\": \"\\u2A82\",\n    \"gesdotol\": \"\\u2A84\",\n    \"gesl\": \"\\u22DB\\uFE00\",\n    \"gesles\": \"\\u2A94\",\n    \"Gfr\": \"\\uD835\\uDD0A\",\n    \"gfr\": \"\\uD835\\uDD24\",\n    \"Gg\": \"\\u22D9\",\n    \"gg\": \"\\u226B\",\n    \"ggg\": \"\\u22D9\",\n    \"gimel\": \"\\u2137\",\n    \"GJcy\": \"\\u0403\",\n    \"gjcy\": \"\\u0453\",\n    \"gl\": \"\\u2277\",\n    \"gla\": \"\\u2AA5\",\n    \"glE\": \"\\u2A92\",\n    \"glj\": \"\\u2AA4\",\n    \"gnap\": \"\\u2A8A\",\n    \"gnapprox\": \"\\u2A8A\",\n    \"gnE\": \"\\u2269\",\n    \"gne\": \"\\u2A88\",\n    \"gneq\": \"\\u2A88\",\n    \"gneqq\": \"\\u2269\",\n    \"gnsim\": \"\\u22E7\",\n    \"Gopf\": \"\\uD835\\uDD3E\",\n    \"gopf\": \"\\uD835\\uDD58\",\n    \"grave\": \"`\",\n    \"GreaterEqual\": \"\\u2265\",\n    \"GreaterEqualLess\": \"\\u22DB\",\n    \"GreaterFullEqual\": \"\\u2267\",\n    \"GreaterGreater\": \"\\u2AA2\",\n    \"GreaterLess\": \"\\u2277\",\n    \"GreaterSlantEqual\": \"\\u2A7E\",\n    \"GreaterTilde\": \"\\u2273\",\n    \"Gscr\": \"\\uD835\\uDCA2\",\n    \"gscr\": \"\\u210A\",\n    \"gsim\": \"\\u2273\",\n    \"gsime\": \"\\u2A8E\",\n    \"gsiml\": \"\\u2A90\",\n    \"GT\": \">\",\n    \"Gt\": \"\\u226B\",\n    \"gt\": \">\",\n    \"gtcc\": \"\\u2AA7\",\n    \"gtcir\": \"\\u2A7A\",\n    \"gtdot\": \"\\u22D7\",\n    \"gtlPar\": \"\\u2995\",\n    \"gtquest\": \"\\u2A7C\",\n    \"gtrapprox\": \"\\u2A86\",\n    \"gtrarr\": \"\\u2978\",\n    \"gtrdot\": \"\\u22D7\",\n    \"gtreqless\": \"\\u22DB\",\n    \"gtreqqless\": \"\\u2A8C\",\n    \"gtrless\": \"\\u2277\",\n    \"gtrsim\": \"\\u2273\",\n    \"gvertneqq\": \"\\u2269\\uFE00\",\n    \"gvnE\": \"\\u2269\\uFE00\",\n    \"Hacek\": \"\\u02C7\",\n    \"hairsp\": \"\\u200A\",\n    \"half\": \"\\xBD\",\n    \"hamilt\": \"\\u210B\",\n    \"HARDcy\": \"\\u042A\",\n    \"hardcy\": \"\\u044A\",\n    \"hArr\": \"\\u21D4\",\n    \"harr\": \"\\u2194\",\n    \"harrcir\": \"\\u2948\",\n    \"harrw\": \"\\u21AD\",\n    \"Hat\": \"^\",\n    \"hbar\": \"\\u210F\",\n    \"Hcirc\": \"\\u0124\",\n    \"hcirc\": \"\\u0125\",\n    \"hearts\": \"\\u2665\",\n    \"heartsuit\": \"\\u2665\",\n    \"hellip\": \"\\u2026\",\n    \"hercon\": \"\\u22B9\",\n    \"Hfr\": \"\\u210C\",\n    \"hfr\": \"\\uD835\\uDD25\",\n    \"HilbertSpace\": \"\\u210B\",\n    \"hksearow\": \"\\u2925\",\n    \"hkswarow\": \"\\u2926\",\n    \"hoarr\": \"\\u21FF\",\n    \"homtht\": \"\\u223B\",\n    \"hookleftarrow\": \"\\u21A9\",\n    \"hookrightarrow\": \"\\u21AA\",\n    \"Hopf\": \"\\u210D\",\n    \"hopf\": \"\\uD835\\uDD59\",\n    \"horbar\": \"\\u2015\",\n    \"HorizontalLine\": \"\\u2500\",\n    \"Hscr\": \"\\u210B\",\n    \"hscr\": \"\\uD835\\uDCBD\",\n    \"hslash\": \"\\u210F\",\n    \"Hstrok\": \"\\u0126\",\n    \"hstrok\": \"\\u0127\",\n    \"HumpDownHump\": \"\\u224E\",\n    \"HumpEqual\": \"\\u224F\",\n    \"hybull\": \"\\u2043\",\n    \"hyphen\": \"\\u2010\",\n    \"Iacute\": \"\\xCD\",\n    \"iacute\": \"\\xED\",\n    \"ic\": \"\\u2063\",\n    \"Icirc\": \"\\xCE\",\n    \"icirc\": \"\\xEE\",\n    \"Icy\": \"\\u0418\",\n    \"icy\": \"\\u0438\",\n    \"Idot\": \"\\u0130\",\n    \"IEcy\": \"\\u0415\",\n    \"iecy\": \"\\u0435\",\n    \"iexcl\": \"\\xA1\",\n    \"iff\": \"\\u21D4\",\n    \"Ifr\": \"\\u2111\",\n    \"ifr\": \"\\uD835\\uDD26\",\n    \"Igrave\": \"\\xCC\",\n    \"igrave\": \"\\xEC\",\n    \"ii\": \"\\u2148\",\n    \"iiiint\": \"\\u2A0C\",\n    \"iiint\": \"\\u222D\",\n    \"iinfin\": \"\\u29DC\",\n    \"iiota\": \"\\u2129\",\n    \"IJlig\": \"\\u0132\",\n    \"ijlig\": \"\\u0133\",\n    \"Im\": \"\\u2111\",\n    \"Imacr\": \"\\u012A\",\n    \"imacr\": \"\\u012B\",\n    \"image\": \"\\u2111\",\n    \"ImaginaryI\": \"\\u2148\",\n    \"imagline\": \"\\u2110\",\n    \"imagpart\": \"\\u2111\",\n    \"imath\": \"\\u0131\",\n    \"imof\": \"\\u22B7\",\n    \"imped\": \"\\u01B5\",\n    \"Implies\": \"\\u21D2\",\n    \"in\": \"\\u2208\",\n    \"incare\": \"\\u2105\",\n    \"infin\": \"\\u221E\",\n    \"infintie\": \"\\u29DD\",\n    \"inodot\": \"\\u0131\",\n    \"Int\": \"\\u222C\",\n    \"int\": \"\\u222B\",\n    \"intcal\": \"\\u22BA\",\n    \"integers\": \"\\u2124\",\n    \"Integral\": \"\\u222B\",\n    \"intercal\": \"\\u22BA\",\n    \"Intersection\": \"\\u22C2\",\n    \"intlarhk\": \"\\u2A17\",\n    \"intprod\": \"\\u2A3C\",\n    \"InvisibleComma\": \"\\u2063\",\n    \"InvisibleTimes\": \"\\u2062\",\n    \"IOcy\": \"\\u0401\",\n    \"iocy\": \"\\u0451\",\n    \"Iogon\": \"\\u012E\",\n    \"iogon\": \"\\u012F\",\n    \"Iopf\": \"\\uD835\\uDD40\",\n    \"iopf\": \"\\uD835\\uDD5A\",\n    \"Iota\": \"\\u0399\",\n    \"iota\": \"\\u03B9\",\n    \"iprod\": \"\\u2A3C\",\n    \"iquest\": \"\\xBF\",\n    \"Iscr\": \"\\u2110\",\n    \"iscr\": \"\\uD835\\uDCBE\",\n    \"isin\": \"\\u2208\",\n    \"isindot\": \"\\u22F5\",\n    \"isinE\": \"\\u22F9\",\n    \"isins\": \"\\u22F4\",\n    \"isinsv\": \"\\u22F3\",\n    \"isinv\": \"\\u2208\",\n    \"it\": \"\\u2062\",\n    \"Itilde\": \"\\u0128\",\n    \"itilde\": \"\\u0129\",\n    \"Iukcy\": \"\\u0406\",\n    \"iukcy\": \"\\u0456\",\n    \"Iuml\": \"\\xCF\",\n    \"iuml\": \"\\xEF\",\n    \"Jcirc\": \"\\u0134\",\n    \"jcirc\": \"\\u0135\",\n    \"Jcy\": \"\\u0419\",\n    \"jcy\": \"\\u0439\",\n    \"Jfr\": \"\\uD835\\uDD0D\",\n    \"jfr\": \"\\uD835\\uDD27\",\n    \"jmath\": \"\\u0237\",\n    \"Jopf\": \"\\uD835\\uDD41\",\n    \"jopf\": \"\\uD835\\uDD5B\",\n    \"Jscr\": \"\\uD835\\uDCA5\",\n    \"jscr\": \"\\uD835\\uDCBF\",\n    \"Jsercy\": \"\\u0408\",\n    \"jsercy\": \"\\u0458\",\n    \"Jukcy\": \"\\u0404\",\n    \"jukcy\": \"\\u0454\",\n    \"Kappa\": \"\\u039A\",\n    \"kappa\": \"\\u03BA\",\n    \"kappav\": \"\\u03F0\",\n    \"Kcedil\": \"\\u0136\",\n    \"kcedil\": \"\\u0137\",\n    \"Kcy\": \"\\u041A\",\n    \"kcy\": \"\\u043A\",\n    \"Kfr\": \"\\uD835\\uDD0E\",\n    \"kfr\": \"\\uD835\\uDD28\",\n    \"kgreen\": \"\\u0138\",\n    \"KHcy\": \"\\u0425\",\n    \"khcy\": \"\\u0445\",\n    \"KJcy\": \"\\u040C\",\n    \"kjcy\": \"\\u045C\",\n    \"Kopf\": \"\\uD835\\uDD42\",\n    \"kopf\": \"\\uD835\\uDD5C\",\n    \"Kscr\": \"\\uD835\\uDCA6\",\n    \"kscr\": \"\\uD835\\uDCC0\",\n    \"lAarr\": \"\\u21DA\",\n    \"Lacute\": \"\\u0139\",\n    \"lacute\": \"\\u013A\",\n    \"laemptyv\": \"\\u29B4\",\n    \"lagran\": \"\\u2112\",\n    \"Lambda\": \"\\u039B\",\n    \"lambda\": \"\\u03BB\",\n    \"Lang\": \"\\u27EA\",\n    \"lang\": \"\\u27E8\",\n    \"langd\": \"\\u2991\",\n    \"langle\": \"\\u27E8\",\n    \"lap\": \"\\u2A85\",\n    \"Laplacetrf\": \"\\u2112\",\n    \"laquo\": \"\\xAB\",\n    \"Larr\": \"\\u219E\",\n    \"lArr\": \"\\u21D0\",\n    \"larr\": \"\\u2190\",\n    \"larrb\": \"\\u21E4\",\n    \"larrbfs\": \"\\u291F\",\n    \"larrfs\": \"\\u291D\",\n    \"larrhk\": \"\\u21A9\",\n    \"larrlp\": \"\\u21AB\",\n    \"larrpl\": \"\\u2939\",\n    \"larrsim\": \"\\u2973\",\n    \"larrtl\": \"\\u21A2\",\n    \"lat\": \"\\u2AAB\",\n    \"lAtail\": \"\\u291B\",\n    \"latail\": \"\\u2919\",\n    \"late\": \"\\u2AAD\",\n    \"lates\": \"\\u2AAD\\uFE00\",\n    \"lBarr\": \"\\u290E\",\n    \"lbarr\": \"\\u290C\",\n    \"lbbrk\": \"\\u2772\",\n    \"lbrace\": \"{\",\n    \"lbrack\": \"[\",\n    \"lbrke\": \"\\u298B\",\n    \"lbrksld\": \"\\u298F\",\n    \"lbrkslu\": \"\\u298D\",\n    \"Lcaron\": \"\\u013D\",\n    \"lcaron\": \"\\u013E\",\n    \"Lcedil\": \"\\u013B\",\n    \"lcedil\": \"\\u013C\",\n    \"lceil\": \"\\u2308\",\n    \"lcub\": \"{\",\n    \"Lcy\": \"\\u041B\",\n    \"lcy\": \"\\u043B\",\n    \"ldca\": \"\\u2936\",\n    \"ldquo\": \"\\u201C\",\n    \"ldquor\": \"\\u201E\",\n    \"ldrdhar\": \"\\u2967\",\n    \"ldrushar\": \"\\u294B\",\n    \"ldsh\": \"\\u21B2\",\n    \"lE\": \"\\u2266\",\n    \"le\": \"\\u2264\",\n    \"LeftAngleBracket\": \"\\u27E8\",\n    \"LeftArrow\": \"\\u2190\",\n    \"Leftarrow\": \"\\u21D0\",\n    \"leftarrow\": \"\\u2190\",\n    \"LeftArrowBar\": \"\\u21E4\",\n    \"LeftArrowRightArrow\": \"\\u21C6\",\n    \"leftarrowtail\": \"\\u21A2\",\n    \"LeftCeiling\": \"\\u2308\",\n    \"LeftDoubleBracket\": \"\\u27E6\",\n    \"LeftDownTeeVector\": \"\\u2961\",\n    \"LeftDownVector\": \"\\u21C3\",\n    \"LeftDownVectorBar\": \"\\u2959\",\n    \"LeftFloor\": \"\\u230A\",\n    \"leftharpoondown\": \"\\u21BD\",\n    \"leftharpoonup\": \"\\u21BC\",\n    \"leftleftarrows\": \"\\u21C7\",\n    \"LeftRightArrow\": \"\\u2194\",\n    \"Leftrightarrow\": \"\\u21D4\",\n    \"leftrightarrow\": \"\\u2194\",\n    \"leftrightarrows\": \"\\u21C6\",\n    \"leftrightharpoons\": \"\\u21CB\",\n    \"leftrightsquigarrow\": \"\\u21AD\",\n    \"LeftRightVector\": \"\\u294E\",\n    \"LeftTee\": \"\\u22A3\",\n    \"LeftTeeArrow\": \"\\u21A4\",\n    \"LeftTeeVector\": \"\\u295A\",\n    \"leftthreetimes\": \"\\u22CB\",\n    \"LeftTriangle\": \"\\u22B2\",\n    \"LeftTriangleBar\": \"\\u29CF\",\n    \"LeftTriangleEqual\": \"\\u22B4\",\n    \"LeftUpDownVector\": \"\\u2951\",\n    \"LeftUpTeeVector\": \"\\u2960\",\n    \"LeftUpVector\": \"\\u21BF\",\n    \"LeftUpVectorBar\": \"\\u2958\",\n    \"LeftVector\": \"\\u21BC\",\n    \"LeftVectorBar\": \"\\u2952\",\n    \"lEg\": \"\\u2A8B\",\n    \"leg\": \"\\u22DA\",\n    \"leq\": \"\\u2264\",\n    \"leqq\": \"\\u2266\",\n    \"leqslant\": \"\\u2A7D\",\n    \"les\": \"\\u2A7D\",\n    \"lescc\": \"\\u2AA8\",\n    \"lesdot\": \"\\u2A7F\",\n    \"lesdoto\": \"\\u2A81\",\n    \"lesdotor\": \"\\u2A83\",\n    \"lesg\": \"\\u22DA\\uFE00\",\n    \"lesges\": \"\\u2A93\",\n    \"lessapprox\": \"\\u2A85\",\n    \"lessdot\": \"\\u22D6\",\n    \"lesseqgtr\": \"\\u22DA\",\n    \"lesseqqgtr\": \"\\u2A8B\",\n    \"LessEqualGreater\": \"\\u22DA\",\n    \"LessFullEqual\": \"\\u2266\",\n    \"LessGreater\": \"\\u2276\",\n    \"lessgtr\": \"\\u2276\",\n    \"LessLess\": \"\\u2AA1\",\n    \"lesssim\": \"\\u2272\",\n    \"LessSlantEqual\": \"\\u2A7D\",\n    \"LessTilde\": \"\\u2272\",\n    \"lfisht\": \"\\u297C\",\n    \"lfloor\": \"\\u230A\",\n    \"Lfr\": \"\\uD835\\uDD0F\",\n    \"lfr\": \"\\uD835\\uDD29\",\n    \"lg\": \"\\u2276\",\n    \"lgE\": \"\\u2A91\",\n    \"lHar\": \"\\u2962\",\n    \"lhard\": \"\\u21BD\",\n    \"lharu\": \"\\u21BC\",\n    \"lharul\": \"\\u296A\",\n    \"lhblk\": \"\\u2584\",\n    \"LJcy\": \"\\u0409\",\n    \"ljcy\": \"\\u0459\",\n    \"Ll\": \"\\u22D8\",\n    \"ll\": \"\\u226A\",\n    \"llarr\": \"\\u21C7\",\n    \"llcorner\": \"\\u231E\",\n    \"Lleftarrow\": \"\\u21DA\",\n    \"llhard\": \"\\u296B\",\n    \"lltri\": \"\\u25FA\",\n    \"Lmidot\": \"\\u013F\",\n    \"lmidot\": \"\\u0140\",\n    \"lmoust\": \"\\u23B0\",\n    \"lmoustache\": \"\\u23B0\",\n    \"lnap\": \"\\u2A89\",\n    \"lnapprox\": \"\\u2A89\",\n    \"lnE\": \"\\u2268\",\n    \"lne\": \"\\u2A87\",\n    \"lneq\": \"\\u2A87\",\n    \"lneqq\": \"\\u2268\",\n    \"lnsim\": \"\\u22E6\",\n    \"loang\": \"\\u27EC\",\n    \"loarr\": \"\\u21FD\",\n    \"lobrk\": \"\\u27E6\",\n    \"LongLeftArrow\": \"\\u27F5\",\n    \"Longleftarrow\": \"\\u27F8\",\n    \"longleftarrow\": \"\\u27F5\",\n    \"LongLeftRightArrow\": \"\\u27F7\",\n    \"Longleftrightarrow\": \"\\u27FA\",\n    \"longleftrightarrow\": \"\\u27F7\",\n    \"longmapsto\": \"\\u27FC\",\n    \"LongRightArrow\": \"\\u27F6\",\n    \"Longrightarrow\": \"\\u27F9\",\n    \"longrightarrow\": \"\\u27F6\",\n    \"looparrowleft\": \"\\u21AB\",\n    \"looparrowright\": \"\\u21AC\",\n    \"lopar\": \"\\u2985\",\n    \"Lopf\": \"\\uD835\\uDD43\",\n    \"lopf\": \"\\uD835\\uDD5D\",\n    \"loplus\": \"\\u2A2D\",\n    \"lotimes\": \"\\u2A34\",\n    \"lowast\": \"\\u2217\",\n    \"lowbar\": \"_\",\n    \"LowerLeftArrow\": \"\\u2199\",\n    \"LowerRightArrow\": \"\\u2198\",\n    \"loz\": \"\\u25CA\",\n    \"lozenge\": \"\\u25CA\",\n    \"lozf\": \"\\u29EB\",\n    \"lpar\": \"(\",\n    \"lparlt\": \"\\u2993\",\n    \"lrarr\": \"\\u21C6\",\n    \"lrcorner\": \"\\u231F\",\n    \"lrhar\": \"\\u21CB\",\n    \"lrhard\": \"\\u296D\",\n    \"lrm\": \"\\u200E\",\n    \"lrtri\": \"\\u22BF\",\n    \"lsaquo\": \"\\u2039\",\n    \"Lscr\": \"\\u2112\",\n    \"lscr\": \"\\uD835\\uDCC1\",\n    \"Lsh\": \"\\u21B0\",\n    \"lsh\": \"\\u21B0\",\n    \"lsim\": \"\\u2272\",\n    \"lsime\": \"\\u2A8D\",\n    \"lsimg\": \"\\u2A8F\",\n    \"lsqb\": \"[\",\n    \"lsquo\": \"\\u2018\",\n    \"lsquor\": \"\\u201A\",\n    \"Lstrok\": \"\\u0141\",\n    \"lstrok\": \"\\u0142\",\n    \"LT\": \"<\",\n    \"Lt\": \"\\u226A\",\n    \"lt\": \"<\",\n    \"ltcc\": \"\\u2AA6\",\n    \"ltcir\": \"\\u2A79\",\n    \"ltdot\": \"\\u22D6\",\n    \"lthree\": \"\\u22CB\",\n    \"ltimes\": \"\\u22C9\",\n    \"ltlarr\": \"\\u2976\",\n    \"ltquest\": \"\\u2A7B\",\n    \"ltri\": \"\\u25C3\",\n    \"ltrie\": \"\\u22B4\",\n    \"ltrif\": \"\\u25C2\",\n    \"ltrPar\": \"\\u2996\",\n    \"lurdshar\": \"\\u294A\",\n    \"luruhar\": \"\\u2966\",\n    \"lvertneqq\": \"\\u2268\\uFE00\",\n    \"lvnE\": \"\\u2268\\uFE00\",\n    \"macr\": \"\\xAF\",\n    \"male\": \"\\u2642\",\n    \"malt\": \"\\u2720\",\n    \"maltese\": \"\\u2720\",\n    \"Map\": \"\\u2905\",\n    \"map\": \"\\u21A6\",\n    \"mapsto\": \"\\u21A6\",\n    \"mapstodown\": \"\\u21A7\",\n    \"mapstoleft\": \"\\u21A4\",\n    \"mapstoup\": \"\\u21A5\",\n    \"marker\": \"\\u25AE\",\n    \"mcomma\": \"\\u2A29\",\n    \"Mcy\": \"\\u041C\",\n    \"mcy\": \"\\u043C\",\n    \"mdash\": \"\\u2014\",\n    \"mDDot\": \"\\u223A\",\n    \"measuredangle\": \"\\u2221\",\n    \"MediumSpace\": \"\\u205F\",\n    \"Mellintrf\": \"\\u2133\",\n    \"Mfr\": \"\\uD835\\uDD10\",\n    \"mfr\": \"\\uD835\\uDD2A\",\n    \"mho\": \"\\u2127\",\n    \"micro\": \"\\xB5\",\n    \"mid\": \"\\u2223\",\n    \"midast\": \"*\",\n    \"midcir\": \"\\u2AF0\",\n    \"middot\": \"\\xB7\",\n    \"minus\": \"\\u2212\",\n    \"minusb\": \"\\u229F\",\n    \"minusd\": \"\\u2238\",\n    \"minusdu\": \"\\u2A2A\",\n    \"MinusPlus\": \"\\u2213\",\n    \"mlcp\": \"\\u2ADB\",\n    \"mldr\": \"\\u2026\",\n    \"mnplus\": \"\\u2213\",\n    \"models\": \"\\u22A7\",\n    \"Mopf\": \"\\uD835\\uDD44\",\n    \"mopf\": \"\\uD835\\uDD5E\",\n    \"mp\": \"\\u2213\",\n    \"Mscr\": \"\\u2133\",\n    \"mscr\": \"\\uD835\\uDCC2\",\n    \"mstpos\": \"\\u223E\",\n    \"Mu\": \"\\u039C\",\n    \"mu\": \"\\u03BC\",\n    \"multimap\": \"\\u22B8\",\n    \"mumap\": \"\\u22B8\",\n    \"nabla\": \"\\u2207\",\n    \"Nacute\": \"\\u0143\",\n    \"nacute\": \"\\u0144\",\n    \"nang\": \"\\u2220\\u20D2\",\n    \"nap\": \"\\u2249\",\n    \"napE\": \"\\u2A70\\u0338\",\n    \"napid\": \"\\u224B\\u0338\",\n    \"napos\": \"\\u0149\",\n    \"napprox\": \"\\u2249\",\n    \"natur\": \"\\u266E\",\n    \"natural\": \"\\u266E\",\n    \"naturals\": \"\\u2115\",\n    \"nbsp\": \"\\xA0\",\n    \"nbump\": \"\\u224E\\u0338\",\n    \"nbumpe\": \"\\u224F\\u0338\",\n    \"ncap\": \"\\u2A43\",\n    \"Ncaron\": \"\\u0147\",\n    \"ncaron\": \"\\u0148\",\n    \"Ncedil\": \"\\u0145\",\n    \"ncedil\": \"\\u0146\",\n    \"ncong\": \"\\u2247\",\n    \"ncongdot\": \"\\u2A6D\\u0338\",\n    \"ncup\": \"\\u2A42\",\n    \"Ncy\": \"\\u041D\",\n    \"ncy\": \"\\u043D\",\n    \"ndash\": \"\\u2013\",\n    \"ne\": \"\\u2260\",\n    \"nearhk\": \"\\u2924\",\n    \"neArr\": \"\\u21D7\",\n    \"nearr\": \"\\u2197\",\n    \"nearrow\": \"\\u2197\",\n    \"nedot\": \"\\u2250\\u0338\",\n    \"NegativeMediumSpace\": \"\\u200B\",\n    \"NegativeThickSpace\": \"\\u200B\",\n    \"NegativeThinSpace\": \"\\u200B\",\n    \"NegativeVeryThinSpace\": \"\\u200B\",\n    \"nequiv\": \"\\u2262\",\n    \"nesear\": \"\\u2928\",\n    \"nesim\": \"\\u2242\\u0338\",\n    \"NestedGreaterGreater\": \"\\u226B\",\n    \"NestedLessLess\": \"\\u226A\",\n    \"NewLine\": \"\\n\",\n    \"nexist\": \"\\u2204\",\n    \"nexists\": \"\\u2204\",\n    \"Nfr\": \"\\uD835\\uDD11\",\n    \"nfr\": \"\\uD835\\uDD2B\",\n    \"ngE\": \"\\u2267\\u0338\",\n    \"nge\": \"\\u2271\",\n    \"ngeq\": \"\\u2271\",\n    \"ngeqq\": \"\\u2267\\u0338\",\n    \"ngeqslant\": \"\\u2A7E\\u0338\",\n    \"nges\": \"\\u2A7E\\u0338\",\n    \"nGg\": \"\\u22D9\\u0338\",\n    \"ngsim\": \"\\u2275\",\n    \"nGt\": \"\\u226B\\u20D2\",\n    \"ngt\": \"\\u226F\",\n    \"ngtr\": \"\\u226F\",\n    \"nGtv\": \"\\u226B\\u0338\",\n    \"nhArr\": \"\\u21CE\",\n    \"nharr\": \"\\u21AE\",\n    \"nhpar\": \"\\u2AF2\",\n    \"ni\": \"\\u220B\",\n    \"nis\": \"\\u22FC\",\n    \"nisd\": \"\\u22FA\",\n    \"niv\": \"\\u220B\",\n    \"NJcy\": \"\\u040A\",\n    \"njcy\": \"\\u045A\",\n    \"nlArr\": \"\\u21CD\",\n    \"nlarr\": \"\\u219A\",\n    \"nldr\": \"\\u2025\",\n    \"nlE\": \"\\u2266\\u0338\",\n    \"nle\": \"\\u2270\",\n    \"nLeftarrow\": \"\\u21CD\",\n    \"nleftarrow\": \"\\u219A\",\n    \"nLeftrightarrow\": \"\\u21CE\",\n    \"nleftrightarrow\": \"\\u21AE\",\n    \"nleq\": \"\\u2270\",\n    \"nleqq\": \"\\u2266\\u0338\",\n    \"nleqslant\": \"\\u2A7D\\u0338\",\n    \"nles\": \"\\u2A7D\\u0338\",\n    \"nless\": \"\\u226E\",\n    \"nLl\": \"\\u22D8\\u0338\",\n    \"nlsim\": \"\\u2274\",\n    \"nLt\": \"\\u226A\\u20D2\",\n    \"nlt\": \"\\u226E\",\n    \"nltri\": \"\\u22EA\",\n    \"nltrie\": \"\\u22EC\",\n    \"nLtv\": \"\\u226A\\u0338\",\n    \"nmid\": \"\\u2224\",\n    \"NoBreak\": \"\\u2060\",\n    \"NonBreakingSpace\": \"\\xA0\",\n    \"Nopf\": \"\\u2115\",\n    \"nopf\": \"\\uD835\\uDD5F\",\n    \"Not\": \"\\u2AEC\",\n    \"not\": \"\\xAC\",\n    \"NotCongruent\": \"\\u2262\",\n    \"NotCupCap\": \"\\u226D\",\n    \"NotDoubleVerticalBar\": \"\\u2226\",\n    \"NotElement\": \"\\u2209\",\n    \"NotEqual\": \"\\u2260\",\n    \"NotEqualTilde\": \"\\u2242\\u0338\",\n    \"NotExists\": \"\\u2204\",\n    \"NotGreater\": \"\\u226F\",\n    \"NotGreaterEqual\": \"\\u2271\",\n    \"NotGreaterFullEqual\": \"\\u2267\\u0338\",\n    \"NotGreaterGreater\": \"\\u226B\\u0338\",\n    \"NotGreaterLess\": \"\\u2279\",\n    \"NotGreaterSlantEqual\": \"\\u2A7E\\u0338\",\n    \"NotGreaterTilde\": \"\\u2275\",\n    \"NotHumpDownHump\": \"\\u224E\\u0338\",\n    \"NotHumpEqual\": \"\\u224F\\u0338\",\n    \"notin\": \"\\u2209\",\n    \"notindot\": \"\\u22F5\\u0338\",\n    \"notinE\": \"\\u22F9\\u0338\",\n    \"notinva\": \"\\u2209\",\n    \"notinvb\": \"\\u22F7\",\n    \"notinvc\": \"\\u22F6\",\n    \"NotLeftTriangle\": \"\\u22EA\",\n    \"NotLeftTriangleBar\": \"\\u29CF\\u0338\",\n    \"NotLeftTriangleEqual\": \"\\u22EC\",\n    \"NotLess\": \"\\u226E\",\n    \"NotLessEqual\": \"\\u2270\",\n    \"NotLessGreater\": \"\\u2278\",\n    \"NotLessLess\": \"\\u226A\\u0338\",\n    \"NotLessSlantEqual\": \"\\u2A7D\\u0338\",\n    \"NotLessTilde\": \"\\u2274\",\n    \"NotNestedGreaterGreater\": \"\\u2AA2\\u0338\",\n    \"NotNestedLessLess\": \"\\u2AA1\\u0338\",\n    \"notni\": \"\\u220C\",\n    \"notniva\": \"\\u220C\",\n    \"notnivb\": \"\\u22FE\",\n    \"notnivc\": \"\\u22FD\",\n    \"NotPrecedes\": \"\\u2280\",\n    \"NotPrecedesEqual\": \"\\u2AAF\\u0338\",\n    \"NotPrecedesSlantEqual\": \"\\u22E0\",\n    \"NotReverseElement\": \"\\u220C\",\n    \"NotRightTriangle\": \"\\u22EB\",\n    \"NotRightTriangleBar\": \"\\u29D0\\u0338\",\n    \"NotRightTriangleEqual\": \"\\u22ED\",\n    \"NotSquareSubset\": \"\\u228F\\u0338\",\n    \"NotSquareSubsetEqual\": \"\\u22E2\",\n    \"NotSquareSuperset\": \"\\u2290\\u0338\",\n    \"NotSquareSupersetEqual\": \"\\u22E3\",\n    \"NotSubset\": \"\\u2282\\u20D2\",\n    \"NotSubsetEqual\": \"\\u2288\",\n    \"NotSucceeds\": \"\\u2281\",\n    \"NotSucceedsEqual\": \"\\u2AB0\\u0338\",\n    \"NotSucceedsSlantEqual\": \"\\u22E1\",\n    \"NotSucceedsTilde\": \"\\u227F\\u0338\",\n    \"NotSuperset\": \"\\u2283\\u20D2\",\n    \"NotSupersetEqual\": \"\\u2289\",\n    \"NotTilde\": \"\\u2241\",\n    \"NotTildeEqual\": \"\\u2244\",\n    \"NotTildeFullEqual\": \"\\u2247\",\n    \"NotTildeTilde\": \"\\u2249\",\n    \"NotVerticalBar\": \"\\u2224\",\n    \"npar\": \"\\u2226\",\n    \"nparallel\": \"\\u2226\",\n    \"nparsl\": \"\\u2AFD\\u20E5\",\n    \"npart\": \"\\u2202\\u0338\",\n    \"npolint\": \"\\u2A14\",\n    \"npr\": \"\\u2280\",\n    \"nprcue\": \"\\u22E0\",\n    \"npre\": \"\\u2AAF\\u0338\",\n    \"nprec\": \"\\u2280\",\n    \"npreceq\": \"\\u2AAF\\u0338\",\n    \"nrArr\": \"\\u21CF\",\n    \"nrarr\": \"\\u219B\",\n    \"nrarrc\": \"\\u2933\\u0338\",\n    \"nrarrw\": \"\\u219D\\u0338\",\n    \"nRightarrow\": \"\\u21CF\",\n    \"nrightarrow\": \"\\u219B\",\n    \"nrtri\": \"\\u22EB\",\n    \"nrtrie\": \"\\u22ED\",\n    \"nsc\": \"\\u2281\",\n    \"nsccue\": \"\\u22E1\",\n    \"nsce\": \"\\u2AB0\\u0338\",\n    \"Nscr\": \"\\uD835\\uDCA9\",\n    \"nscr\": \"\\uD835\\uDCC3\",\n    \"nshortmid\": \"\\u2224\",\n    \"nshortparallel\": \"\\u2226\",\n    \"nsim\": \"\\u2241\",\n    \"nsime\": \"\\u2244\",\n    \"nsimeq\": \"\\u2244\",\n    \"nsmid\": \"\\u2224\",\n    \"nspar\": \"\\u2226\",\n    \"nsqsube\": \"\\u22E2\",\n    \"nsqsupe\": \"\\u22E3\",\n    \"nsub\": \"\\u2284\",\n    \"nsubE\": \"\\u2AC5\\u0338\",\n    \"nsube\": \"\\u2288\",\n    \"nsubset\": \"\\u2282\\u20D2\",\n    \"nsubseteq\": \"\\u2288\",\n    \"nsubseteqq\": \"\\u2AC5\\u0338\",\n    \"nsucc\": \"\\u2281\",\n    \"nsucceq\": \"\\u2AB0\\u0338\",\n    \"nsup\": \"\\u2285\",\n    \"nsupE\": \"\\u2AC6\\u0338\",\n    \"nsupe\": \"\\u2289\",\n    \"nsupset\": \"\\u2283\\u20D2\",\n    \"nsupseteq\": \"\\u2289\",\n    \"nsupseteqq\": \"\\u2AC6\\u0338\",\n    \"ntgl\": \"\\u2279\",\n    \"Ntilde\": \"\\xD1\",\n    \"ntilde\": \"\\xF1\",\n    \"ntlg\": \"\\u2278\",\n    \"ntriangleleft\": \"\\u22EA\",\n    \"ntrianglelefteq\": \"\\u22EC\",\n    \"ntriangleright\": \"\\u22EB\",\n    \"ntrianglerighteq\": \"\\u22ED\",\n    \"Nu\": \"\\u039D\",\n    \"nu\": \"\\u03BD\",\n    \"num\": \"#\",\n    \"numero\": \"\\u2116\",\n    \"numsp\": \"\\u2007\",\n    \"nvap\": \"\\u224D\\u20D2\",\n    \"nVDash\": \"\\u22AF\",\n    \"nVdash\": \"\\u22AE\",\n    \"nvDash\": \"\\u22AD\",\n    \"nvdash\": \"\\u22AC\",\n    \"nvge\": \"\\u2265\\u20D2\",\n    \"nvgt\": \">\\u20D2\",\n    \"nvHarr\": \"\\u2904\",\n    \"nvinfin\": \"\\u29DE\",\n    \"nvlArr\": \"\\u2902\",\n    \"nvle\": \"\\u2264\\u20D2\",\n    \"nvlt\": \"<\\u20D2\",\n    \"nvltrie\": \"\\u22B4\\u20D2\",\n    \"nvrArr\": \"\\u2903\",\n    \"nvrtrie\": \"\\u22B5\\u20D2\",\n    \"nvsim\": \"\\u223C\\u20D2\",\n    \"nwarhk\": \"\\u2923\",\n    \"nwArr\": \"\\u21D6\",\n    \"nwarr\": \"\\u2196\",\n    \"nwarrow\": \"\\u2196\",\n    \"nwnear\": \"\\u2927\",\n    \"Oacute\": \"\\xD3\",\n    \"oacute\": \"\\xF3\",\n    \"oast\": \"\\u229B\",\n    \"ocir\": \"\\u229A\",\n    \"Ocirc\": \"\\xD4\",\n    \"ocirc\": \"\\xF4\",\n    \"Ocy\": \"\\u041E\",\n    \"ocy\": \"\\u043E\",\n    \"odash\": \"\\u229D\",\n    \"Odblac\": \"\\u0150\",\n    \"odblac\": \"\\u0151\",\n    \"odiv\": \"\\u2A38\",\n    \"odot\": \"\\u2299\",\n    \"odsold\": \"\\u29BC\",\n    \"OElig\": \"\\u0152\",\n    \"oelig\": \"\\u0153\",\n    \"ofcir\": \"\\u29BF\",\n    \"Ofr\": \"\\uD835\\uDD12\",\n    \"ofr\": \"\\uD835\\uDD2C\",\n    \"ogon\": \"\\u02DB\",\n    \"Ograve\": \"\\xD2\",\n    \"ograve\": \"\\xF2\",\n    \"ogt\": \"\\u29C1\",\n    \"ohbar\": \"\\u29B5\",\n    \"ohm\": \"\\u03A9\",\n    \"oint\": \"\\u222E\",\n    \"olarr\": \"\\u21BA\",\n    \"olcir\": \"\\u29BE\",\n    \"olcross\": \"\\u29BB\",\n    \"oline\": \"\\u203E\",\n    \"olt\": \"\\u29C0\",\n    \"Omacr\": \"\\u014C\",\n    \"omacr\": \"\\u014D\",\n    \"Omega\": \"\\u03A9\",\n    \"omega\": \"\\u03C9\",\n    \"Omicron\": \"\\u039F\",\n    \"omicron\": \"\\u03BF\",\n    \"omid\": \"\\u29B6\",\n    \"ominus\": \"\\u2296\",\n    \"Oopf\": \"\\uD835\\uDD46\",\n    \"oopf\": \"\\uD835\\uDD60\",\n    \"opar\": \"\\u29B7\",\n    \"OpenCurlyDoubleQuote\": \"\\u201C\",\n    \"OpenCurlyQuote\": \"\\u2018\",\n    \"operp\": \"\\u29B9\",\n    \"oplus\": \"\\u2295\",\n    \"Or\": \"\\u2A54\",\n    \"or\": \"\\u2228\",\n    \"orarr\": \"\\u21BB\",\n    \"ord\": \"\\u2A5D\",\n    \"order\": \"\\u2134\",\n    \"orderof\": \"\\u2134\",\n    \"ordf\": \"\\xAA\",\n    \"ordm\": \"\\xBA\",\n    \"origof\": \"\\u22B6\",\n    \"oror\": \"\\u2A56\",\n    \"orslope\": \"\\u2A57\",\n    \"orv\": \"\\u2A5B\",\n    \"oS\": \"\\u24C8\",\n    \"Oscr\": \"\\uD835\\uDCAA\",\n    \"oscr\": \"\\u2134\",\n    \"Oslash\": \"\\xD8\",\n    \"oslash\": \"\\xF8\",\n    \"osol\": \"\\u2298\",\n    \"Otilde\": \"\\xD5\",\n    \"otilde\": \"\\xF5\",\n    \"Otimes\": \"\\u2A37\",\n    \"otimes\": \"\\u2297\",\n    \"otimesas\": \"\\u2A36\",\n    \"Ouml\": \"\\xD6\",\n    \"ouml\": \"\\xF6\",\n    \"ovbar\": \"\\u233D\",\n    \"OverBar\": \"\\u203E\",\n    \"OverBrace\": \"\\u23DE\",\n    \"OverBracket\": \"\\u23B4\",\n    \"OverParenthesis\": \"\\u23DC\",\n    \"par\": \"\\u2225\",\n    \"para\": \"\\xB6\",\n    \"parallel\": \"\\u2225\",\n    \"parsim\": \"\\u2AF3\",\n    \"parsl\": \"\\u2AFD\",\n    \"part\": \"\\u2202\",\n    \"PartialD\": \"\\u2202\",\n    \"Pcy\": \"\\u041F\",\n    \"pcy\": \"\\u043F\",\n    \"percnt\": \"%\",\n    \"period\": \".\",\n    \"permil\": \"\\u2030\",\n    \"perp\": \"\\u22A5\",\n    \"pertenk\": \"\\u2031\",\n    \"Pfr\": \"\\uD835\\uDD13\",\n    \"pfr\": \"\\uD835\\uDD2D\",\n    \"Phi\": \"\\u03A6\",\n    \"phi\": \"\\u03C6\",\n    \"phiv\": \"\\u03D5\",\n    \"phmmat\": \"\\u2133\",\n    \"phone\": \"\\u260E\",\n    \"Pi\": \"\\u03A0\",\n    \"pi\": \"\\u03C0\",\n    \"pitchfork\": \"\\u22D4\",\n    \"piv\": \"\\u03D6\",\n    \"planck\": \"\\u210F\",\n    \"planckh\": \"\\u210E\",\n    \"plankv\": \"\\u210F\",\n    \"plus\": \"+\",\n    \"plusacir\": \"\\u2A23\",\n    \"plusb\": \"\\u229E\",\n    \"pluscir\": \"\\u2A22\",\n    \"plusdo\": \"\\u2214\",\n    \"plusdu\": \"\\u2A25\",\n    \"pluse\": \"\\u2A72\",\n    \"PlusMinus\": \"\\xB1\",\n    \"plusmn\": \"\\xB1\",\n    \"plussim\": \"\\u2A26\",\n    \"plustwo\": \"\\u2A27\",\n    \"pm\": \"\\xB1\",\n    \"Poincareplane\": \"\\u210C\",\n    \"pointint\": \"\\u2A15\",\n    \"Popf\": \"\\u2119\",\n    \"popf\": \"\\uD835\\uDD61\",\n    \"pound\": \"\\xA3\",\n    \"Pr\": \"\\u2ABB\",\n    \"pr\": \"\\u227A\",\n    \"prap\": \"\\u2AB7\",\n    \"prcue\": \"\\u227C\",\n    \"prE\": \"\\u2AB3\",\n    \"pre\": \"\\u2AAF\",\n    \"prec\": \"\\u227A\",\n    \"precapprox\": \"\\u2AB7\",\n    \"preccurlyeq\": \"\\u227C\",\n    \"Precedes\": \"\\u227A\",\n    \"PrecedesEqual\": \"\\u2AAF\",\n    \"PrecedesSlantEqual\": \"\\u227C\",\n    \"PrecedesTilde\": \"\\u227E\",\n    \"preceq\": \"\\u2AAF\",\n    \"precnapprox\": \"\\u2AB9\",\n    \"precneqq\": \"\\u2AB5\",\n    \"precnsim\": \"\\u22E8\",\n    \"precsim\": \"\\u227E\",\n    \"Prime\": \"\\u2033\",\n    \"prime\": \"\\u2032\",\n    \"primes\": \"\\u2119\",\n    \"prnap\": \"\\u2AB9\",\n    \"prnE\": \"\\u2AB5\",\n    \"prnsim\": \"\\u22E8\",\n    \"prod\": \"\\u220F\",\n    \"Product\": \"\\u220F\",\n    \"profalar\": \"\\u232E\",\n    \"profline\": \"\\u2312\",\n    \"profsurf\": \"\\u2313\",\n    \"prop\": \"\\u221D\",\n    \"Proportion\": \"\\u2237\",\n    \"Proportional\": \"\\u221D\",\n    \"propto\": \"\\u221D\",\n    \"prsim\": \"\\u227E\",\n    \"prurel\": \"\\u22B0\",\n    \"Pscr\": \"\\uD835\\uDCAB\",\n    \"pscr\": \"\\uD835\\uDCC5\",\n    \"Psi\": \"\\u03A8\",\n    \"psi\": \"\\u03C8\",\n    \"puncsp\": \"\\u2008\",\n    \"Qfr\": \"\\uD835\\uDD14\",\n    \"qfr\": \"\\uD835\\uDD2E\",\n    \"qint\": \"\\u2A0C\",\n    \"Qopf\": \"\\u211A\",\n    \"qopf\": \"\\uD835\\uDD62\",\n    \"qprime\": \"\\u2057\",\n    \"Qscr\": \"\\uD835\\uDCAC\",\n    \"qscr\": \"\\uD835\\uDCC6\",\n    \"quaternions\": \"\\u210D\",\n    \"quatint\": \"\\u2A16\",\n    \"quest\": \"?\",\n    \"questeq\": \"\\u225F\",\n    \"QUOT\": \"\\\"\",\n    \"quot\": \"\\\"\",\n    \"rAarr\": \"\\u21DB\",\n    \"race\": \"\\u223D\\u0331\",\n    \"Racute\": \"\\u0154\",\n    \"racute\": \"\\u0155\",\n    \"radic\": \"\\u221A\",\n    \"raemptyv\": \"\\u29B3\",\n    \"Rang\": \"\\u27EB\",\n    \"rang\": \"\\u27E9\",\n    \"rangd\": \"\\u2992\",\n    \"range\": \"\\u29A5\",\n    \"rangle\": \"\\u27E9\",\n    \"raquo\": \"\\xBB\",\n    \"Rarr\": \"\\u21A0\",\n    \"rArr\": \"\\u21D2\",\n    \"rarr\": \"\\u2192\",\n    \"rarrap\": \"\\u2975\",\n    \"rarrb\": \"\\u21E5\",\n    \"rarrbfs\": \"\\u2920\",\n    \"rarrc\": \"\\u2933\",\n    \"rarrfs\": \"\\u291E\",\n    \"rarrhk\": \"\\u21AA\",\n    \"rarrlp\": \"\\u21AC\",\n    \"rarrpl\": \"\\u2945\",\n    \"rarrsim\": \"\\u2974\",\n    \"Rarrtl\": \"\\u2916\",\n    \"rarrtl\": \"\\u21A3\",\n    \"rarrw\": \"\\u219D\",\n    \"rAtail\": \"\\u291C\",\n    \"ratail\": \"\\u291A\",\n    \"ratio\": \"\\u2236\",\n    \"rationals\": \"\\u211A\",\n    \"RBarr\": \"\\u2910\",\n    \"rBarr\": \"\\u290F\",\n    \"rbarr\": \"\\u290D\",\n    \"rbbrk\": \"\\u2773\",\n    \"rbrace\": \"}\",\n    \"rbrack\": \"]\",\n    \"rbrke\": \"\\u298C\",\n    \"rbrksld\": \"\\u298E\",\n    \"rbrkslu\": \"\\u2990\",\n    \"Rcaron\": \"\\u0158\",\n    \"rcaron\": \"\\u0159\",\n    \"Rcedil\": \"\\u0156\",\n    \"rcedil\": \"\\u0157\",\n    \"rceil\": \"\\u2309\",\n    \"rcub\": \"}\",\n    \"Rcy\": \"\\u0420\",\n    \"rcy\": \"\\u0440\",\n    \"rdca\": \"\\u2937\",\n    \"rdldhar\": \"\\u2969\",\n    \"rdquo\": \"\\u201D\",\n    \"rdquor\": \"\\u201D\",\n    \"rdsh\": \"\\u21B3\",\n    \"Re\": \"\\u211C\",\n    \"real\": \"\\u211C\",\n    \"realine\": \"\\u211B\",\n    \"realpart\": \"\\u211C\",\n    \"reals\": \"\\u211D\",\n    \"rect\": \"\\u25AD\",\n    \"REG\": \"\\xAE\",\n    \"reg\": \"\\xAE\",\n    \"ReverseElement\": \"\\u220B\",\n    \"ReverseEquilibrium\": \"\\u21CB\",\n    \"ReverseUpEquilibrium\": \"\\u296F\",\n    \"rfisht\": \"\\u297D\",\n    \"rfloor\": \"\\u230B\",\n    \"Rfr\": \"\\u211C\",\n    \"rfr\": \"\\uD835\\uDD2F\",\n    \"rHar\": \"\\u2964\",\n    \"rhard\": \"\\u21C1\",\n    \"rharu\": \"\\u21C0\",\n    \"rharul\": \"\\u296C\",\n    \"Rho\": \"\\u03A1\",\n    \"rho\": \"\\u03C1\",\n    \"rhov\": \"\\u03F1\",\n    \"RightAngleBracket\": \"\\u27E9\",\n    \"RightArrow\": \"\\u2192\",\n    \"Rightarrow\": \"\\u21D2\",\n    \"rightarrow\": \"\\u2192\",\n    \"RightArrowBar\": \"\\u21E5\",\n    \"RightArrowLeftArrow\": \"\\u21C4\",\n    \"rightarrowtail\": \"\\u21A3\",\n    \"RightCeiling\": \"\\u2309\",\n    \"RightDoubleBracket\": \"\\u27E7\",\n    \"RightDownTeeVector\": \"\\u295D\",\n    \"RightDownVector\": \"\\u21C2\",\n    \"RightDownVectorBar\": \"\\u2955\",\n    \"RightFloor\": \"\\u230B\",\n    \"rightharpoondown\": \"\\u21C1\",\n    \"rightharpoonup\": \"\\u21C0\",\n    \"rightleftarrows\": \"\\u21C4\",\n    \"rightleftharpoons\": \"\\u21CC\",\n    \"rightrightarrows\": \"\\u21C9\",\n    \"rightsquigarrow\": \"\\u219D\",\n    \"RightTee\": \"\\u22A2\",\n    \"RightTeeArrow\": \"\\u21A6\",\n    \"RightTeeVector\": \"\\u295B\",\n    \"rightthreetimes\": \"\\u22CC\",\n    \"RightTriangle\": \"\\u22B3\",\n    \"RightTriangleBar\": \"\\u29D0\",\n    \"RightTriangleEqual\": \"\\u22B5\",\n    \"RightUpDownVector\": \"\\u294F\",\n    \"RightUpTeeVector\": \"\\u295C\",\n    \"RightUpVector\": \"\\u21BE\",\n    \"RightUpVectorBar\": \"\\u2954\",\n    \"RightVector\": \"\\u21C0\",\n    \"RightVectorBar\": \"\\u2953\",\n    \"ring\": \"\\u02DA\",\n    \"risingdotseq\": \"\\u2253\",\n    \"rlarr\": \"\\u21C4\",\n    \"rlhar\": \"\\u21CC\",\n    \"rlm\": \"\\u200F\",\n    \"rmoust\": \"\\u23B1\",\n    \"rmoustache\": \"\\u23B1\",\n    \"rnmid\": \"\\u2AEE\",\n    \"roang\": \"\\u27ED\",\n    \"roarr\": \"\\u21FE\",\n    \"robrk\": \"\\u27E7\",\n    \"ropar\": \"\\u2986\",\n    \"Ropf\": \"\\u211D\",\n    \"ropf\": \"\\uD835\\uDD63\",\n    \"roplus\": \"\\u2A2E\",\n    \"rotimes\": \"\\u2A35\",\n    \"RoundImplies\": \"\\u2970\",\n    \"rpar\": \")\",\n    \"rpargt\": \"\\u2994\",\n    \"rppolint\": \"\\u2A12\",\n    \"rrarr\": \"\\u21C9\",\n    \"Rrightarrow\": \"\\u21DB\",\n    \"rsaquo\": \"\\u203A\",\n    \"Rscr\": \"\\u211B\",\n    \"rscr\": \"\\uD835\\uDCC7\",\n    \"Rsh\": \"\\u21B1\",\n    \"rsh\": \"\\u21B1\",\n    \"rsqb\": \"]\",\n    \"rsquo\": \"\\u2019\",\n    \"rsquor\": \"\\u2019\",\n    \"rthree\": \"\\u22CC\",\n    \"rtimes\": \"\\u22CA\",\n    \"rtri\": \"\\u25B9\",\n    \"rtrie\": \"\\u22B5\",\n    \"rtrif\": \"\\u25B8\",\n    \"rtriltri\": \"\\u29CE\",\n    \"RuleDelayed\": \"\\u29F4\",\n    \"ruluhar\": \"\\u2968\",\n    \"rx\": \"\\u211E\",\n    \"Sacute\": \"\\u015A\",\n    \"sacute\": \"\\u015B\",\n    \"sbquo\": \"\\u201A\",\n    \"Sc\": \"\\u2ABC\",\n    \"sc\": \"\\u227B\",\n    \"scap\": \"\\u2AB8\",\n    \"Scaron\": \"\\u0160\",\n    \"scaron\": \"\\u0161\",\n    \"sccue\": \"\\u227D\",\n    \"scE\": \"\\u2AB4\",\n    \"sce\": \"\\u2AB0\",\n    \"Scedil\": \"\\u015E\",\n    \"scedil\": \"\\u015F\",\n    \"Scirc\": \"\\u015C\",\n    \"scirc\": \"\\u015D\",\n    \"scnap\": \"\\u2ABA\",\n    \"scnE\": \"\\u2AB6\",\n    \"scnsim\": \"\\u22E9\",\n    \"scpolint\": \"\\u2A13\",\n    \"scsim\": \"\\u227F\",\n    \"Scy\": \"\\u0421\",\n    \"scy\": \"\\u0441\",\n    \"sdot\": \"\\u22C5\",\n    \"sdotb\": \"\\u22A1\",\n    \"sdote\": \"\\u2A66\",\n    \"searhk\": \"\\u2925\",\n    \"seArr\": \"\\u21D8\",\n    \"searr\": \"\\u2198\",\n    \"searrow\": \"\\u2198\",\n    \"sect\": \"\\xA7\",\n    \"semi\": \";\",\n    \"seswar\": \"\\u2929\",\n    \"setminus\": \"\\u2216\",\n    \"setmn\": \"\\u2216\",\n    \"sext\": \"\\u2736\",\n    \"Sfr\": \"\\uD835\\uDD16\",\n    \"sfr\": \"\\uD835\\uDD30\",\n    \"sfrown\": \"\\u2322\",\n    \"sharp\": \"\\u266F\",\n    \"SHCHcy\": \"\\u0429\",\n    \"shchcy\": \"\\u0449\",\n    \"SHcy\": \"\\u0428\",\n    \"shcy\": \"\\u0448\",\n    \"ShortDownArrow\": \"\\u2193\",\n    \"ShortLeftArrow\": \"\\u2190\",\n    \"shortmid\": \"\\u2223\",\n    \"shortparallel\": \"\\u2225\",\n    \"ShortRightArrow\": \"\\u2192\",\n    \"ShortUpArrow\": \"\\u2191\",\n    \"shy\": \"\\xAD\",\n    \"Sigma\": \"\\u03A3\",\n    \"sigma\": \"\\u03C3\",\n    \"sigmaf\": \"\\u03C2\",\n    \"sigmav\": \"\\u03C2\",\n    \"sim\": \"\\u223C\",\n    \"simdot\": \"\\u2A6A\",\n    \"sime\": \"\\u2243\",\n    \"simeq\": \"\\u2243\",\n    \"simg\": \"\\u2A9E\",\n    \"simgE\": \"\\u2AA0\",\n    \"siml\": \"\\u2A9D\",\n    \"simlE\": \"\\u2A9F\",\n    \"simne\": \"\\u2246\",\n    \"simplus\": \"\\u2A24\",\n    \"simrarr\": \"\\u2972\",\n    \"slarr\": \"\\u2190\",\n    \"SmallCircle\": \"\\u2218\",\n    \"smallsetminus\": \"\\u2216\",\n    \"smashp\": \"\\u2A33\",\n    \"smeparsl\": \"\\u29E4\",\n    \"smid\": \"\\u2223\",\n    \"smile\": \"\\u2323\",\n    \"smt\": \"\\u2AAA\",\n    \"smte\": \"\\u2AAC\",\n    \"smtes\": \"\\u2AAC\\uFE00\",\n    \"SOFTcy\": \"\\u042C\",\n    \"softcy\": \"\\u044C\",\n    \"sol\": \"/\",\n    \"solb\": \"\\u29C4\",\n    \"solbar\": \"\\u233F\",\n    \"Sopf\": \"\\uD835\\uDD4A\",\n    \"sopf\": \"\\uD835\\uDD64\",\n    \"spades\": \"\\u2660\",\n    \"spadesuit\": \"\\u2660\",\n    \"spar\": \"\\u2225\",\n    \"sqcap\": \"\\u2293\",\n    \"sqcaps\": \"\\u2293\\uFE00\",\n    \"sqcup\": \"\\u2294\",\n    \"sqcups\": \"\\u2294\\uFE00\",\n    \"Sqrt\": \"\\u221A\",\n    \"sqsub\": \"\\u228F\",\n    \"sqsube\": \"\\u2291\",\n    \"sqsubset\": \"\\u228F\",\n    \"sqsubseteq\": \"\\u2291\",\n    \"sqsup\": \"\\u2290\",\n    \"sqsupe\": \"\\u2292\",\n    \"sqsupset\": \"\\u2290\",\n    \"sqsupseteq\": \"\\u2292\",\n    \"squ\": \"\\u25A1\",\n    \"Square\": \"\\u25A1\",\n    \"square\": \"\\u25A1\",\n    \"SquareIntersection\": \"\\u2293\",\n    \"SquareSubset\": \"\\u228F\",\n    \"SquareSubsetEqual\": \"\\u2291\",\n    \"SquareSuperset\": \"\\u2290\",\n    \"SquareSupersetEqual\": \"\\u2292\",\n    \"SquareUnion\": \"\\u2294\",\n    \"squarf\": \"\\u25AA\",\n    \"squf\": \"\\u25AA\",\n    \"srarr\": \"\\u2192\",\n    \"Sscr\": \"\\uD835\\uDCAE\",\n    \"sscr\": \"\\uD835\\uDCC8\",\n    \"ssetmn\": \"\\u2216\",\n    \"ssmile\": \"\\u2323\",\n    \"sstarf\": \"\\u22C6\",\n    \"Star\": \"\\u22C6\",\n    \"star\": \"\\u2606\",\n    \"starf\": \"\\u2605\",\n    \"straightepsilon\": \"\\u03F5\",\n    \"straightphi\": \"\\u03D5\",\n    \"strns\": \"\\xAF\",\n    \"Sub\": \"\\u22D0\",\n    \"sub\": \"\\u2282\",\n    \"subdot\": \"\\u2ABD\",\n    \"subE\": \"\\u2AC5\",\n    \"sube\": \"\\u2286\",\n    \"subedot\": \"\\u2AC3\",\n    \"submult\": \"\\u2AC1\",\n    \"subnE\": \"\\u2ACB\",\n    \"subne\": \"\\u228A\",\n    \"subplus\": \"\\u2ABF\",\n    \"subrarr\": \"\\u2979\",\n    \"Subset\": \"\\u22D0\",\n    \"subset\": \"\\u2282\",\n    \"subseteq\": \"\\u2286\",\n    \"subseteqq\": \"\\u2AC5\",\n    \"SubsetEqual\": \"\\u2286\",\n    \"subsetneq\": \"\\u228A\",\n    \"subsetneqq\": \"\\u2ACB\",\n    \"subsim\": \"\\u2AC7\",\n    \"subsub\": \"\\u2AD5\",\n    \"subsup\": \"\\u2AD3\",\n    \"succ\": \"\\u227B\",\n    \"succapprox\": \"\\u2AB8\",\n    \"succcurlyeq\": \"\\u227D\",\n    \"Succeeds\": \"\\u227B\",\n    \"SucceedsEqual\": \"\\u2AB0\",\n    \"SucceedsSlantEqual\": \"\\u227D\",\n    \"SucceedsTilde\": \"\\u227F\",\n    \"succeq\": \"\\u2AB0\",\n    \"succnapprox\": \"\\u2ABA\",\n    \"succneqq\": \"\\u2AB6\",\n    \"succnsim\": \"\\u22E9\",\n    \"succsim\": \"\\u227F\",\n    \"SuchThat\": \"\\u220B\",\n    \"Sum\": \"\\u2211\",\n    \"sum\": \"\\u2211\",\n    \"sung\": \"\\u266A\",\n    \"Sup\": \"\\u22D1\",\n    \"sup\": \"\\u2283\",\n    \"sup1\": \"\\xB9\",\n    \"sup2\": \"\\xB2\",\n    \"sup3\": \"\\xB3\",\n    \"supdot\": \"\\u2ABE\",\n    \"supdsub\": \"\\u2AD8\",\n    \"supE\": \"\\u2AC6\",\n    \"supe\": \"\\u2287\",\n    \"supedot\": \"\\u2AC4\",\n    \"Superset\": \"\\u2283\",\n    \"SupersetEqual\": \"\\u2287\",\n    \"suphsol\": \"\\u27C9\",\n    \"suphsub\": \"\\u2AD7\",\n    \"suplarr\": \"\\u297B\",\n    \"supmult\": \"\\u2AC2\",\n    \"supnE\": \"\\u2ACC\",\n    \"supne\": \"\\u228B\",\n    \"supplus\": \"\\u2AC0\",\n    \"Supset\": \"\\u22D1\",\n    \"supset\": \"\\u2283\",\n    \"supseteq\": \"\\u2287\",\n    \"supseteqq\": \"\\u2AC6\",\n    \"supsetneq\": \"\\u228B\",\n    \"supsetneqq\": \"\\u2ACC\",\n    \"supsim\": \"\\u2AC8\",\n    \"supsub\": \"\\u2AD4\",\n    \"supsup\": \"\\u2AD6\",\n    \"swarhk\": \"\\u2926\",\n    \"swArr\": \"\\u21D9\",\n    \"swarr\": \"\\u2199\",\n    \"swarrow\": \"\\u2199\",\n    \"swnwar\": \"\\u292A\",\n    \"szlig\": \"\\xDF\",\n    \"Tab\": \"\\t\",\n    \"target\": \"\\u2316\",\n    \"Tau\": \"\\u03A4\",\n    \"tau\": \"\\u03C4\",\n    \"tbrk\": \"\\u23B4\",\n    \"Tcaron\": \"\\u0164\",\n    \"tcaron\": \"\\u0165\",\n    \"Tcedil\": \"\\u0162\",\n    \"tcedil\": \"\\u0163\",\n    \"Tcy\": \"\\u0422\",\n    \"tcy\": \"\\u0442\",\n    \"tdot\": \"\\u20DB\",\n    \"telrec\": \"\\u2315\",\n    \"Tfr\": \"\\uD835\\uDD17\",\n    \"tfr\": \"\\uD835\\uDD31\",\n    \"there4\": \"\\u2234\",\n    \"Therefore\": \"\\u2234\",\n    \"therefore\": \"\\u2234\",\n    \"Theta\": \"\\u0398\",\n    \"theta\": \"\\u03B8\",\n    \"thetasym\": \"\\u03D1\",\n    \"thetav\": \"\\u03D1\",\n    \"thickapprox\": \"\\u2248\",\n    \"thicksim\": \"\\u223C\",\n    \"ThickSpace\": \"\\u205F\\u200A\",\n    \"thinsp\": \"\\u2009\",\n    \"ThinSpace\": \"\\u2009\",\n    \"thkap\": \"\\u2248\",\n    \"thksim\": \"\\u223C\",\n    \"THORN\": \"\\xDE\",\n    \"thorn\": \"\\xFE\",\n    \"Tilde\": \"\\u223C\",\n    \"tilde\": \"\\u02DC\",\n    \"TildeEqual\": \"\\u2243\",\n    \"TildeFullEqual\": \"\\u2245\",\n    \"TildeTilde\": \"\\u2248\",\n    \"times\": \"\\xD7\",\n    \"timesb\": \"\\u22A0\",\n    \"timesbar\": \"\\u2A31\",\n    \"timesd\": \"\\u2A30\",\n    \"tint\": \"\\u222D\",\n    \"toea\": \"\\u2928\",\n    \"top\": \"\\u22A4\",\n    \"topbot\": \"\\u2336\",\n    \"topcir\": \"\\u2AF1\",\n    \"Topf\": \"\\uD835\\uDD4B\",\n    \"topf\": \"\\uD835\\uDD65\",\n    \"topfork\": \"\\u2ADA\",\n    \"tosa\": \"\\u2929\",\n    \"tprime\": \"\\u2034\",\n    \"TRADE\": \"\\u2122\",\n    \"trade\": \"\\u2122\",\n    \"triangle\": \"\\u25B5\",\n    \"triangledown\": \"\\u25BF\",\n    \"triangleleft\": \"\\u25C3\",\n    \"trianglelefteq\": \"\\u22B4\",\n    \"triangleq\": \"\\u225C\",\n    \"triangleright\": \"\\u25B9\",\n    \"trianglerighteq\": \"\\u22B5\",\n    \"tridot\": \"\\u25EC\",\n    \"trie\": \"\\u225C\",\n    \"triminus\": \"\\u2A3A\",\n    \"TripleDot\": \"\\u20DB\",\n    \"triplus\": \"\\u2A39\",\n    \"trisb\": \"\\u29CD\",\n    \"tritime\": \"\\u2A3B\",\n    \"trpezium\": \"\\u23E2\",\n    \"Tscr\": \"\\uD835\\uDCAF\",\n    \"tscr\": \"\\uD835\\uDCC9\",\n    \"TScy\": \"\\u0426\",\n    \"tscy\": \"\\u0446\",\n    \"TSHcy\": \"\\u040B\",\n    \"tshcy\": \"\\u045B\",\n    \"Tstrok\": \"\\u0166\",\n    \"tstrok\": \"\\u0167\",\n    \"twixt\": \"\\u226C\",\n    \"twoheadleftarrow\": \"\\u219E\",\n    \"twoheadrightarrow\": \"\\u21A0\",\n    \"Uacute\": \"\\xDA\",\n    \"uacute\": \"\\xFA\",\n    \"Uarr\": \"\\u219F\",\n    \"uArr\": \"\\u21D1\",\n    \"uarr\": \"\\u2191\",\n    \"Uarrocir\": \"\\u2949\",\n    \"Ubrcy\": \"\\u040E\",\n    \"ubrcy\": \"\\u045E\",\n    \"Ubreve\": \"\\u016C\",\n    \"ubreve\": \"\\u016D\",\n    \"Ucirc\": \"\\xDB\",\n    \"ucirc\": \"\\xFB\",\n    \"Ucy\": \"\\u0423\",\n    \"ucy\": \"\\u0443\",\n    \"udarr\": \"\\u21C5\",\n    \"Udblac\": \"\\u0170\",\n    \"udblac\": \"\\u0171\",\n    \"udhar\": \"\\u296E\",\n    \"ufisht\": \"\\u297E\",\n    \"Ufr\": \"\\uD835\\uDD18\",\n    \"ufr\": \"\\uD835\\uDD32\",\n    \"Ugrave\": \"\\xD9\",\n    \"ugrave\": \"\\xF9\",\n    \"uHar\": \"\\u2963\",\n    \"uharl\": \"\\u21BF\",\n    \"uharr\": \"\\u21BE\",\n    \"uhblk\": \"\\u2580\",\n    \"ulcorn\": \"\\u231C\",\n    \"ulcorner\": \"\\u231C\",\n    \"ulcrop\": \"\\u230F\",\n    \"ultri\": \"\\u25F8\",\n    \"Umacr\": \"\\u016A\",\n    \"umacr\": \"\\u016B\",\n    \"uml\": \"\\xA8\",\n    \"UnderBar\": \"_\",\n    \"UnderBrace\": \"\\u23DF\",\n    \"UnderBracket\": \"\\u23B5\",\n    \"UnderParenthesis\": \"\\u23DD\",\n    \"Union\": \"\\u22C3\",\n    \"UnionPlus\": \"\\u228E\",\n    \"Uogon\": \"\\u0172\",\n    \"uogon\": \"\\u0173\",\n    \"Uopf\": \"\\uD835\\uDD4C\",\n    \"uopf\": \"\\uD835\\uDD66\",\n    \"UpArrow\": \"\\u2191\",\n    \"Uparrow\": \"\\u21D1\",\n    \"uparrow\": \"\\u2191\",\n    \"UpArrowBar\": \"\\u2912\",\n    \"UpArrowDownArrow\": \"\\u21C5\",\n    \"UpDownArrow\": \"\\u2195\",\n    \"Updownarrow\": \"\\u21D5\",\n    \"updownarrow\": \"\\u2195\",\n    \"UpEquilibrium\": \"\\u296E\",\n    \"upharpoonleft\": \"\\u21BF\",\n    \"upharpoonright\": \"\\u21BE\",\n    \"uplus\": \"\\u228E\",\n    \"UpperLeftArrow\": \"\\u2196\",\n    \"UpperRightArrow\": \"\\u2197\",\n    \"Upsi\": \"\\u03D2\",\n    \"upsi\": \"\\u03C5\",\n    \"upsih\": \"\\u03D2\",\n    \"Upsilon\": \"\\u03A5\",\n    \"upsilon\": \"\\u03C5\",\n    \"UpTee\": \"\\u22A5\",\n    \"UpTeeArrow\": \"\\u21A5\",\n    \"upuparrows\": \"\\u21C8\",\n    \"urcorn\": \"\\u231D\",\n    \"urcorner\": \"\\u231D\",\n    \"urcrop\": \"\\u230E\",\n    \"Uring\": \"\\u016E\",\n    \"uring\": \"\\u016F\",\n    \"urtri\": \"\\u25F9\",\n    \"Uscr\": \"\\uD835\\uDCB0\",\n    \"uscr\": \"\\uD835\\uDCCA\",\n    \"utdot\": \"\\u22F0\",\n    \"Utilde\": \"\\u0168\",\n    \"utilde\": \"\\u0169\",\n    \"utri\": \"\\u25B5\",\n    \"utrif\": \"\\u25B4\",\n    \"uuarr\": \"\\u21C8\",\n    \"Uuml\": \"\\xDC\",\n    \"uuml\": \"\\xFC\",\n    \"uwangle\": \"\\u29A7\",\n    \"vangrt\": \"\\u299C\",\n    \"varepsilon\": \"\\u03F5\",\n    \"varkappa\": \"\\u03F0\",\n    \"varnothing\": \"\\u2205\",\n    \"varphi\": \"\\u03D5\",\n    \"varpi\": \"\\u03D6\",\n    \"varpropto\": \"\\u221D\",\n    \"vArr\": \"\\u21D5\",\n    \"varr\": \"\\u2195\",\n    \"varrho\": \"\\u03F1\",\n    \"varsigma\": \"\\u03C2\",\n    \"varsubsetneq\": \"\\u228A\\uFE00\",\n    \"varsubsetneqq\": \"\\u2ACB\\uFE00\",\n    \"varsupsetneq\": \"\\u228B\\uFE00\",\n    \"varsupsetneqq\": \"\\u2ACC\\uFE00\",\n    \"vartheta\": \"\\u03D1\",\n    \"vartriangleleft\": \"\\u22B2\",\n    \"vartriangleright\": \"\\u22B3\",\n    \"Vbar\": \"\\u2AEB\",\n    \"vBar\": \"\\u2AE8\",\n    \"vBarv\": \"\\u2AE9\",\n    \"Vcy\": \"\\u0412\",\n    \"vcy\": \"\\u0432\",\n    \"VDash\": \"\\u22AB\",\n    \"Vdash\": \"\\u22A9\",\n    \"vDash\": \"\\u22A8\",\n    \"vdash\": \"\\u22A2\",\n    \"Vdashl\": \"\\u2AE6\",\n    \"Vee\": \"\\u22C1\",\n    \"vee\": \"\\u2228\",\n    \"veebar\": \"\\u22BB\",\n    \"veeeq\": \"\\u225A\",\n    \"vellip\": \"\\u22EE\",\n    \"Verbar\": \"\\u2016\",\n    \"verbar\": \"|\",\n    \"Vert\": \"\\u2016\",\n    \"vert\": \"|\",\n    \"VerticalBar\": \"\\u2223\",\n    \"VerticalLine\": \"|\",\n    \"VerticalSeparator\": \"\\u2758\",\n    \"VerticalTilde\": \"\\u2240\",\n    \"VeryThinSpace\": \"\\u200A\",\n    \"Vfr\": \"\\uD835\\uDD19\",\n    \"vfr\": \"\\uD835\\uDD33\",\n    \"vltri\": \"\\u22B2\",\n    \"vnsub\": \"\\u2282\\u20D2\",\n    \"vnsup\": \"\\u2283\\u20D2\",\n    \"Vopf\": \"\\uD835\\uDD4D\",\n    \"vopf\": \"\\uD835\\uDD67\",\n    \"vprop\": \"\\u221D\",\n    \"vrtri\": \"\\u22B3\",\n    \"Vscr\": \"\\uD835\\uDCB1\",\n    \"vscr\": \"\\uD835\\uDCCB\",\n    \"vsubnE\": \"\\u2ACB\\uFE00\",\n    \"vsubne\": \"\\u228A\\uFE00\",\n    \"vsupnE\": \"\\u2ACC\\uFE00\",\n    \"vsupne\": \"\\u228B\\uFE00\",\n    \"Vvdash\": \"\\u22AA\",\n    \"vzigzag\": \"\\u299A\",\n    \"Wcirc\": \"\\u0174\",\n    \"wcirc\": \"\\u0175\",\n    \"wedbar\": \"\\u2A5F\",\n    \"Wedge\": \"\\u22C0\",\n    \"wedge\": \"\\u2227\",\n    \"wedgeq\": \"\\u2259\",\n    \"weierp\": \"\\u2118\",\n    \"Wfr\": \"\\uD835\\uDD1A\",\n    \"wfr\": \"\\uD835\\uDD34\",\n    \"Wopf\": \"\\uD835\\uDD4E\",\n    \"wopf\": \"\\uD835\\uDD68\",\n    \"wp\": \"\\u2118\",\n    \"wr\": \"\\u2240\",\n    \"wreath\": \"\\u2240\",\n    \"Wscr\": \"\\uD835\\uDCB2\",\n    \"wscr\": \"\\uD835\\uDCCC\",\n    \"xcap\": \"\\u22C2\",\n    \"xcirc\": \"\\u25EF\",\n    \"xcup\": \"\\u22C3\",\n    \"xdtri\": \"\\u25BD\",\n    \"Xfr\": \"\\uD835\\uDD1B\",\n    \"xfr\": \"\\uD835\\uDD35\",\n    \"xhArr\": \"\\u27FA\",\n    \"xharr\": \"\\u27F7\",\n    \"Xi\": \"\\u039E\",\n    \"xi\": \"\\u03BE\",\n    \"xlArr\": \"\\u27F8\",\n    \"xlarr\": \"\\u27F5\",\n    \"xmap\": \"\\u27FC\",\n    \"xnis\": \"\\u22FB\",\n    \"xodot\": \"\\u2A00\",\n    \"Xopf\": \"\\uD835\\uDD4F\",\n    \"xopf\": \"\\uD835\\uDD69\",\n    \"xoplus\": \"\\u2A01\",\n    \"xotime\": \"\\u2A02\",\n    \"xrArr\": \"\\u27F9\",\n    \"xrarr\": \"\\u27F6\",\n    \"Xscr\": \"\\uD835\\uDCB3\",\n    \"xscr\": \"\\uD835\\uDCCD\",\n    \"xsqcup\": \"\\u2A06\",\n    \"xuplus\": \"\\u2A04\",\n    \"xutri\": \"\\u25B3\",\n    \"xvee\": \"\\u22C1\",\n    \"xwedge\": \"\\u22C0\",\n    \"Yacute\": \"\\xDD\",\n    \"yacute\": \"\\xFD\",\n    \"YAcy\": \"\\u042F\",\n    \"yacy\": \"\\u044F\",\n    \"Ycirc\": \"\\u0176\",\n    \"ycirc\": \"\\u0177\",\n    \"Ycy\": \"\\u042B\",\n    \"ycy\": \"\\u044B\",\n    \"yen\": \"\\xA5\",\n    \"Yfr\": \"\\uD835\\uDD1C\",\n    \"yfr\": \"\\uD835\\uDD36\",\n    \"YIcy\": \"\\u0407\",\n    \"yicy\": \"\\u0457\",\n    \"Yopf\": \"\\uD835\\uDD50\",\n    \"yopf\": \"\\uD835\\uDD6A\",\n    \"Yscr\": \"\\uD835\\uDCB4\",\n    \"yscr\": \"\\uD835\\uDCCE\",\n    \"YUcy\": \"\\u042E\",\n    \"yucy\": \"\\u044E\",\n    \"Yuml\": \"\\u0178\",\n    \"yuml\": \"\\xFF\",\n    \"Zacute\": \"\\u0179\",\n    \"zacute\": \"\\u017A\",\n    \"Zcaron\": \"\\u017D\",\n    \"zcaron\": \"\\u017E\",\n    \"Zcy\": \"\\u0417\",\n    \"zcy\": \"\\u0437\",\n    \"Zdot\": \"\\u017B\",\n    \"zdot\": \"\\u017C\",\n    \"zeetrf\": \"\\u2128\",\n    \"ZeroWidthSpace\": \"\\u200B\",\n    \"Zeta\": \"\\u0396\",\n    \"zeta\": \"\\u03B6\",\n    \"Zfr\": \"\\u2128\",\n    \"zfr\": \"\\uD835\\uDD37\",\n    \"ZHcy\": \"\\u0416\",\n    \"zhcy\": \"\\u0436\",\n    \"zigrarr\": \"\\u21DD\",\n    \"Zopf\": \"\\u2124\",\n    \"zopf\": \"\\uD835\\uDD6B\",\n    \"Zscr\": \"\\uD835\\uDCB5\",\n    \"zscr\": \"\\uD835\\uDCCF\",\n    \"zwj\": \"\\u200D\",\n    \"zwnj\": \"\\u200C\"\n  };\n  var hasOwn = Object.prototype.hasOwnProperty;\n\n  function has(object, key) {\n    return object ? hasOwn.call(object, key) : false;\n  }\n\n  function decodeEntity(name) {\n    if (has(entities, name)) {\n      return entities[name];\n    } else {\n      return name;\n    }\n  }\n\n  var hasOwn$1 = Object.prototype.hasOwnProperty;\n\n  function has$1(object, key) {\n    return object ? hasOwn$1.call(object, key) : false;\n  } // Extend objects\n  //\n\n\n  function assign(obj\n  /*from1, from2, from3, ...*/\n  ) {\n    var sources = [].slice.call(arguments, 1);\n    sources.forEach(function (source) {\n      if (!source) {\n        return;\n      }\n\n      if (typeof source !== 'object') {\n        throw new TypeError(source + 'must be object');\n      }\n\n      Object.keys(source).forEach(function (key) {\n        obj[key] = source[key];\n      });\n    });\n    return obj;\n  } ////////////////////////////////////////////////////////////////////////////////\n\n\n  var UNESCAPE_MD_RE = /\\\\([\\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\n  function unescapeMd(str) {\n    if (str.indexOf('\\\\') < 0) {\n      return str;\n    }\n\n    return str.replace(UNESCAPE_MD_RE, '$1');\n  } ////////////////////////////////////////////////////////////////////////////////\n\n\n  function isValidEntityCode(c) {\n    /*eslint no-bitwise:0*/\n    // broken sequence\n    if (c >= 0xD800 && c <= 0xDFFF) {\n      return false;\n    } // never used\n\n\n    if (c >= 0xFDD0 && c <= 0xFDEF) {\n      return false;\n    }\n\n    if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) {\n      return false;\n    } // control codes\n\n\n    if (c >= 0x00 && c <= 0x08) {\n      return false;\n    }\n\n    if (c === 0x0B) {\n      return false;\n    }\n\n    if (c >= 0x0E && c <= 0x1F) {\n      return false;\n    }\n\n    if (c >= 0x7F && c <= 0x9F) {\n      return false;\n    } // out of range\n\n\n    if (c > 0x10FFFF) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function fromCodePoint(c) {\n    /*eslint no-bitwise:0*/\n    if (c > 0xffff) {\n      c -= 0x10000;\n      var surrogate1 = 0xd800 + (c >> 10),\n          surrogate2 = 0xdc00 + (c & 0x3ff);\n      return String.fromCharCode(surrogate1, surrogate2);\n    }\n\n    return String.fromCharCode(c);\n  }\n\n  var NAMED_ENTITY_RE = /&([a-z#][a-z0-9]{1,31});/gi;\n  var DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\n  function replaceEntityPattern(match, name) {\n    var code = 0;\n    var decoded = decodeEntity(name);\n\n    if (name !== decoded) {\n      return decoded;\n    } else if (name.charCodeAt(0) === 0x23\n    /* # */\n    && DIGITAL_ENTITY_TEST_RE.test(name)) {\n      code = name[1].toLowerCase() === 'x' ? parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n      if (isValidEntityCode(code)) {\n        return fromCodePoint(code);\n      }\n    }\n\n    return match;\n  }\n\n  function replaceEntities(str) {\n    if (str.indexOf('&') < 0) {\n      return str;\n    }\n\n    return str.replace(NAMED_ENTITY_RE, replaceEntityPattern);\n  } ////////////////////////////////////////////////////////////////////////////////\n\n\n  var HTML_ESCAPE_TEST_RE = /[&<>\"]/;\n  var HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\n  var HTML_REPLACEMENTS = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;'\n  };\n\n  function replaceUnsafeChar(ch) {\n    return HTML_REPLACEMENTS[ch];\n  }\n\n  function escapeHtml(str) {\n    if (HTML_ESCAPE_TEST_RE.test(str)) {\n      return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n    }\n\n    return str;\n  }\n  /**\n   * Renderer rules cache\n   */\n\n\n  var rules = {};\n  /**\n   * Blockquotes\n   */\n\n  rules.blockquote_open = function\n    /* tokens, idx, options, env */\n  () {\n    return '<blockquote>\\n';\n  };\n\n  rules.blockquote_close = function (tokens, idx\n  /*, options, env */\n  ) {\n    return '</blockquote>' + getBreak(tokens, idx);\n  };\n  /**\n   * Code\n   */\n\n\n  rules.code = function (tokens, idx\n  /*, options, env */\n  ) {\n    if (tokens[idx].block) {\n      return '<pre><code>' + escapeHtml(tokens[idx].content) + '</code></pre>' + getBreak(tokens, idx);\n    }\n\n    return '<code>' + escapeHtml(tokens[idx].content) + '</code>';\n  };\n  /**\n   * Fenced code blocks\n   */\n\n\n  rules.fence = function (tokens, idx, options, env, instance) {\n    var token = tokens[idx];\n    var langClass = '';\n    var langPrefix = options.langPrefix;\n    var langName = '',\n        fences,\n        fenceName;\n    var highlighted;\n\n    if (token.params) {\n      //\n      // ```foo bar\n      //\n      // Try custom renderer \"foo\" first. That will simplify overwrite\n      // for diagrams, latex, and any other fenced block with custom look\n      //\n      fences = token.params.split(/\\s+/g);\n      fenceName = fences.join(' ');\n\n      if (has$1(instance.rules.fence_custom, fences[0])) {\n        return instance.rules.fence_custom[fences[0]](tokens, idx, options, env, instance);\n      }\n\n      langName = escapeHtml(replaceEntities(unescapeMd(fenceName)));\n      langClass = ' class=\"' + langPrefix + langName + '\"';\n    }\n\n    if (options.highlight) {\n      highlighted = options.highlight.apply(options.highlight, [token.content].concat(fences)) || escapeHtml(token.content);\n    } else {\n      highlighted = escapeHtml(token.content);\n    }\n\n    return '<pre><code' + langClass + '>' + highlighted + '</code></pre>' + getBreak(tokens, idx);\n  };\n\n  rules.fence_custom = {};\n  /**\n   * Headings\n   */\n\n  rules.heading_open = function (tokens, idx\n  /*, options, env */\n  ) {\n    return '<h' + tokens[idx].hLevel + '>';\n  };\n\n  rules.heading_close = function (tokens, idx\n  /*, options, env */\n  ) {\n    return '</h' + tokens[idx].hLevel + '>\\n';\n  };\n  /**\n   * Horizontal rules\n   */\n\n\n  rules.hr = function (tokens, idx, options\n  /*, env */\n  ) {\n    return (options.xhtmlOut ? '<hr />' : '<hr>') + getBreak(tokens, idx);\n  };\n  /**\n   * Bullets\n   */\n\n\n  rules.bullet_list_open = function\n    /* tokens, idx, options, env */\n  () {\n    return '<ul>\\n';\n  };\n\n  rules.bullet_list_close = function (tokens, idx\n  /*, options, env */\n  ) {\n    return '</ul>' + getBreak(tokens, idx);\n  };\n  /**\n   * List items\n   */\n\n\n  rules.list_item_open = function\n    /* tokens, idx, options, env */\n  () {\n    return '<li>';\n  };\n\n  rules.list_item_close = function\n    /* tokens, idx, options, env */\n  () {\n    return '</li>\\n';\n  };\n  /**\n   * Ordered list items\n   */\n\n\n  rules.ordered_list_open = function (tokens, idx\n  /*, options, env */\n  ) {\n    var token = tokens[idx];\n    var order = token.order > 1 ? ' start=\"' + token.order + '\"' : '';\n    return '<ol' + order + '>\\n';\n  };\n\n  rules.ordered_list_close = function (tokens, idx\n  /*, options, env */\n  ) {\n    return '</ol>' + getBreak(tokens, idx);\n  };\n  /**\n   * Paragraphs\n   */\n\n\n  rules.paragraph_open = function (tokens, idx\n  /*, options, env */\n  ) {\n    return tokens[idx].tight ? '' : '<p>';\n  };\n\n  rules.paragraph_close = function (tokens, idx\n  /*, options, env */\n  ) {\n    var addBreak = !(tokens[idx].tight && idx && tokens[idx - 1].type === 'inline' && !tokens[idx - 1].content);\n    return (tokens[idx].tight ? '' : '</p>') + (addBreak ? getBreak(tokens, idx) : '');\n  };\n  /**\n   * Links\n   */\n\n\n  rules.link_open = function (tokens, idx, options\n  /* env */\n  ) {\n    var title = tokens[idx].title ? ' title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\"' : '';\n    var target = options.linkTarget ? ' target=\"' + options.linkTarget + '\"' : '';\n    return '<a href=\"' + escapeHtml(tokens[idx].href) + '\"' + title + target + '>';\n  };\n\n  rules.link_close = function\n    /* tokens, idx, options, env */\n  () {\n    return '</a>';\n  };\n  /**\n   * Images\n   */\n\n\n  rules.image = function (tokens, idx, options\n  /*, env */\n  ) {\n    var src = ' src=\"' + escapeHtml(tokens[idx].src) + '\"';\n    var title = tokens[idx].title ? ' title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\"' : '';\n    var alt = ' alt=\"' + (tokens[idx].alt ? escapeHtml(replaceEntities(unescapeMd(tokens[idx].alt))) : '') + '\"';\n    var suffix = options.xhtmlOut ? ' /' : '';\n    return '<img' + src + alt + title + suffix + '>';\n  };\n  /**\n   * Tables\n   */\n\n\n  rules.table_open = function\n    /* tokens, idx, options, env */\n  () {\n    return '<table>\\n';\n  };\n\n  rules.table_close = function\n    /* tokens, idx, options, env */\n  () {\n    return '</table>\\n';\n  };\n\n  rules.thead_open = function\n    /* tokens, idx, options, env */\n  () {\n    return '<thead>\\n';\n  };\n\n  rules.thead_close = function\n    /* tokens, idx, options, env */\n  () {\n    return '</thead>\\n';\n  };\n\n  rules.tbody_open = function\n    /* tokens, idx, options, env */\n  () {\n    return '<tbody>\\n';\n  };\n\n  rules.tbody_close = function\n    /* tokens, idx, options, env */\n  () {\n    return '</tbody>\\n';\n  };\n\n  rules.tr_open = function\n    /* tokens, idx, options, env */\n  () {\n    return '<tr>';\n  };\n\n  rules.tr_close = function\n    /* tokens, idx, options, env */\n  () {\n    return '</tr>\\n';\n  };\n\n  rules.th_open = function (tokens, idx\n  /*, options, env */\n  ) {\n    var token = tokens[idx];\n    return '<th' + (token.align ? ' style=\"text-align:' + token.align + '\"' : '') + '>';\n  };\n\n  rules.th_close = function\n    /* tokens, idx, options, env */\n  () {\n    return '</th>';\n  };\n\n  rules.td_open = function (tokens, idx\n  /*, options, env */\n  ) {\n    var token = tokens[idx];\n    return '<td' + (token.align ? ' style=\"text-align:' + token.align + '\"' : '') + '>';\n  };\n\n  rules.td_close = function\n    /* tokens, idx, options, env */\n  () {\n    return '</td>';\n  };\n  /**\n   * Bold\n   */\n\n\n  rules.strong_open = function\n    /* tokens, idx, options, env */\n  () {\n    return '<strong>';\n  };\n\n  rules.strong_close = function\n    /* tokens, idx, options, env */\n  () {\n    return '</strong>';\n  };\n  /**\n   * Italicize\n   */\n\n\n  rules.em_open = function\n    /* tokens, idx, options, env */\n  () {\n    return '<em>';\n  };\n\n  rules.em_close = function\n    /* tokens, idx, options, env */\n  () {\n    return '</em>';\n  };\n  /**\n   * Strikethrough\n   */\n\n\n  rules.del_open = function\n    /* tokens, idx, options, env */\n  () {\n    return '<del>';\n  };\n\n  rules.del_close = function\n    /* tokens, idx, options, env */\n  () {\n    return '</del>';\n  };\n  /**\n   * Insert\n   */\n\n\n  rules.ins_open = function\n    /* tokens, idx, options, env */\n  () {\n    return '<ins>';\n  };\n\n  rules.ins_close = function\n    /* tokens, idx, options, env */\n  () {\n    return '</ins>';\n  };\n  /**\n   * Highlight\n   */\n\n\n  rules.mark_open = function\n    /* tokens, idx, options, env */\n  () {\n    return '<mark>';\n  };\n\n  rules.mark_close = function\n    /* tokens, idx, options, env */\n  () {\n    return '</mark>';\n  };\n  /**\n   * Super- and sub-script\n   */\n\n\n  rules.sub = function (tokens, idx\n  /*, options, env */\n  ) {\n    return '<sub>' + escapeHtml(tokens[idx].content) + '</sub>';\n  };\n\n  rules.sup = function (tokens, idx\n  /*, options, env */\n  ) {\n    return '<sup>' + escapeHtml(tokens[idx].content) + '</sup>';\n  };\n  /**\n   * Breaks\n   */\n\n\n  rules.hardbreak = function (tokens, idx, options\n  /*, env */\n  ) {\n    return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n  };\n\n  rules.softbreak = function (tokens, idx, options\n  /*, env */\n  ) {\n    return options.breaks ? options.xhtmlOut ? '<br />\\n' : '<br>\\n' : '\\n';\n  };\n  /**\n   * Text\n   */\n\n\n  rules.text = function (tokens, idx\n  /*, options, env */\n  ) {\n    return escapeHtml(tokens[idx].content);\n  };\n  /**\n   * Content\n   */\n\n\n  rules.htmlblock = function (tokens, idx\n  /*, options, env */\n  ) {\n    return tokens[idx].content;\n  };\n\n  rules.htmltag = function (tokens, idx\n  /*, options, env */\n  ) {\n    return tokens[idx].content;\n  };\n  /**\n   * Abbreviations, initialism\n   */\n\n\n  rules.abbr_open = function (tokens, idx\n  /*, options, env */\n  ) {\n    return '<abbr title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\">';\n  };\n\n  rules.abbr_close = function\n    /* tokens, idx, options, env */\n  () {\n    return '</abbr>';\n  };\n  /**\n   * Footnotes\n   */\n\n\n  rules.footnote_ref = function (tokens, idx) {\n    var n = Number(tokens[idx].id + 1).toString();\n    var id = 'fnref' + n;\n\n    if (tokens[idx].subId > 0) {\n      id += ':' + tokens[idx].subId;\n    }\n\n    return '<sup class=\"footnote-ref\"><a href=\"#fn' + n + '\" id=\"' + id + '\">[' + n + ']</a></sup>';\n  };\n\n  rules.footnote_block_open = function (tokens, idx, options) {\n    var hr = options.xhtmlOut ? '<hr class=\"footnotes-sep\" />\\n' : '<hr class=\"footnotes-sep\">\\n';\n    return hr + '<section class=\"footnotes\">\\n<ol class=\"footnotes-list\">\\n';\n  };\n\n  rules.footnote_block_close = function () {\n    return '</ol>\\n</section>\\n';\n  };\n\n  rules.footnote_open = function (tokens, idx) {\n    var id = Number(tokens[idx].id + 1).toString();\n    return '<li id=\"fn' + id + '\"  class=\"footnote-item\">';\n  };\n\n  rules.footnote_close = function () {\n    return '</li>\\n';\n  };\n\n  rules.footnote_anchor = function (tokens, idx) {\n    var n = Number(tokens[idx].id + 1).toString();\n    var id = 'fnref' + n;\n\n    if (tokens[idx].subId > 0) {\n      id += ':' + tokens[idx].subId;\n    }\n\n    return ' <a href=\"#' + id + '\" class=\"footnote-backref\">↩</a>';\n  };\n  /**\n   * Definition lists\n   */\n\n\n  rules.dl_open = function () {\n    return '<dl>\\n';\n  };\n\n  rules.dt_open = function () {\n    return '<dt>';\n  };\n\n  rules.dd_open = function () {\n    return '<dd>';\n  };\n\n  rules.dl_close = function () {\n    return '</dl>\\n';\n  };\n\n  rules.dt_close = function () {\n    return '</dt>\\n';\n  };\n\n  rules.dd_close = function () {\n    return '</dd>\\n';\n  };\n  /**\n   * Helper functions\n   */\n\n\n  function nextToken(tokens, idx) {\n    if (++idx >= tokens.length - 2) {\n      return idx;\n    }\n\n    if (tokens[idx].type === 'paragraph_open' && tokens[idx].tight && tokens[idx + 1].type === 'inline' && tokens[idx + 1].content.length === 0 && tokens[idx + 2].type === 'paragraph_close' && tokens[idx + 2].tight) {\n      return nextToken(tokens, idx + 2);\n    }\n\n    return idx;\n  }\n  /**\n   * Check to see if `\\n` is needed before the next token.\n   *\n   * @param  {Array} `tokens`\n   * @param  {Number} `idx`\n   * @return {String} Empty string or newline\n   * @api private\n   */\n\n\n  var getBreak = rules.getBreak = function getBreak(tokens, idx) {\n    idx = nextToken(tokens, idx);\n\n    if (idx < tokens.length && tokens[idx].type === 'list_item_close') {\n      return '';\n    }\n\n    return '\\n';\n  };\n  /**\n   * Renderer class. Renders HTML and exposes `rules` to allow\n   * local modifications.\n   */\n\n\n  function Renderer() {\n    this.rules = assign({}, rules); // exported helper, for custom rules only\n\n    this.getBreak = rules.getBreak;\n  }\n  /**\n   * Render a string of inline HTML with the given `tokens` and\n   * `options`.\n   *\n   * @param  {Array} `tokens`\n   * @param  {Object} `options`\n   * @param  {Object} `env`\n   * @return {String}\n   * @api public\n   */\n\n\n  Renderer.prototype.renderInline = function (tokens, options, env) {\n    var _rules = this.rules;\n    var len = tokens.length,\n        i = 0;\n    var result = '';\n\n    while (len--) {\n      result += _rules[tokens[i].type](tokens, i++, options, env, this);\n    }\n\n    return result;\n  };\n  /**\n   * Render a string of HTML with the given `tokens` and\n   * `options`.\n   *\n   * @param  {Array} `tokens`\n   * @param  {Object} `options`\n   * @param  {Object} `env`\n   * @return {String}\n   * @api public\n   */\n\n\n  Renderer.prototype.render = function (tokens, options, env) {\n    var _rules = this.rules;\n    var len = tokens.length,\n        i = -1;\n    var result = '';\n\n    while (++i < len) {\n      if (tokens[i].type === 'inline') {\n        result += this.renderInline(tokens[i].children, options, env);\n      } else {\n        result += _rules[tokens[i].type](tokens, i, options, env, this);\n      }\n    }\n\n    return result;\n  };\n  /**\n   * Ruler is a helper class for building responsibility chains from\n   * parse rules. It allows:\n   *\n   *   - easy stack rules chains\n   *   - getting main chain and named chains content (as arrays of functions)\n   *\n   * Helper methods, should not be used directly.\n   * @api private\n   */\n\n\n  function Ruler() {\n    // List of added rules. Each element is:\n    //\n    // { name: XXX,\n    //   enabled: Boolean,\n    //   fn: Function(),\n    //   alt: [ name2, name3 ] }\n    //\n    this.__rules__ = []; // Cached rule chains.\n    //\n    // First level - chain name, '' for default.\n    // Second level - digital anchor for fast filtering by charcodes.\n    //\n\n    this.__cache__ = null;\n  }\n  /**\n   * Find the index of a rule by `name`.\n   *\n   * @param  {String} `name`\n   * @return {Number} Index of the given `name`\n   * @api private\n   */\n\n\n  Ruler.prototype.__find__ = function (name) {\n    var len = this.__rules__.length;\n    var i = -1;\n\n    while (len--) {\n      if (this.__rules__[++i].name === name) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n  /**\n   * Build the rules lookup cache\n   *\n   * @api private\n   */\n\n\n  Ruler.prototype.__compile__ = function () {\n    var self = this;\n    var chains = ['']; // collect unique names\n\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) {\n        return;\n      }\n\n      rule.alt.forEach(function (altName) {\n        if (chains.indexOf(altName) < 0) {\n          chains.push(altName);\n        }\n      });\n    });\n\n    self.__cache__ = {};\n    chains.forEach(function (chain) {\n      self.__cache__[chain] = [];\n\n      self.__rules__.forEach(function (rule) {\n        if (!rule.enabled) {\n          return;\n        }\n\n        if (chain && rule.alt.indexOf(chain) < 0) {\n          return;\n        }\n\n        self.__cache__[chain].push(rule.fn);\n      });\n    });\n  };\n  /**\n   * Ruler public methods\n   * ------------------------------------------------\n   */\n\n  /**\n   * Replace rule function\n   *\n   * @param  {String} `name` Rule name\n   * @param  {Function `fn`\n   * @param  {Object} `options`\n   * @api private\n   */\n\n\n  Ruler.prototype.at = function (name, fn, options) {\n    var idx = this.__find__(name);\n\n    var opt = options || {};\n\n    if (idx === -1) {\n      throw new Error('Parser rule not found: ' + name);\n    }\n\n    this.__rules__[idx].fn = fn;\n    this.__rules__[idx].alt = opt.alt || [];\n    this.__cache__ = null;\n  };\n  /**\n   * Add a rule to the chain before given the `ruleName`.\n   *\n   * @param  {String}   `beforeName`\n   * @param  {String}   `ruleName`\n   * @param  {Function} `fn`\n   * @param  {Object}   `options`\n   * @api private\n   */\n\n\n  Ruler.prototype.before = function (beforeName, ruleName, fn, options) {\n    var idx = this.__find__(beforeName);\n\n    var opt = options || {};\n\n    if (idx === -1) {\n      throw new Error('Parser rule not found: ' + beforeName);\n    }\n\n    this.__rules__.splice(idx, 0, {\n      name: ruleName,\n      enabled: true,\n      fn: fn,\n      alt: opt.alt || []\n    });\n\n    this.__cache__ = null;\n  };\n  /**\n   * Add a rule to the chain after the given `ruleName`.\n   *\n   * @param  {String}   `afterName`\n   * @param  {String}   `ruleName`\n   * @param  {Function} `fn`\n   * @param  {Object}   `options`\n   * @api private\n   */\n\n\n  Ruler.prototype.after = function (afterName, ruleName, fn, options) {\n    var idx = this.__find__(afterName);\n\n    var opt = options || {};\n\n    if (idx === -1) {\n      throw new Error('Parser rule not found: ' + afterName);\n    }\n\n    this.__rules__.splice(idx + 1, 0, {\n      name: ruleName,\n      enabled: true,\n      fn: fn,\n      alt: opt.alt || []\n    });\n\n    this.__cache__ = null;\n  };\n  /**\n   * Add a rule to the end of chain.\n   *\n   * @param  {String}   `ruleName`\n   * @param  {Function} `fn`\n   * @param  {Object}   `options`\n   * @return {String}\n   */\n\n\n  Ruler.prototype.push = function (ruleName, fn, options) {\n    var opt = options || {};\n\n    this.__rules__.push({\n      name: ruleName,\n      enabled: true,\n      fn: fn,\n      alt: opt.alt || []\n    });\n\n    this.__cache__ = null;\n  };\n  /**\n   * Enable a rule or list of rules.\n   *\n   * @param  {String|Array} `list` Name or array of rule names to enable\n   * @param  {Boolean} `strict` If `true`, all non listed rules will be disabled.\n   * @api private\n   */\n\n\n  Ruler.prototype.enable = function (list, strict) {\n    list = !Array.isArray(list) ? [list] : list; // In strict mode disable all existing rules first\n\n    if (strict) {\n      this.__rules__.forEach(function (rule) {\n        rule.enabled = false;\n      });\n    } // Search by name and enable\n\n\n    list.forEach(function (name) {\n      var idx = this.__find__(name);\n\n      if (idx < 0) {\n        throw new Error('Rules manager: invalid rule name ' + name);\n      }\n\n      this.__rules__[idx].enabled = true;\n    }, this);\n    this.__cache__ = null;\n  };\n  /**\n   * Disable a rule or list of rules.\n   *\n   * @param  {String|Array} `list` Name or array of rule names to disable\n   * @api private\n   */\n\n\n  Ruler.prototype.disable = function (list) {\n    list = !Array.isArray(list) ? [list] : list; // Search by name and disable\n\n    list.forEach(function (name) {\n      var idx = this.__find__(name);\n\n      if (idx < 0) {\n        throw new Error('Rules manager: invalid rule name ' + name);\n      }\n\n      this.__rules__[idx].enabled = false;\n    }, this);\n    this.__cache__ = null;\n  };\n  /**\n   * Get a rules list as an array of functions.\n   *\n   * @param  {String} `chainName`\n   * @return {Object}\n   * @api private\n   */\n\n\n  Ruler.prototype.getRules = function (chainName) {\n    if (this.__cache__ === null) {\n      this.__compile__();\n    }\n\n    return this.__cache__[chainName] || [];\n  };\n\n  function block(state) {\n    if (state.inlineMode) {\n      state.tokens.push({\n        type: 'inline',\n        content: state.src.replace(/\\n/g, ' ').trim(),\n        level: 0,\n        lines: [0, 1],\n        children: []\n      });\n    } else {\n      state.block.parse(state.src, state.options, state.env, state.tokens);\n    }\n  } // Inline parser state\n\n\n  function StateInline(src, parserInline, options, env, outTokens) {\n    this.src = src;\n    this.env = env;\n    this.options = options;\n    this.parser = parserInline;\n    this.tokens = outTokens;\n    this.pos = 0;\n    this.posMax = this.src.length;\n    this.level = 0;\n    this.pending = '';\n    this.pendingLevel = 0;\n    this.cache = []; // Stores { start: end } pairs. Useful for backtrack\n    // optimization of pairs parse (emphasis, strikes).\n    // Link parser state vars\n\n    this.isInLabel = false; // Set true when seek link label - we should disable\n    // \"paired\" rules (emphasis, strikes) to not skip\n    // tailing `]`\n\n    this.linkLevel = 0; // Increment for each nesting link. Used to prevent\n    // nesting in definitions\n\n    this.linkContent = ''; // Temporary storage for link url\n\n    this.labelUnmatchedScopes = 0; // Track unpaired `[` for link labels\n    // (backtrack optimization)\n  } // Flush pending text\n  //\n\n\n  StateInline.prototype.pushPending = function () {\n    this.tokens.push({\n      type: 'text',\n      content: this.pending,\n      level: this.pendingLevel\n    });\n    this.pending = '';\n  }; // Push new token to \"stream\".\n  // If pending text exists - flush it as text token\n  //\n\n\n  StateInline.prototype.push = function (token) {\n    if (this.pending) {\n      this.pushPending();\n    }\n\n    this.tokens.push(token);\n    this.pendingLevel = this.level;\n  }; // Store value to cache.\n  // !!! Implementation has parser-specific optimizations\n  // !!! keys MUST be integer, >= 0; values MUST be integer, > 0\n  //\n\n\n  StateInline.prototype.cacheSet = function (key, val) {\n    for (var i = this.cache.length; i <= key; i++) {\n      this.cache.push(0);\n    }\n\n    this.cache[key] = val;\n  }; // Get cache value\n  //\n\n\n  StateInline.prototype.cacheGet = function (key) {\n    return key < this.cache.length ? this.cache[key] : 0;\n  };\n  /**\n   * Parse link labels\n   *\n   * This function assumes that first character (`[`) already matches;\n   * returns the end of the label.\n   *\n   * @param  {Object} state\n   * @param  {Number} start\n   * @api private\n   */\n\n\n  function parseLinkLabel(state, start) {\n    var level,\n        found,\n        marker,\n        labelEnd = -1,\n        max = state.posMax,\n        oldPos = state.pos,\n        oldFlag = state.isInLabel;\n\n    if (state.isInLabel) {\n      return -1;\n    }\n\n    if (state.labelUnmatchedScopes) {\n      state.labelUnmatchedScopes--;\n      return -1;\n    }\n\n    state.pos = start + 1;\n    state.isInLabel = true;\n    level = 1;\n\n    while (state.pos < max) {\n      marker = state.src.charCodeAt(state.pos);\n\n      if (marker === 0x5B\n      /* [ */\n      ) {\n        level++;\n      } else if (marker === 0x5D\n      /* ] */\n      ) {\n        level--;\n\n        if (level === 0) {\n          found = true;\n          break;\n        }\n      }\n\n      state.parser.skipToken(state);\n    }\n\n    if (found) {\n      labelEnd = state.pos;\n      state.labelUnmatchedScopes = 0;\n    } else {\n      state.labelUnmatchedScopes = level - 1;\n    } // restore old state\n\n\n    state.pos = oldPos;\n    state.isInLabel = oldFlag;\n    return labelEnd;\n  } // Parse abbreviation definitions, i.e. `*[abbr]: description`\n\n\n  function parseAbbr(str, parserInline, options, env) {\n    var state, labelEnd, pos, max, label, title;\n\n    if (str.charCodeAt(0) !== 0x2A\n    /* * */\n    ) {\n      return -1;\n    }\n\n    if (str.charCodeAt(1) !== 0x5B\n    /* [ */\n    ) {\n      return -1;\n    }\n\n    if (str.indexOf(']:') === -1) {\n      return -1;\n    }\n\n    state = new StateInline(str, parserInline, options, env, []);\n    labelEnd = parseLinkLabel(state, 1);\n\n    if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A\n    /* : */\n    ) {\n      return -1;\n    }\n\n    max = state.posMax; // abbr title is always one line, so looking for ending \"\\n\" here\n\n    for (pos = labelEnd + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x0A) {\n        break;\n      }\n    }\n\n    label = str.slice(2, labelEnd);\n    title = str.slice(labelEnd + 2, pos).trim();\n\n    if (title.length === 0) {\n      return -1;\n    }\n\n    if (!env.abbreviations) {\n      env.abbreviations = {};\n    } // prepend ':' to avoid conflict with Object.prototype members\n\n\n    if (typeof env.abbreviations[':' + label] === 'undefined') {\n      env.abbreviations[':' + label] = title;\n    }\n\n    return pos;\n  }\n\n  function abbr(state) {\n    var tokens = state.tokens,\n        i,\n        l,\n        content,\n        pos;\n\n    if (state.inlineMode) {\n      return;\n    } // Parse inlines\n\n\n    for (i = 1, l = tokens.length - 1; i < l; i++) {\n      if (tokens[i - 1].type === 'paragraph_open' && tokens[i].type === 'inline' && tokens[i + 1].type === 'paragraph_close') {\n        content = tokens[i].content;\n\n        while (content.length) {\n          pos = parseAbbr(content, state.inline, state.options, state.env);\n\n          if (pos < 0) {\n            break;\n          }\n\n          content = content.slice(pos).trim();\n        }\n\n        tokens[i].content = content;\n\n        if (!content.length) {\n          tokens[i - 1].tight = true;\n          tokens[i + 1].tight = true;\n        }\n      }\n    }\n  }\n\n  function normalizeLink(url) {\n    var normalized = replaceEntities(url); // We shouldn't care about the result of malformed URIs,\n    // and should not throw an exception.\n\n    try {\n      normalized = decodeURI(normalized);\n    } catch (err) {}\n\n    return encodeURI(normalized);\n  }\n  /**\n   * Parse link destination\n   *\n   *   - on success it returns a string and updates state.pos;\n   *   - on failure it returns null\n   *\n   * @param  {Object} state\n   * @param  {Number} pos\n   * @api private\n   */\n\n\n  function parseLinkDestination(state, pos) {\n    var code,\n        level,\n        link,\n        start = pos,\n        max = state.posMax;\n\n    if (state.src.charCodeAt(pos) === 0x3C\n    /* < */\n    ) {\n      pos++;\n\n      while (pos < max) {\n        code = state.src.charCodeAt(pos);\n\n        if (code === 0x0A\n        /* \\n */\n        ) {\n          return false;\n        }\n\n        if (code === 0x3E\n        /* > */\n        ) {\n          link = normalizeLink(unescapeMd(state.src.slice(start + 1, pos)));\n\n          if (!state.parser.validateLink(link)) {\n            return false;\n          }\n\n          state.pos = pos + 1;\n          state.linkContent = link;\n          return true;\n        }\n\n        if (code === 0x5C\n        /* \\ */\n        && pos + 1 < max) {\n          pos += 2;\n          continue;\n        }\n\n        pos++;\n      } // no closing '>'\n\n\n      return false;\n    } // this should be ... } else { ... branch\n\n\n    level = 0;\n\n    while (pos < max) {\n      code = state.src.charCodeAt(pos);\n\n      if (code === 0x20) {\n        break;\n      } // ascii control chars\n\n\n      if (code < 0x20 || code === 0x7F) {\n        break;\n      }\n\n      if (code === 0x5C\n      /* \\ */\n      && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      if (code === 0x28\n      /* ( */\n      ) {\n        level++;\n\n        if (level > 1) {\n          break;\n        }\n      }\n\n      if (code === 0x29\n      /* ) */\n      ) {\n        level--;\n\n        if (level < 0) {\n          break;\n        }\n      }\n\n      pos++;\n    }\n\n    if (start === pos) {\n      return false;\n    }\n\n    link = unescapeMd(state.src.slice(start, pos));\n\n    if (!state.parser.validateLink(link)) {\n      return false;\n    }\n\n    state.linkContent = link;\n    state.pos = pos;\n    return true;\n  }\n  /**\n   * Parse link title\n   *\n   *   - on success it returns a string and updates state.pos;\n   *   - on failure it returns null\n   *\n   * @param  {Object} state\n   * @param  {Number} pos\n   * @api private\n   */\n\n\n  function parseLinkTitle(state, pos) {\n    var code,\n        start = pos,\n        max = state.posMax,\n        marker = state.src.charCodeAt(pos);\n\n    if (marker !== 0x22\n    /* \" */\n    && marker !== 0x27\n    /* ' */\n    && marker !== 0x28\n    /* ( */\n    ) {\n      return false;\n    }\n\n    pos++; // if opening marker is \"(\", switch it to closing marker \")\"\n\n    if (marker === 0x28) {\n      marker = 0x29;\n    }\n\n    while (pos < max) {\n      code = state.src.charCodeAt(pos);\n\n      if (code === marker) {\n        state.pos = pos + 1;\n        state.linkContent = unescapeMd(state.src.slice(start + 1, pos));\n        return true;\n      }\n\n      if (code === 0x5C\n      /* \\ */\n      && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    return false;\n  }\n\n  function normalizeReference(str) {\n    // use .toUpperCase() instead of .toLowerCase()\n    // here to avoid a conflict with Object.prototype\n    // members (most notably, `__proto__`)\n    return str.trim().replace(/\\s+/g, ' ').toUpperCase();\n  }\n\n  function parseReference(str, parser, options, env) {\n    var state, labelEnd, pos, max, code, start, href, title, label;\n\n    if (str.charCodeAt(0) !== 0x5B\n    /* [ */\n    ) {\n      return -1;\n    }\n\n    if (str.indexOf(']:') === -1) {\n      return -1;\n    }\n\n    state = new StateInline(str, parser, options, env, []);\n    labelEnd = parseLinkLabel(state, 0);\n\n    if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A\n    /* : */\n    ) {\n      return -1;\n    }\n\n    max = state.posMax; // [label]:   destination   'title'\n    //         ^^^ skip optional whitespace here\n\n    for (pos = labelEnd + 2; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n\n      if (code !== 0x20 && code !== 0x0A) {\n        break;\n      }\n    } // [label]:   destination   'title'\n    //            ^^^^^^^^^^^ parse this\n\n\n    if (!parseLinkDestination(state, pos)) {\n      return -1;\n    }\n\n    href = state.linkContent;\n    pos = state.pos; // [label]:   destination   'title'\n    //                       ^^^ skipping those spaces\n\n    start = pos;\n\n    for (pos = pos + 1; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n\n      if (code !== 0x20 && code !== 0x0A) {\n        break;\n      }\n    } // [label]:   destination   'title'\n    //                          ^^^^^^^ parse this\n\n\n    if (pos < max && start !== pos && parseLinkTitle(state, pos)) {\n      title = state.linkContent;\n      pos = state.pos;\n    } else {\n      title = '';\n      pos = start;\n    } // ensure that the end of the line is empty\n\n\n    while (pos < max && state.src.charCodeAt(pos) === 0x20\n    /* space */\n    ) {\n      pos++;\n    }\n\n    if (pos < max && state.src.charCodeAt(pos) !== 0x0A) {\n      return -1;\n    }\n\n    label = normalizeReference(str.slice(1, labelEnd));\n\n    if (typeof env.references[label] === 'undefined') {\n      env.references[label] = {\n        title: title,\n        href: href\n      };\n    }\n\n    return pos;\n  }\n\n  function references(state) {\n    var tokens = state.tokens,\n        i,\n        l,\n        content,\n        pos;\n    state.env.references = state.env.references || {};\n\n    if (state.inlineMode) {\n      return;\n    } // Scan definitions in paragraph inlines\n\n\n    for (i = 1, l = tokens.length - 1; i < l; i++) {\n      if (tokens[i].type === 'inline' && tokens[i - 1].type === 'paragraph_open' && tokens[i + 1].type === 'paragraph_close') {\n        content = tokens[i].content;\n\n        while (content.length) {\n          pos = parseReference(content, state.inline, state.options, state.env);\n\n          if (pos < 0) {\n            break;\n          }\n\n          content = content.slice(pos).trim();\n        }\n\n        tokens[i].content = content;\n\n        if (!content.length) {\n          tokens[i - 1].tight = true;\n          tokens[i + 1].tight = true;\n        }\n      }\n    }\n  }\n\n  function inline(state) {\n    var tokens = state.tokens,\n        tok,\n        i,\n        l; // Parse inlines\n\n    for (i = 0, l = tokens.length; i < l; i++) {\n      tok = tokens[i];\n\n      if (tok.type === 'inline') {\n        state.inline.parse(tok.content, state.options, state.env, tok.children);\n      }\n    }\n  }\n\n  function footnote_block(state) {\n    var i,\n        l,\n        j,\n        t,\n        lastParagraph,\n        list,\n        tokens,\n        current,\n        currentLabel,\n        level = 0,\n        insideRef = false,\n        refTokens = {};\n\n    if (!state.env.footnotes) {\n      return;\n    }\n\n    state.tokens = state.tokens.filter(function (tok) {\n      if (tok.type === 'footnote_reference_open') {\n        insideRef = true;\n        current = [];\n        currentLabel = tok.label;\n        return false;\n      }\n\n      if (tok.type === 'footnote_reference_close') {\n        insideRef = false; // prepend ':' to avoid conflict with Object.prototype members\n\n        refTokens[':' + currentLabel] = current;\n        return false;\n      }\n\n      if (insideRef) {\n        current.push(tok);\n      }\n\n      return !insideRef;\n    });\n\n    if (!state.env.footnotes.list) {\n      return;\n    }\n\n    list = state.env.footnotes.list;\n    state.tokens.push({\n      type: 'footnote_block_open',\n      level: level++\n    });\n\n    for (i = 0, l = list.length; i < l; i++) {\n      state.tokens.push({\n        type: 'footnote_open',\n        id: i,\n        level: level++\n      });\n\n      if (list[i].tokens) {\n        tokens = [];\n        tokens.push({\n          type: 'paragraph_open',\n          tight: false,\n          level: level++\n        });\n        tokens.push({\n          type: 'inline',\n          content: '',\n          level: level,\n          children: list[i].tokens\n        });\n        tokens.push({\n          type: 'paragraph_close',\n          tight: false,\n          level: --level\n        });\n      } else if (list[i].label) {\n        tokens = refTokens[':' + list[i].label];\n      }\n\n      state.tokens = state.tokens.concat(tokens);\n\n      if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {\n        lastParagraph = state.tokens.pop();\n      } else {\n        lastParagraph = null;\n      }\n\n      t = list[i].count > 0 ? list[i].count : 1;\n\n      for (j = 0; j < t; j++) {\n        state.tokens.push({\n          type: 'footnote_anchor',\n          id: i,\n          subId: j,\n          level: level\n        });\n      }\n\n      if (lastParagraph) {\n        state.tokens.push(lastParagraph);\n      }\n\n      state.tokens.push({\n        type: 'footnote_close',\n        level: --level\n      });\n    }\n\n    state.tokens.push({\n      type: 'footnote_block_close',\n      level: --level\n    });\n  } // Enclose abbreviations in <abbr> tags\n  //\n\n\n  var PUNCT_CHARS = ' \\n()[]\\'\".,!?-'; // from Google closure library\n  // http://closure-library.googlecode.com/git-history/docs/local_closure_goog_string_string.js.source.html#line1021\n\n  function regEscape(s) {\n    return s.replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1');\n  }\n\n  function abbr2(state) {\n    var i,\n        j,\n        l,\n        tokens,\n        token,\n        text,\n        nodes,\n        pos,\n        level,\n        reg,\n        m,\n        regText,\n        blockTokens = state.tokens;\n\n    if (!state.env.abbreviations) {\n      return;\n    }\n\n    if (!state.env.abbrRegExp) {\n      regText = '(^|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])' + '(' + Object.keys(state.env.abbreviations).map(function (x) {\n        return x.substr(1);\n      }).sort(function (a, b) {\n        return b.length - a.length;\n      }).map(regEscape).join('|') + ')' + '($|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])';\n      state.env.abbrRegExp = new RegExp(regText, 'g');\n    }\n\n    reg = state.env.abbrRegExp;\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') {\n        continue;\n      }\n\n      tokens = blockTokens[j].children; // We scan from the end, to keep position when new tags added.\n\n      for (i = tokens.length - 1; i >= 0; i--) {\n        token = tokens[i];\n\n        if (token.type !== 'text') {\n          continue;\n        }\n\n        pos = 0;\n        text = token.content;\n        reg.lastIndex = 0;\n        level = token.level;\n        nodes = [];\n\n        while (m = reg.exec(text)) {\n          if (reg.lastIndex > pos) {\n            nodes.push({\n              type: 'text',\n              content: text.slice(pos, m.index + m[1].length),\n              level: level\n            });\n          }\n\n          nodes.push({\n            type: 'abbr_open',\n            title: state.env.abbreviations[':' + m[2]],\n            level: level++\n          });\n          nodes.push({\n            type: 'text',\n            content: m[2],\n            level: level\n          });\n          nodes.push({\n            type: 'abbr_close',\n            level: --level\n          });\n          pos = reg.lastIndex - m[3].length;\n        }\n\n        if (!nodes.length) {\n          continue;\n        }\n\n        if (pos < text.length) {\n          nodes.push({\n            type: 'text',\n            content: text.slice(pos),\n            level: level\n          });\n        } // replace current node\n\n\n        blockTokens[j].children = tokens = [].concat(tokens.slice(0, i), nodes, tokens.slice(i + 1));\n      }\n    }\n  } // Simple typographical replacements\n  //\n  // TODO:\n  // - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n  // - miltiplication 2 x 4 -> 2 × 4\n\n\n  var RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n  var SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\n  var SCOPED_ABBR = {\n    'c': '©',\n    'r': '®',\n    'p': '§',\n    'tm': '™'\n  };\n\n  function replaceScopedAbbr(str) {\n    if (str.indexOf('(') < 0) {\n      return str;\n    }\n\n    return str.replace(SCOPED_ABBR_RE, function (match, name) {\n      return SCOPED_ABBR[name.toLowerCase()];\n    });\n  }\n\n  function replace(state) {\n    var i, token, text, inlineTokens, blkIdx;\n\n    if (!state.options.typographer) {\n      return;\n    }\n\n    for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n      if (state.tokens[blkIdx].type !== 'inline') {\n        continue;\n      }\n\n      inlineTokens = state.tokens[blkIdx].children;\n\n      for (i = inlineTokens.length - 1; i >= 0; i--) {\n        token = inlineTokens[i];\n\n        if (token.type === 'text') {\n          text = token.content;\n          text = replaceScopedAbbr(text);\n\n          if (RARE_RE.test(text)) {\n            text = text.replace(/\\+-/g, '±') // .., ..., ....... -> …\n            // but ?..... & !..... -> ?.. & !..\n            .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..').replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',') // em-dash\n            .replace(/(^|[^-])---([^-]|$)/mg, \"$1\\u2014$2\") // en-dash\n            .replace(/(^|\\s)--(\\s|$)/mg, \"$1\\u2013$2\").replace(/(^|[^-\\s])--([^-\\s]|$)/mg, \"$1\\u2013$2\");\n          }\n\n          token.content = text;\n        }\n      }\n    }\n  } // Convert straight quotation marks to typographic ones\n  //\n\n\n  var QUOTE_TEST_RE = /['\"]/;\n  var QUOTE_RE = /['\"]/g;\n  var PUNCT_RE = /[-\\s()\\[\\]]/;\n  var APOSTROPHE = '’'; // This function returns true if the character at `pos`\n  // could be inside a word.\n\n  function isLetter(str, pos) {\n    if (pos < 0 || pos >= str.length) {\n      return false;\n    }\n\n    return !PUNCT_RE.test(str[pos]);\n  }\n\n  function replaceAt(str, index, ch) {\n    return str.substr(0, index) + ch + str.substr(index + 1);\n  }\n\n  function smartquotes(state) {\n    /*eslint max-depth:0*/\n    var i, token, text, t, pos, max, thisLevel, lastSpace, nextSpace, item, canOpen, canClose, j, isSingle, blkIdx, tokens, stack;\n\n    if (!state.options.typographer) {\n      return;\n    }\n\n    stack = [];\n\n    for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n      if (state.tokens[blkIdx].type !== 'inline') {\n        continue;\n      }\n\n      tokens = state.tokens[blkIdx].children;\n      stack.length = 0;\n\n      for (i = 0; i < tokens.length; i++) {\n        token = tokens[i];\n\n        if (token.type !== 'text' || QUOTE_TEST_RE.test(token.text)) {\n          continue;\n        }\n\n        thisLevel = tokens[i].level;\n\n        for (j = stack.length - 1; j >= 0; j--) {\n          if (stack[j].level <= thisLevel) {\n            break;\n          }\n        }\n\n        stack.length = j + 1;\n        text = token.content;\n        pos = 0;\n        max = text.length;\n        /*eslint no-labels:0,block-scoped-var:0*/\n\n        OUTER: while (pos < max) {\n          QUOTE_RE.lastIndex = pos;\n          t = QUOTE_RE.exec(text);\n\n          if (!t) {\n            break;\n          }\n\n          lastSpace = !isLetter(text, t.index - 1);\n          pos = t.index + 1;\n          isSingle = t[0] === \"'\";\n          nextSpace = !isLetter(text, pos);\n\n          if (!nextSpace && !lastSpace) {\n            // middle of word\n            if (isSingle) {\n              token.content = replaceAt(token.content, t.index, APOSTROPHE);\n            }\n\n            continue;\n          }\n\n          canOpen = !nextSpace;\n          canClose = !lastSpace;\n\n          if (canClose) {\n            // this could be a closing quote, rewind the stack to get a match\n            for (j = stack.length - 1; j >= 0; j--) {\n              item = stack[j];\n\n              if (stack[j].level < thisLevel) {\n                break;\n              }\n\n              if (item.single === isSingle && stack[j].level === thisLevel) {\n                item = stack[j];\n\n                if (isSingle) {\n                  tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, state.options.quotes[2]);\n                  token.content = replaceAt(token.content, t.index, state.options.quotes[3]);\n                } else {\n                  tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, state.options.quotes[0]);\n                  token.content = replaceAt(token.content, t.index, state.options.quotes[1]);\n                }\n\n                stack.length = j;\n                continue OUTER;\n              }\n            }\n          }\n\n          if (canOpen) {\n            stack.push({\n              token: i,\n              pos: t.index,\n              single: isSingle,\n              level: thisLevel\n            });\n          } else if (canClose && isSingle) {\n            token.content = replaceAt(token.content, t.index, APOSTROPHE);\n          }\n        }\n      }\n    }\n  }\n  /**\n   * Core parser `rules`\n   */\n\n\n  var _rules = [['block', block], ['abbr', abbr], ['references', references], ['inline', inline], ['footnote_tail', footnote_block], ['abbr2', abbr2], ['replacements', replace], ['smartquotes', smartquotes]];\n  /**\n   * Class for top level (`core`) parser rules\n   *\n   * @api private\n   */\n\n  function Core() {\n    this.options = {};\n    this.ruler = new Ruler();\n\n    for (var i = 0; i < _rules.length; i++) {\n      this.ruler.push(_rules[i][0], _rules[i][1]);\n    }\n  }\n  /**\n   * Process rules with the given `state`\n   *\n   * @param  {Object} `state`\n   * @api private\n   */\n\n\n  Core.prototype.process = function (state) {\n    var i, l, rules;\n    rules = this.ruler.getRules('');\n\n    for (i = 0, l = rules.length; i < l; i++) {\n      rules[i](state);\n    }\n  }; // Parser state class\n\n\n  function StateBlock(src, parser, options, env, tokens) {\n    var ch, s, start, pos, len, indent, indent_found;\n    this.src = src; // Shortcuts to simplify nested calls\n\n    this.parser = parser;\n    this.options = options;\n    this.env = env; //\n    // Internal state vartiables\n    //\n\n    this.tokens = tokens;\n    this.bMarks = []; // line begin offsets for fast jumps\n\n    this.eMarks = []; // line end offsets for fast jumps\n\n    this.tShift = []; // indent for each line\n    // block parser variables\n\n    this.blkIndent = 0; // required block content indent\n    // (for example, if we are in list)\n\n    this.line = 0; // line index in src\n\n    this.lineMax = 0; // lines count\n\n    this.tight = false; // loose/tight mode for lists\n\n    this.parentType = 'root'; // if `list`, block parser stops on two newlines\n\n    this.ddIndent = -1; // indent of the current dd block (-1 if there isn't any)\n\n    this.level = 0; // renderer\n\n    this.result = ''; // Create caches\n    // Generate markers.\n\n    s = this.src;\n    indent = 0;\n    indent_found = false;\n\n    for (start = pos = indent = 0, len = s.length; pos < len; pos++) {\n      ch = s.charCodeAt(pos);\n\n      if (!indent_found) {\n        if (ch === 0x20\n        /* space */\n        ) {\n          indent++;\n          continue;\n        } else {\n          indent_found = true;\n        }\n      }\n\n      if (ch === 0x0A || pos === len - 1) {\n        if (ch !== 0x0A) {\n          pos++;\n        }\n\n        this.bMarks.push(start);\n        this.eMarks.push(pos);\n        this.tShift.push(indent);\n        indent_found = false;\n        indent = 0;\n        start = pos + 1;\n      }\n    } // Push fake entry to simplify cache bounds checks\n\n\n    this.bMarks.push(s.length);\n    this.eMarks.push(s.length);\n    this.tShift.push(0);\n    this.lineMax = this.bMarks.length - 1; // don't count last fake line\n  }\n\n  StateBlock.prototype.isEmpty = function isEmpty(line) {\n    return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n  };\n\n  StateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n    for (var max = this.lineMax; from < max; from++) {\n      if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n        break;\n      }\n    }\n\n    return from;\n  }; // Skip spaces from given position.\n\n\n  StateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n    for (var max = this.src.length; pos < max; pos++) {\n      if (this.src.charCodeAt(pos) !== 0x20\n      /* space */\n      ) {\n        break;\n      }\n    }\n\n    return pos;\n  }; // Skip char codes from given position\n\n\n  StateBlock.prototype.skipChars = function skipChars(pos, code) {\n    for (var max = this.src.length; pos < max; pos++) {\n      if (this.src.charCodeAt(pos) !== code) {\n        break;\n      }\n    }\n\n    return pos;\n  }; // Skip char codes reverse from given position - 1\n\n\n  StateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n    if (pos <= min) {\n      return pos;\n    }\n\n    while (pos > min) {\n      if (code !== this.src.charCodeAt(--pos)) {\n        return pos + 1;\n      }\n    }\n\n    return pos;\n  }; // cut lines range from source.\n\n\n  StateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n    var i,\n        first,\n        last,\n        queue,\n        shift,\n        line = begin;\n\n    if (begin >= end) {\n      return '';\n    } // Opt: don't use push queue for single line;\n\n\n    if (line + 1 === end) {\n      first = this.bMarks[line] + Math.min(this.tShift[line], indent);\n      last = keepLastLF ? this.eMarks[line] + 1 : this.eMarks[line];\n      return this.src.slice(first, last);\n    }\n\n    queue = new Array(end - begin);\n\n    for (i = 0; line < end; line++, i++) {\n      shift = this.tShift[line];\n\n      if (shift > indent) {\n        shift = indent;\n      }\n\n      if (shift < 0) {\n        shift = 0;\n      }\n\n      first = this.bMarks[line] + shift;\n\n      if (line + 1 < end || keepLastLF) {\n        // No need for bounds check because we have fake entry on tail.\n        last = this.eMarks[line] + 1;\n      } else {\n        last = this.eMarks[line];\n      }\n\n      queue[i] = this.src.slice(first, last);\n    }\n\n    return queue.join('');\n  }; // Code block (4 spaces padded)\n\n\n  function code(state, startLine, endLine\n  /*, silent*/\n  ) {\n    var nextLine, last;\n\n    if (state.tShift[startLine] - state.blkIndent < 4) {\n      return false;\n    }\n\n    last = nextLine = startLine + 1;\n\n    while (nextLine < endLine) {\n      if (state.isEmpty(nextLine)) {\n        nextLine++;\n        continue;\n      }\n\n      if (state.tShift[nextLine] - state.blkIndent >= 4) {\n        nextLine++;\n        last = nextLine;\n        continue;\n      }\n\n      break;\n    }\n\n    state.line = nextLine;\n    state.tokens.push({\n      type: 'code',\n      content: state.getLines(startLine, last, 4 + state.blkIndent, true),\n      block: true,\n      lines: [startLine, state.line],\n      level: state.level\n    });\n    return true;\n  } // fences (``` lang, ~~~ lang)\n\n\n  function fences(state, startLine, endLine, silent) {\n    var marker,\n        len,\n        params,\n        nextLine,\n        mem,\n        haveEndMarker = false,\n        pos = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    if (pos + 3 > max) {\n      return false;\n    }\n\n    marker = state.src.charCodeAt(pos);\n\n    if (marker !== 0x7E\n    /* ~ */\n    && marker !== 0x60\n    /* ` */\n    ) {\n      return false;\n    } // scan marker length\n\n\n    mem = pos;\n    pos = state.skipChars(pos, marker);\n    len = pos - mem;\n\n    if (len < 3) {\n      return false;\n    }\n\n    params = state.src.slice(pos, max).trim();\n\n    if (params.indexOf('`') >= 0) {\n      return false;\n    } // Since start is found, we can report success here in validation mode\n\n\n    if (silent) {\n      return true;\n    } // search end of block\n\n\n    nextLine = startLine;\n\n    for (;;) {\n      nextLine++;\n\n      if (nextLine >= endLine) {\n        // unclosed block should be autoclosed by end of document.\n        // also block seems to be autoclosed by end of parent\n        break;\n      }\n\n      pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max && state.tShift[nextLine] < state.blkIndent) {\n        // non-empty line with negative indent should stop the list:\n        // - ```\n        //  test\n        break;\n      }\n\n      if (state.src.charCodeAt(pos) !== marker) {\n        continue;\n      }\n\n      if (state.tShift[nextLine] - state.blkIndent >= 4) {\n        // closing fence should be indented less than 4 spaces\n        continue;\n      }\n\n      pos = state.skipChars(pos, marker); // closing code fence must be at least as long as the opening one\n\n      if (pos - mem < len) {\n        continue;\n      } // make sure tail has spaces only\n\n\n      pos = state.skipSpaces(pos);\n\n      if (pos < max) {\n        continue;\n      }\n\n      haveEndMarker = true; // found!\n\n      break;\n    } // If a fence has heading spaces, they should be removed from its inner block\n\n\n    len = state.tShift[startLine];\n    state.line = nextLine + (haveEndMarker ? 1 : 0);\n    state.tokens.push({\n      type: 'fence',\n      params: params,\n      content: state.getLines(startLine + 1, nextLine, len, true),\n      lines: [startLine, state.line],\n      level: state.level\n    });\n    return true;\n  } // Block quotes\n\n\n  function blockquote(state, startLine, endLine, silent) {\n    var nextLine,\n        lastLineEmpty,\n        oldTShift,\n        oldBMarks,\n        oldIndent,\n        oldParentType,\n        lines,\n        terminatorRules,\n        i,\n        l,\n        terminate,\n        pos = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    if (pos > max) {\n      return false;\n    } // check the block quote marker\n\n\n    if (state.src.charCodeAt(pos++) !== 0x3E\n    /* > */\n    ) {\n      return false;\n    }\n\n    if (state.level >= state.options.maxNesting) {\n      return false;\n    } // we know that it's going to be a valid blockquote,\n    // so no point trying to find the end of it in silent mode\n\n\n    if (silent) {\n      return true;\n    } // skip one optional space after '>'\n\n\n    if (state.src.charCodeAt(pos) === 0x20) {\n      pos++;\n    }\n\n    oldIndent = state.blkIndent;\n    state.blkIndent = 0;\n    oldBMarks = [state.bMarks[startLine]];\n    state.bMarks[startLine] = pos; // check if we have an empty blockquote\n\n    pos = pos < max ? state.skipSpaces(pos) : pos;\n    lastLineEmpty = pos >= max;\n    oldTShift = [state.tShift[startLine]];\n    state.tShift[startLine] = pos - state.bMarks[startLine];\n    terminatorRules = state.parser.ruler.getRules('blockquote'); // Search the end of the block\n    //\n    // Block ends with either:\n    //  1. an empty line outside:\n    //     ```\n    //     > test\n    //\n    //     ```\n    //  2. an empty line inside:\n    //     ```\n    //     >\n    //     test\n    //     ```\n    //  3. another tag\n    //     ```\n    //     > test\n    //      - - -\n    //     ```\n\n    for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos >= max) {\n        // Case 1: line is not inside the blockquote, and this line is empty.\n        break;\n      }\n\n      if (state.src.charCodeAt(pos++) === 0x3E\n      /* > */\n      ) {\n        // This line is inside the blockquote.\n        // skip one optional space after '>'\n        if (state.src.charCodeAt(pos) === 0x20) {\n          pos++;\n        }\n\n        oldBMarks.push(state.bMarks[nextLine]);\n        state.bMarks[nextLine] = pos;\n        pos = pos < max ? state.skipSpaces(pos) : pos;\n        lastLineEmpty = pos >= max;\n        oldTShift.push(state.tShift[nextLine]);\n        state.tShift[nextLine] = pos - state.bMarks[nextLine];\n        continue;\n      } // Case 2: line is not inside the blockquote, and the last line was empty.\n\n\n      if (lastLineEmpty) {\n        break;\n      } // Case 3: another tag found.\n\n\n      terminate = false;\n\n      for (i = 0, l = terminatorRules.length; i < l; i++) {\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\n          terminate = true;\n          break;\n        }\n      }\n\n      if (terminate) {\n        break;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      oldTShift.push(state.tShift[nextLine]); // A negative number means that this is a paragraph continuation;\n      //\n      // Any negative number will do the job here, but it's better for it\n      // to be large enough to make any bugs obvious.\n\n      state.tShift[nextLine] = -1337;\n    }\n\n    oldParentType = state.parentType;\n    state.parentType = 'blockquote';\n    state.tokens.push({\n      type: 'blockquote_open',\n      lines: lines = [startLine, 0],\n      level: state.level++\n    });\n    state.parser.tokenize(state, startLine, nextLine);\n    state.tokens.push({\n      type: 'blockquote_close',\n      level: --state.level\n    });\n    state.parentType = oldParentType;\n    lines[1] = state.line; // Restore original tShift; this might not be necessary since the parser\n    // has already been here, but just to make sure we can do that.\n\n    for (i = 0; i < oldTShift.length; i++) {\n      state.bMarks[i + startLine] = oldBMarks[i];\n      state.tShift[i + startLine] = oldTShift[i];\n    }\n\n    state.blkIndent = oldIndent;\n    return true;\n  } // Horizontal rule\n\n\n  function hr(state, startLine, endLine, silent) {\n    var marker,\n        cnt,\n        ch,\n        pos = state.bMarks[startLine],\n        max = state.eMarks[startLine];\n    pos += state.tShift[startLine];\n\n    if (pos > max) {\n      return false;\n    }\n\n    marker = state.src.charCodeAt(pos++); // Check hr marker\n\n    if (marker !== 0x2A\n    /* * */\n    && marker !== 0x2D\n    /* - */\n    && marker !== 0x5F\n    /* _ */\n    ) {\n      return false;\n    } // markers can be mixed with spaces, but there should be at least 3 one\n\n\n    cnt = 1;\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos++);\n\n      if (ch !== marker && ch !== 0x20\n      /* space */\n      ) {\n        return false;\n      }\n\n      if (ch === marker) {\n        cnt++;\n      }\n    }\n\n    if (cnt < 3) {\n      return false;\n    }\n\n    if (silent) {\n      return true;\n    }\n\n    state.line = startLine + 1;\n    state.tokens.push({\n      type: 'hr',\n      lines: [startLine, state.line],\n      level: state.level\n    });\n    return true;\n  } // Lists\n  // Search `[-+*][\\n ]`, returns next pos arter marker on success\n  // or -1 on fail.\n\n\n  function skipBulletListMarker(state, startLine) {\n    var marker, pos, max;\n    pos = state.bMarks[startLine] + state.tShift[startLine];\n    max = state.eMarks[startLine];\n\n    if (pos >= max) {\n      return -1;\n    }\n\n    marker = state.src.charCodeAt(pos++); // Check bullet\n\n    if (marker !== 0x2A\n    /* * */\n    && marker !== 0x2D\n    /* - */\n    && marker !== 0x2B\n    /* + */\n    ) {\n      return -1;\n    }\n\n    if (pos < max && state.src.charCodeAt(pos) !== 0x20) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n\n    return pos;\n  } // Search `\\d+[.)][\\n ]`, returns next pos arter marker on success\n  // or -1 on fail.\n\n\n  function skipOrderedListMarker(state, startLine) {\n    var ch,\n        pos = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    if (pos + 1 >= max) {\n      return -1;\n    }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch < 0x30\n    /* 0 */\n    || ch > 0x39\n    /* 9 */\n    ) {\n      return -1;\n    }\n\n    for (;;) {\n      // EOL -> fail\n      if (pos >= max) {\n        return -1;\n      }\n\n      ch = state.src.charCodeAt(pos++);\n\n      if (ch >= 0x30\n      /* 0 */\n      && ch <= 0x39\n      /* 9 */\n      ) {\n        continue;\n      } // found valid marker\n\n\n      if (ch === 0x29\n      /* ) */\n      || ch === 0x2e\n      /* . */\n      ) {\n        break;\n      }\n\n      return -1;\n    }\n\n    if (pos < max && state.src.charCodeAt(pos) !== 0x20\n    /* space */\n    ) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n\n    return pos;\n  }\n\n  function markTightParagraphs(state, idx) {\n    var i,\n        l,\n        level = state.level + 2;\n\n    for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n      if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n        state.tokens[i + 2].tight = true;\n        state.tokens[i].tight = true;\n        i += 2;\n      }\n    }\n  }\n\n  function list(state, startLine, endLine, silent) {\n    var nextLine,\n        indent,\n        oldTShift,\n        oldIndent,\n        oldTight,\n        oldParentType,\n        start,\n        posAfterMarker,\n        max,\n        indentAfterMarker,\n        markerValue,\n        markerCharCode,\n        isOrdered,\n        contentStart,\n        listTokIdx,\n        prevEmptyEnd,\n        listLines,\n        itemLines,\n        tight = true,\n        terminatorRules,\n        i,\n        l,\n        terminate; // Detect list type and position after marker\n\n    if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n      isOrdered = true;\n    } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n      isOrdered = false;\n    } else {\n      return false;\n    }\n\n    if (state.level >= state.options.maxNesting) {\n      return false;\n    } // We should terminate list on style change. Remember first one to compare.\n\n\n    markerCharCode = state.src.charCodeAt(posAfterMarker - 1); // For validation mode we can terminate immediately\n\n    if (silent) {\n      return true;\n    } // Start list\n\n\n    listTokIdx = state.tokens.length;\n\n    if (isOrdered) {\n      start = state.bMarks[startLine] + state.tShift[startLine];\n      markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n      state.tokens.push({\n        type: 'ordered_list_open',\n        order: markerValue,\n        lines: listLines = [startLine, 0],\n        level: state.level++\n      });\n    } else {\n      state.tokens.push({\n        type: 'bullet_list_open',\n        lines: listLines = [startLine, 0],\n        level: state.level++\n      });\n    } //\n    // Iterate list items\n    //\n\n\n    nextLine = startLine;\n    prevEmptyEnd = false;\n    terminatorRules = state.parser.ruler.getRules('list');\n\n    while (nextLine < endLine) {\n      contentStart = state.skipSpaces(posAfterMarker);\n      max = state.eMarks[nextLine];\n\n      if (contentStart >= max) {\n        // trimming space in \"-    \\n  3\" case, indent is 1 here\n        indentAfterMarker = 1;\n      } else {\n        indentAfterMarker = contentStart - posAfterMarker;\n      } // If we have more than 4 spaces, the indent is 1\n      // (the rest is just indented code block)\n\n\n      if (indentAfterMarker > 4) {\n        indentAfterMarker = 1;\n      } // If indent is less than 1, assume that it's one, example:\n      //  \"-\\n  test\"\n\n\n      if (indentAfterMarker < 1) {\n        indentAfterMarker = 1;\n      } // \"  -  test\"\n      //  ^^^^^ - calculating total length of this thing\n\n\n      indent = posAfterMarker - state.bMarks[nextLine] + indentAfterMarker; // Run subparser & write tokens\n\n      state.tokens.push({\n        type: 'list_item_open',\n        lines: itemLines = [startLine, 0],\n        level: state.level++\n      });\n      oldIndent = state.blkIndent;\n      oldTight = state.tight;\n      oldTShift = state.tShift[startLine];\n      oldParentType = state.parentType;\n      state.tShift[startLine] = contentStart - state.bMarks[startLine];\n      state.blkIndent = indent;\n      state.tight = true;\n      state.parentType = 'list';\n      state.parser.tokenize(state, startLine, endLine, true); // If any of list item is tight, mark list as tight\n\n      if (!state.tight || prevEmptyEnd) {\n        tight = false;\n      } // Item become loose if finish with empty line,\n      // but we should filter last element, because it means list finish\n\n\n      prevEmptyEnd = state.line - startLine > 1 && state.isEmpty(state.line - 1);\n      state.blkIndent = oldIndent;\n      state.tShift[startLine] = oldTShift;\n      state.tight = oldTight;\n      state.parentType = oldParentType;\n      state.tokens.push({\n        type: 'list_item_close',\n        level: --state.level\n      });\n      nextLine = startLine = state.line;\n      itemLines[1] = nextLine;\n      contentStart = state.bMarks[startLine];\n\n      if (nextLine >= endLine) {\n        break;\n      }\n\n      if (state.isEmpty(nextLine)) {\n        break;\n      } //\n      // Try to check if list is terminated or continued.\n      //\n\n\n      if (state.tShift[nextLine] < state.blkIndent) {\n        break;\n      } // fail if terminating block found\n\n\n      terminate = false;\n\n      for (i = 0, l = terminatorRules.length; i < l; i++) {\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\n          terminate = true;\n          break;\n        }\n      }\n\n      if (terminate) {\n        break;\n      } // fail if list has another type\n\n\n      if (isOrdered) {\n        posAfterMarker = skipOrderedListMarker(state, nextLine);\n\n        if (posAfterMarker < 0) {\n          break;\n        }\n      } else {\n        posAfterMarker = skipBulletListMarker(state, nextLine);\n\n        if (posAfterMarker < 0) {\n          break;\n        }\n      }\n\n      if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) {\n        break;\n      }\n    } // Finilize list\n\n\n    state.tokens.push({\n      type: isOrdered ? 'ordered_list_close' : 'bullet_list_close',\n      level: --state.level\n    });\n    listLines[1] = nextLine;\n    state.line = nextLine; // mark paragraphs tight if needed\n\n    if (tight) {\n      markTightParagraphs(state, listTokIdx);\n    }\n\n    return true;\n  } // Process footnote reference list\n\n\n  function footnote(state, startLine, endLine, silent) {\n    var oldBMark,\n        oldTShift,\n        oldParentType,\n        pos,\n        label,\n        start = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine]; // line should be at least 5 chars - \"[^x]:\"\n\n    if (start + 4 > max) {\n      return false;\n    }\n\n    if (state.src.charCodeAt(start) !== 0x5B\n    /* [ */\n    ) {\n      return false;\n    }\n\n    if (state.src.charCodeAt(start + 1) !== 0x5E\n    /* ^ */\n    ) {\n      return false;\n    }\n\n    if (state.level >= state.options.maxNesting) {\n      return false;\n    }\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) {\n        return false;\n      }\n\n      if (state.src.charCodeAt(pos) === 0x5D\n      /* ] */\n      ) {\n        break;\n      }\n    }\n\n    if (pos === start + 2) {\n      return false;\n    } // no empty footnote labels\n\n\n    if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A\n    /* : */\n    ) {\n      return false;\n    }\n\n    if (silent) {\n      return true;\n    }\n\n    pos++;\n\n    if (!state.env.footnotes) {\n      state.env.footnotes = {};\n    }\n\n    if (!state.env.footnotes.refs) {\n      state.env.footnotes.refs = {};\n    }\n\n    label = state.src.slice(start + 2, pos - 2);\n    state.env.footnotes.refs[':' + label] = -1;\n    state.tokens.push({\n      type: 'footnote_reference_open',\n      label: label,\n      level: state.level++\n    });\n    oldBMark = state.bMarks[startLine];\n    oldTShift = state.tShift[startLine];\n    oldParentType = state.parentType;\n    state.tShift[startLine] = state.skipSpaces(pos) - pos;\n    state.bMarks[startLine] = pos;\n    state.blkIndent += 4;\n    state.parentType = 'footnote';\n\n    if (state.tShift[startLine] < state.blkIndent) {\n      state.tShift[startLine] += state.blkIndent;\n      state.bMarks[startLine] -= state.blkIndent;\n    }\n\n    state.parser.tokenize(state, startLine, endLine, true);\n    state.parentType = oldParentType;\n    state.blkIndent -= 4;\n    state.tShift[startLine] = oldTShift;\n    state.bMarks[startLine] = oldBMark;\n    state.tokens.push({\n      type: 'footnote_reference_close',\n      level: --state.level\n    });\n    return true;\n  } // heading (#, ##, ...)\n\n\n  function heading(state, startLine, endLine, silent) {\n    var ch,\n        level,\n        tmp,\n        pos = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    if (pos >= max) {\n      return false;\n    }\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x23\n    /* # */\n    || pos >= max) {\n      return false;\n    } // count heading level\n\n\n    level = 1;\n    ch = state.src.charCodeAt(++pos);\n\n    while (ch === 0x23\n    /* # */\n    && pos < max && level <= 6) {\n      level++;\n      ch = state.src.charCodeAt(++pos);\n    }\n\n    if (level > 6 || pos < max && ch !== 0x20\n    /* space */\n    ) {\n      return false;\n    }\n\n    if (silent) {\n      return true;\n    } // Let's cut tails like '    ###  ' from the end of string\n\n\n    max = state.skipCharsBack(max, 0x20, pos); // space\n\n    tmp = state.skipCharsBack(max, 0x23, pos); // #\n\n    if (tmp > pos && state.src.charCodeAt(tmp - 1) === 0x20\n    /* space */\n    ) {\n      max = tmp;\n    }\n\n    state.line = startLine + 1;\n    state.tokens.push({\n      type: 'heading_open',\n      hLevel: level,\n      lines: [startLine, state.line],\n      level: state.level\n    }); // only if header is not empty\n\n    if (pos < max) {\n      state.tokens.push({\n        type: 'inline',\n        content: state.src.slice(pos, max).trim(),\n        level: state.level + 1,\n        lines: [startLine, state.line],\n        children: []\n      });\n    }\n\n    state.tokens.push({\n      type: 'heading_close',\n      hLevel: level,\n      level: state.level\n    });\n    return true;\n  } // lheading (---, ===)\n\n\n  function lheading(state, startLine, endLine\n  /*, silent*/\n  ) {\n    var marker,\n        pos,\n        max,\n        next = startLine + 1;\n\n    if (next >= endLine) {\n      return false;\n    }\n\n    if (state.tShift[next] < state.blkIndent) {\n      return false;\n    } // Scan next line\n\n\n    if (state.tShift[next] - state.blkIndent > 3) {\n      return false;\n    }\n\n    pos = state.bMarks[next] + state.tShift[next];\n    max = state.eMarks[next];\n\n    if (pos >= max) {\n      return false;\n    }\n\n    marker = state.src.charCodeAt(pos);\n\n    if (marker !== 0x2D\n    /* - */\n    && marker !== 0x3D\n    /* = */\n    ) {\n      return false;\n    }\n\n    pos = state.skipChars(pos, marker);\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) {\n      return false;\n    }\n\n    pos = state.bMarks[startLine] + state.tShift[startLine];\n    state.line = next + 1;\n    state.tokens.push({\n      type: 'heading_open',\n      hLevel: marker === 0x3D\n      /* = */\n      ? 1 : 2,\n      lines: [startLine, state.line],\n      level: state.level\n    });\n    state.tokens.push({\n      type: 'inline',\n      content: state.src.slice(pos, state.eMarks[startLine]).trim(),\n      level: state.level + 1,\n      lines: [startLine, state.line - 1],\n      children: []\n    });\n    state.tokens.push({\n      type: 'heading_close',\n      hLevel: marker === 0x3D\n      /* = */\n      ? 1 : 2,\n      level: state.level\n    });\n    return true;\n  } // List of valid html blocks names, accorting to commonmark spec\n  // http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n\n  var html_blocks = {};\n  ['article', 'aside', 'button', 'blockquote', 'body', 'canvas', 'caption', 'col', 'colgroup', 'dd', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr', 'iframe', 'li', 'map', 'object', 'ol', 'output', 'p', 'pre', 'progress', 'script', 'section', 'style', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'tr', 'thead', 'ul', 'video'].forEach(function (name) {\n    html_blocks[name] = true;\n  }); // HTML block\n\n  var HTML_TAG_OPEN_RE = /^<([a-zA-Z]{1,15})[\\s\\/>]/;\n  var HTML_TAG_CLOSE_RE = /^<\\/([a-zA-Z]{1,15})[\\s>]/;\n\n  function isLetter$1(ch) {\n    /*eslint no-bitwise:0*/\n    var lc = ch | 0x20; // to lower case\n\n    return lc >= 0x61\n    /* a */\n    && lc <= 0x7a\n    /* z */\n    ;\n  }\n\n  function htmlblock(state, startLine, endLine, silent) {\n    var ch,\n        match,\n        nextLine,\n        pos = state.bMarks[startLine],\n        max = state.eMarks[startLine],\n        shift = state.tShift[startLine];\n    pos += shift;\n\n    if (!state.options.html) {\n      return false;\n    }\n\n    if (shift > 3 || pos + 2 >= max) {\n      return false;\n    }\n\n    if (state.src.charCodeAt(pos) !== 0x3C\n    /* < */\n    ) {\n      return false;\n    }\n\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x21\n    /* ! */\n    || ch === 0x3F\n    /* ? */\n    ) {\n      // Directive start / comment start / processing instruction start\n      if (silent) {\n        return true;\n      }\n    } else if (ch === 0x2F\n    /* / */\n    || isLetter$1(ch)) {\n      // Probably start or end of tag\n      if (ch === 0x2F\n      /* \\ */\n      ) {\n        // closing tag\n        match = state.src.slice(pos, max).match(HTML_TAG_CLOSE_RE);\n\n        if (!match) {\n          return false;\n        }\n      } else {\n        // opening tag\n        match = state.src.slice(pos, max).match(HTML_TAG_OPEN_RE);\n\n        if (!match) {\n          return false;\n        }\n      } // Make sure tag name is valid\n\n\n      if (html_blocks[match[1].toLowerCase()] !== true) {\n        return false;\n      }\n\n      if (silent) {\n        return true;\n      }\n    } else {\n      return false;\n    } // If we are here - we detected HTML block.\n    // Let's roll down till empty line (block end).\n\n\n    nextLine = startLine + 1;\n\n    while (nextLine < state.lineMax && !state.isEmpty(nextLine)) {\n      nextLine++;\n    }\n\n    state.line = nextLine;\n    state.tokens.push({\n      type: 'htmlblock',\n      level: state.level,\n      lines: [startLine, state.line],\n      content: state.getLines(startLine, nextLine, 0, true)\n    });\n    return true;\n  } // GFM table, non-standard\n\n\n  function getLine$1(state, line) {\n    var pos = state.bMarks[line] + state.blkIndent,\n        max = state.eMarks[line];\n    return state.src.substr(pos, max - pos);\n  }\n\n  function table(state, startLine, endLine, silent) {\n    var ch, lineText, pos, i, nextLine, rows, cell, aligns, t, tableLines, tbodyLines; // should have at least three lines\n\n    if (startLine + 2 > endLine) {\n      return false;\n    }\n\n    nextLine = startLine + 1;\n\n    if (state.tShift[nextLine] < state.blkIndent) {\n      return false;\n    } // first character of the second line should be '|' or '-'\n\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n\n    if (pos >= state.eMarks[nextLine]) {\n      return false;\n    }\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C\n    /* | */\n    && ch !== 0x2D\n    /* - */\n    && ch !== 0x3A\n    /* : */\n    ) {\n      return false;\n    }\n\n    lineText = getLine$1(state, startLine + 1);\n\n    if (!/^[-:| ]+$/.test(lineText)) {\n      return false;\n    }\n\n    rows = lineText.split('|');\n\n    if (rows <= 2) {\n      return false;\n    }\n\n    aligns = [];\n\n    for (i = 0; i < rows.length; i++) {\n      t = rows[i].trim();\n\n      if (!t) {\n        // allow empty columns before and after table, but not in between columns;\n        // e.g. allow ` |---| `, disallow ` ---||--- `\n        if (i === 0 || i === rows.length - 1) {\n          continue;\n        } else {\n          return false;\n        }\n      }\n\n      if (!/^:?-+:?$/.test(t)) {\n        return false;\n      }\n\n      if (t.charCodeAt(t.length - 1) === 0x3A\n      /* : */\n      ) {\n        aligns.push(t.charCodeAt(0) === 0x3A\n        /* : */\n        ? 'center' : 'right');\n      } else if (t.charCodeAt(0) === 0x3A\n      /* : */\n      ) {\n        aligns.push('left');\n      } else {\n        aligns.push('');\n      }\n    }\n\n    lineText = getLine$1(state, startLine).trim();\n\n    if (lineText.indexOf('|') === -1) {\n      return false;\n    }\n\n    rows = lineText.replace(/^\\||\\|$/g, '').split('|');\n\n    if (aligns.length !== rows.length) {\n      return false;\n    }\n\n    if (silent) {\n      return true;\n    }\n\n    state.tokens.push({\n      type: 'table_open',\n      lines: tableLines = [startLine, 0],\n      level: state.level++\n    });\n    state.tokens.push({\n      type: 'thead_open',\n      lines: [startLine, startLine + 1],\n      level: state.level++\n    });\n    state.tokens.push({\n      type: 'tr_open',\n      lines: [startLine, startLine + 1],\n      level: state.level++\n    });\n\n    for (i = 0; i < rows.length; i++) {\n      state.tokens.push({\n        type: 'th_open',\n        align: aligns[i],\n        lines: [startLine, startLine + 1],\n        level: state.level++\n      });\n      state.tokens.push({\n        type: 'inline',\n        content: rows[i].trim(),\n        lines: [startLine, startLine + 1],\n        level: state.level,\n        children: []\n      });\n      state.tokens.push({\n        type: 'th_close',\n        level: --state.level\n      });\n    }\n\n    state.tokens.push({\n      type: 'tr_close',\n      level: --state.level\n    });\n    state.tokens.push({\n      type: 'thead_close',\n      level: --state.level\n    });\n    state.tokens.push({\n      type: 'tbody_open',\n      lines: tbodyLines = [startLine + 2, 0],\n      level: state.level++\n    });\n\n    for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n      if (state.tShift[nextLine] < state.blkIndent) {\n        break;\n      }\n\n      lineText = getLine$1(state, nextLine).trim();\n\n      if (lineText.indexOf('|') === -1) {\n        break;\n      }\n\n      rows = lineText.replace(/^\\||\\|$/g, '').split('|');\n      state.tokens.push({\n        type: 'tr_open',\n        level: state.level++\n      });\n\n      for (i = 0; i < rows.length; i++) {\n        state.tokens.push({\n          type: 'td_open',\n          align: aligns[i],\n          level: state.level++\n        }); // 0x7c === '|'\n\n        cell = rows[i].substring(rows[i].charCodeAt(0) === 0x7c ? 1 : 0, rows[i].charCodeAt(rows[i].length - 1) === 0x7c ? rows[i].length - 1 : rows[i].length).trim();\n        state.tokens.push({\n          type: 'inline',\n          content: cell,\n          level: state.level,\n          children: []\n        });\n        state.tokens.push({\n          type: 'td_close',\n          level: --state.level\n        });\n      }\n\n      state.tokens.push({\n        type: 'tr_close',\n        level: --state.level\n      });\n    }\n\n    state.tokens.push({\n      type: 'tbody_close',\n      level: --state.level\n    });\n    state.tokens.push({\n      type: 'table_close',\n      level: --state.level\n    });\n    tableLines[1] = tbodyLines[1] = nextLine;\n    state.line = nextLine;\n    return true;\n  } // Definition lists\n  // Search `[:~][\\n ]`, returns next pos after marker on success\n  // or -1 on fail.\n\n\n  function skipMarker(state, line) {\n    var pos,\n        marker,\n        start = state.bMarks[line] + state.tShift[line],\n        max = state.eMarks[line];\n\n    if (start >= max) {\n      return -1;\n    } // Check bullet\n\n\n    marker = state.src.charCodeAt(start++);\n\n    if (marker !== 0x7E\n    /* ~ */\n    && marker !== 0x3A\n    /* : */\n    ) {\n      return -1;\n    }\n\n    pos = state.skipSpaces(start); // require space after \":\"\n\n    if (start === pos) {\n      return -1;\n    } // no empty definitions, e.g. \"  : \"\n\n\n    if (pos >= max) {\n      return -1;\n    }\n\n    return pos;\n  }\n\n  function markTightParagraphs$1(state, idx) {\n    var i,\n        l,\n        level = state.level + 2;\n\n    for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n      if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n        state.tokens[i + 2].tight = true;\n        state.tokens[i].tight = true;\n        i += 2;\n      }\n    }\n  }\n\n  function deflist(state, startLine, endLine, silent) {\n    var contentStart, ddLine, dtLine, itemLines, listLines, listTokIdx, nextLine, oldIndent, oldDDIndent, oldParentType, oldTShift, oldTight, prevEmptyEnd, tight;\n\n    if (silent) {\n      // quirk: validation mode validates a dd block only, not a whole deflist\n      if (state.ddIndent < 0) {\n        return false;\n      }\n\n      return skipMarker(state, startLine) >= 0;\n    }\n\n    nextLine = startLine + 1;\n\n    if (state.isEmpty(nextLine)) {\n      if (++nextLine > endLine) {\n        return false;\n      }\n    }\n\n    if (state.tShift[nextLine] < state.blkIndent) {\n      return false;\n    }\n\n    contentStart = skipMarker(state, nextLine);\n\n    if (contentStart < 0) {\n      return false;\n    }\n\n    if (state.level >= state.options.maxNesting) {\n      return false;\n    } // Start list\n\n\n    listTokIdx = state.tokens.length;\n    state.tokens.push({\n      type: 'dl_open',\n      lines: listLines = [startLine, 0],\n      level: state.level++\n    }); //\n    // Iterate list items\n    //\n\n    dtLine = startLine;\n    ddLine = nextLine; // One definition list can contain multiple DTs,\n    // and one DT can be followed by multiple DDs.\n    //\n    // Thus, there is two loops here, and label is\n    // needed to break out of the second one\n    //\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n\n    OUTER: for (;;) {\n      tight = true;\n      prevEmptyEnd = false;\n      state.tokens.push({\n        type: 'dt_open',\n        lines: [dtLine, dtLine],\n        level: state.level++\n      });\n      state.tokens.push({\n        type: 'inline',\n        content: state.getLines(dtLine, dtLine + 1, state.blkIndent, false).trim(),\n        level: state.level + 1,\n        lines: [dtLine, dtLine],\n        children: []\n      });\n      state.tokens.push({\n        type: 'dt_close',\n        level: --state.level\n      });\n\n      for (;;) {\n        state.tokens.push({\n          type: 'dd_open',\n          lines: itemLines = [nextLine, 0],\n          level: state.level++\n        });\n        oldTight = state.tight;\n        oldDDIndent = state.ddIndent;\n        oldIndent = state.blkIndent;\n        oldTShift = state.tShift[ddLine];\n        oldParentType = state.parentType;\n        state.blkIndent = state.ddIndent = state.tShift[ddLine] + 2;\n        state.tShift[ddLine] = contentStart - state.bMarks[ddLine];\n        state.tight = true;\n        state.parentType = 'deflist';\n        state.parser.tokenize(state, ddLine, endLine, true); // If any of list item is tight, mark list as tight\n\n        if (!state.tight || prevEmptyEnd) {\n          tight = false;\n        } // Item become loose if finish with empty line,\n        // but we should filter last element, because it means list finish\n\n\n        prevEmptyEnd = state.line - ddLine > 1 && state.isEmpty(state.line - 1);\n        state.tShift[ddLine] = oldTShift;\n        state.tight = oldTight;\n        state.parentType = oldParentType;\n        state.blkIndent = oldIndent;\n        state.ddIndent = oldDDIndent;\n        state.tokens.push({\n          type: 'dd_close',\n          level: --state.level\n        });\n        itemLines[1] = nextLine = state.line;\n\n        if (nextLine >= endLine) {\n          break OUTER;\n        }\n\n        if (state.tShift[nextLine] < state.blkIndent) {\n          break OUTER;\n        }\n\n        contentStart = skipMarker(state, nextLine);\n\n        if (contentStart < 0) {\n          break;\n        }\n\n        ddLine = nextLine; // go to the next loop iteration:\n        // insert DD tag and repeat checking\n      }\n\n      if (nextLine >= endLine) {\n        break;\n      }\n\n      dtLine = nextLine;\n\n      if (state.isEmpty(dtLine)) {\n        break;\n      }\n\n      if (state.tShift[dtLine] < state.blkIndent) {\n        break;\n      }\n\n      ddLine = dtLine + 1;\n\n      if (ddLine >= endLine) {\n        break;\n      }\n\n      if (state.isEmpty(ddLine)) {\n        ddLine++;\n      }\n\n      if (ddLine >= endLine) {\n        break;\n      }\n\n      if (state.tShift[ddLine] < state.blkIndent) {\n        break;\n      }\n\n      contentStart = skipMarker(state, ddLine);\n\n      if (contentStart < 0) {\n        break;\n      } // go to the next loop iteration:\n      // insert DT and DD tags and repeat checking\n\n    } // Finilize list\n\n\n    state.tokens.push({\n      type: 'dl_close',\n      level: --state.level\n    });\n    listLines[1] = nextLine;\n    state.line = nextLine; // mark paragraphs tight if needed\n\n    if (tight) {\n      markTightParagraphs$1(state, listTokIdx);\n    }\n\n    return true;\n  } // Paragraph\n\n\n  function paragraph(state, startLine\n  /*, endLine*/\n  ) {\n    var endLine,\n        content,\n        terminate,\n        i,\n        l,\n        nextLine = startLine + 1,\n        terminatorRules;\n    endLine = state.lineMax; // jump line-by-line until empty one or EOF\n\n    if (nextLine < endLine && !state.isEmpty(nextLine)) {\n      terminatorRules = state.parser.ruler.getRules('paragraph');\n\n      for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n        // this would be a code block normally, but after paragraph\n        // it's considered a lazy continuation regardless of what's there\n        if (state.tShift[nextLine] - state.blkIndent > 3) {\n          continue;\n        } // Some tags can terminate paragraph without empty line.\n\n\n        terminate = false;\n\n        for (i = 0, l = terminatorRules.length; i < l; i++) {\n          if (terminatorRules[i](state, nextLine, endLine, true)) {\n            terminate = true;\n            break;\n          }\n        }\n\n        if (terminate) {\n          break;\n        }\n      }\n    }\n\n    content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n    state.line = nextLine;\n\n    if (content.length) {\n      state.tokens.push({\n        type: 'paragraph_open',\n        tight: false,\n        lines: [startLine, state.line],\n        level: state.level\n      });\n      state.tokens.push({\n        type: 'inline',\n        content: content,\n        level: state.level + 1,\n        lines: [startLine, state.line],\n        children: []\n      });\n      state.tokens.push({\n        type: 'paragraph_close',\n        tight: false,\n        level: state.level\n      });\n    }\n\n    return true;\n  }\n  /**\n   * Parser rules\n   */\n\n\n  var _rules$1 = [['code', code], ['fences', fences, ['paragraph', 'blockquote', 'list']], ['blockquote', blockquote, ['paragraph', 'blockquote', 'list']], ['hr', hr, ['paragraph', 'blockquote', 'list']], ['list', list, ['paragraph', 'blockquote']], ['footnote', footnote, ['paragraph']], ['heading', heading, ['paragraph', 'blockquote']], ['lheading', lheading], ['htmlblock', htmlblock, ['paragraph', 'blockquote']], ['table', table, ['paragraph']], ['deflist', deflist, ['paragraph']], ['paragraph', paragraph]];\n  /**\n   * Block Parser class\n   *\n   * @api private\n   */\n\n  function ParserBlock() {\n    this.ruler = new Ruler();\n\n    for (var i = 0; i < _rules$1.length; i++) {\n      this.ruler.push(_rules$1[i][0], _rules$1[i][1], {\n        alt: (_rules$1[i][2] || []).slice()\n      });\n    }\n  }\n  /**\n   * Generate tokens for the given input range.\n   *\n   * @param  {Object} `state` Has properties like `src`, `parser`, `options` etc\n   * @param  {Number} `startLine`\n   * @param  {Number} `endLine`\n   * @api private\n   */\n\n\n  ParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n    var rules = this.ruler.getRules('');\n    var len = rules.length;\n    var line = startLine;\n    var hasEmptyLines = false;\n    var ok, i;\n\n    while (line < endLine) {\n      state.line = line = state.skipEmptyLines(line);\n\n      if (line >= endLine) {\n        break;\n      } // Termination condition for nested calls.\n      // Nested calls currently used for blockquotes & lists\n\n\n      if (state.tShift[line] < state.blkIndent) {\n        break;\n      } // Try all possible rules.\n      // On success, rule should:\n      //\n      // - update `state.line`\n      // - update `state.tokens`\n      // - return true\n\n\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, line, endLine, false);\n\n        if (ok) {\n          break;\n        }\n      } // set state.tight iff we had an empty line before current tag\n      // i.e. latest empty line should not count\n\n\n      state.tight = !hasEmptyLines; // paragraph might \"eat\" one newline after it in nested lists\n\n      if (state.isEmpty(state.line - 1)) {\n        hasEmptyLines = true;\n      }\n\n      line = state.line;\n\n      if (line < endLine && state.isEmpty(line)) {\n        hasEmptyLines = true;\n        line++; // two empty lines should stop the parser in list mode\n\n        if (line < endLine && state.parentType === 'list' && state.isEmpty(line)) {\n          break;\n        }\n\n        state.line = line;\n      }\n    }\n  };\n\n  var TABS_SCAN_RE = /[\\n\\t]/g;\n  var NEWLINES_RE = /\\r[\\n\\u0085]|[\\u2424\\u2028\\u0085]/g;\n  var SPACES_RE = /\\u00a0/g;\n  /**\n   * Tokenize the given `str`.\n   *\n   * @param  {String} `str` Source string\n   * @param  {Object} `options`\n   * @param  {Object} `env`\n   * @param  {Array} `outTokens`\n   * @api private\n   */\n\n  ParserBlock.prototype.parse = function (str, options, env, outTokens) {\n    var state,\n        lineStart = 0,\n        lastTabPos = 0;\n\n    if (!str) {\n      return [];\n    } // Normalize spaces\n\n\n    str = str.replace(SPACES_RE, ' '); // Normalize newlines\n\n    str = str.replace(NEWLINES_RE, '\\n'); // Replace tabs with proper number of spaces (1..4)\n\n    if (str.indexOf('\\t') >= 0) {\n      str = str.replace(TABS_SCAN_RE, function (match, offset) {\n        var result;\n\n        if (str.charCodeAt(offset) === 0x0A) {\n          lineStart = offset + 1;\n          lastTabPos = 0;\n          return match;\n        }\n\n        result = '    '.slice((offset - lineStart - lastTabPos) % 4);\n        lastTabPos = offset - lineStart + 1;\n        return result;\n      });\n    }\n\n    state = new StateBlock(str, this, options, env, outTokens);\n    this.tokenize(state, state.line, state.lineMax);\n  }; // Skip text characters for text token, place those to pending buffer\n  // and increment current pos\n  // Rule to skip pure text\n  // '{}$%@~+=:' reserved for extentions\n\n\n  function isTerminatorChar(ch) {\n    switch (ch) {\n      case 0x0A\n      /* \\n */\n      :\n      case 0x5C\n      /* \\ */\n      :\n      case 0x60\n      /* ` */\n      :\n      case 0x2A\n      /* * */\n      :\n      case 0x5F\n      /* _ */\n      :\n      case 0x5E\n      /* ^ */\n      :\n      case 0x5B\n      /* [ */\n      :\n      case 0x5D\n      /* ] */\n      :\n      case 0x21\n      /* ! */\n      :\n      case 0x26\n      /* & */\n      :\n      case 0x3C\n      /* < */\n      :\n      case 0x3E\n      /* > */\n      :\n      case 0x7B\n      /* { */\n      :\n      case 0x7D\n      /* } */\n      :\n      case 0x24\n      /* $ */\n      :\n      case 0x25\n      /* % */\n      :\n      case 0x40\n      /* @ */\n      :\n      case 0x7E\n      /* ~ */\n      :\n      case 0x2B\n      /* + */\n      :\n      case 0x3D\n      /* = */\n      :\n      case 0x3A\n      /* : */\n      :\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  function text(state, silent) {\n    var pos = state.pos;\n\n    while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n      pos++;\n    }\n\n    if (pos === state.pos) {\n      return false;\n    }\n\n    if (!silent) {\n      state.pending += state.src.slice(state.pos, pos);\n    }\n\n    state.pos = pos;\n    return true;\n  } // Proceess '\\n'\n\n\n  function newline(state, silent) {\n    var pmax,\n        max,\n        pos = state.pos;\n\n    if (state.src.charCodeAt(pos) !== 0x0A\n    /* \\n */\n    ) {\n      return false;\n    }\n\n    pmax = state.pending.length - 1;\n    max = state.posMax; // '  \\n' -> hardbreak\n    // Lookup in pending chars is bad practice! Don't copy to other rules!\n    // Pending string is stored in concat mode, indexed lookups will cause\n    // convertion to flat mode.\n\n    if (!silent) {\n      if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n        if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n          // Strip out all trailing spaces on this line.\n          for (var i = pmax - 2; i >= 0; i--) {\n            if (state.pending.charCodeAt(i) !== 0x20) {\n              state.pending = state.pending.substring(0, i + 1);\n              break;\n            }\n          }\n\n          state.push({\n            type: 'hardbreak',\n            level: state.level\n          });\n        } else {\n          state.pending = state.pending.slice(0, -1);\n          state.push({\n            type: 'softbreak',\n            level: state.level\n          });\n        }\n      } else {\n        state.push({\n          type: 'softbreak',\n          level: state.level\n        });\n      }\n    }\n\n    pos++; // skip heading spaces for next line\n\n    while (pos < max && state.src.charCodeAt(pos) === 0x20) {\n      pos++;\n    }\n\n    state.pos = pos;\n    return true;\n  } // Proceess escaped chars and hardbreaks\n\n\n  var ESCAPED = [];\n\n  for (var i$1 = 0; i$1 < 256; i$1++) {\n    ESCAPED.push(0);\n  }\n\n  '\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'.split('').forEach(function (ch) {\n    ESCAPED[ch.charCodeAt(0)] = 1;\n  });\n\n  function escape(state, silent) {\n    var ch,\n        pos = state.pos,\n        max = state.posMax;\n\n    if (state.src.charCodeAt(pos) !== 0x5C\n    /* \\ */\n    ) {\n      return false;\n    }\n\n    pos++;\n\n    if (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch < 256 && ESCAPED[ch] !== 0) {\n        if (!silent) {\n          state.pending += state.src[pos];\n        }\n\n        state.pos += 2;\n        return true;\n      }\n\n      if (ch === 0x0A) {\n        if (!silent) {\n          state.push({\n            type: 'hardbreak',\n            level: state.level\n          });\n        }\n\n        pos++; // skip leading whitespaces from next line\n\n        while (pos < max && state.src.charCodeAt(pos) === 0x20) {\n          pos++;\n        }\n\n        state.pos = pos;\n        return true;\n      }\n    }\n\n    if (!silent) {\n      state.pending += '\\\\';\n    }\n\n    state.pos++;\n    return true;\n  } // Parse backticks\n\n\n  function backticks(state, silent) {\n    var start,\n        max,\n        marker,\n        matchStart,\n        matchEnd,\n        pos = state.pos,\n        ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x60\n    /* ` */\n    ) {\n      return false;\n    }\n\n    start = pos;\n    pos++;\n    max = state.posMax;\n\n    while (pos < max && state.src.charCodeAt(pos) === 0x60\n    /* ` */\n    ) {\n      pos++;\n    }\n\n    marker = state.src.slice(start, pos);\n    matchStart = matchEnd = pos;\n\n    while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n      matchEnd = matchStart + 1;\n\n      while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60\n      /* ` */\n      ) {\n        matchEnd++;\n      }\n\n      if (matchEnd - matchStart === marker.length) {\n        if (!silent) {\n          state.push({\n            type: 'code',\n            content: state.src.slice(pos, matchStart).replace(/[ \\n]+/g, ' ').trim(),\n            block: false,\n            level: state.level\n          });\n        }\n\n        state.pos = matchEnd;\n        return true;\n      }\n    }\n\n    if (!silent) {\n      state.pending += marker;\n    }\n\n    state.pos += marker.length;\n    return true;\n  } // Process ~~deleted text~~\n\n\n  function del(state, silent) {\n    var found,\n        pos,\n        stack,\n        max = state.posMax,\n        start = state.pos,\n        lastChar,\n        nextChar;\n\n    if (state.src.charCodeAt(start) !== 0x7E\n    /* ~ */\n    ) {\n      return false;\n    }\n\n    if (silent) {\n      return false;\n    } // don't run any pairs in validation mode\n\n\n    if (start + 4 >= max) {\n      return false;\n    }\n\n    if (state.src.charCodeAt(start + 1) !== 0x7E\n    /* ~ */\n    ) {\n      return false;\n    }\n\n    if (state.level >= state.options.maxNesting) {\n      return false;\n    }\n\n    lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n    nextChar = state.src.charCodeAt(start + 2);\n\n    if (lastChar === 0x7E\n    /* ~ */\n    ) {\n      return false;\n    }\n\n    if (nextChar === 0x7E\n    /* ~ */\n    ) {\n      return false;\n    }\n\n    if (nextChar === 0x20 || nextChar === 0x0A) {\n      return false;\n    }\n\n    pos = start + 2;\n\n    while (pos < max && state.src.charCodeAt(pos) === 0x7E\n    /* ~ */\n    ) {\n      pos++;\n    }\n\n    if (pos > start + 3) {\n      // sequence of 4+ markers taking as literal, same as in a emphasis\n      state.pos += pos - start;\n\n      if (!silent) {\n        state.pending += state.src.slice(start, pos);\n      }\n\n      return true;\n    }\n\n    state.pos = start + 2;\n    stack = 1;\n\n    while (state.pos + 1 < max) {\n      if (state.src.charCodeAt(state.pos) === 0x7E\n      /* ~ */\n      ) {\n        if (state.src.charCodeAt(state.pos + 1) === 0x7E\n        /* ~ */\n        ) {\n          lastChar = state.src.charCodeAt(state.pos - 1);\n          nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n\n          if (nextChar !== 0x7E\n          /* ~ */\n          && lastChar !== 0x7E\n          /* ~ */\n          ) {\n            if (lastChar !== 0x20 && lastChar !== 0x0A) {\n              // closing '~~'\n              stack--;\n            } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n              // opening '~~'\n              stack++;\n            } // else {\n            //  // standalone ' ~~ ' indented with spaces\n            // }\n\n\n            if (stack <= 0) {\n              found = true;\n              break;\n            }\n          }\n        }\n      }\n\n      state.parser.skipToken(state);\n    }\n\n    if (!found) {\n      // parser failed to find ending tag, so it's not valid emphasis\n      state.pos = start;\n      return false;\n    } // found!\n\n\n    state.posMax = state.pos;\n    state.pos = start + 2;\n\n    if (!silent) {\n      state.push({\n        type: 'del_open',\n        level: state.level++\n      });\n      state.parser.tokenize(state);\n      state.push({\n        type: 'del_close',\n        level: --state.level\n      });\n    }\n\n    state.pos = state.posMax + 2;\n    state.posMax = max;\n    return true;\n  } // Process ++inserted text++\n\n\n  function ins(state, silent) {\n    var found,\n        pos,\n        stack,\n        max = state.posMax,\n        start = state.pos,\n        lastChar,\n        nextChar;\n\n    if (state.src.charCodeAt(start) !== 0x2B\n    /* + */\n    ) {\n      return false;\n    }\n\n    if (silent) {\n      return false;\n    } // don't run any pairs in validation mode\n\n\n    if (start + 4 >= max) {\n      return false;\n    }\n\n    if (state.src.charCodeAt(start + 1) !== 0x2B\n    /* + */\n    ) {\n      return false;\n    }\n\n    if (state.level >= state.options.maxNesting) {\n      return false;\n    }\n\n    lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n    nextChar = state.src.charCodeAt(start + 2);\n\n    if (lastChar === 0x2B\n    /* + */\n    ) {\n      return false;\n    }\n\n    if (nextChar === 0x2B\n    /* + */\n    ) {\n      return false;\n    }\n\n    if (nextChar === 0x20 || nextChar === 0x0A) {\n      return false;\n    }\n\n    pos = start + 2;\n\n    while (pos < max && state.src.charCodeAt(pos) === 0x2B\n    /* + */\n    ) {\n      pos++;\n    }\n\n    if (pos !== start + 2) {\n      // sequence of 3+ markers taking as literal, same as in a emphasis\n      state.pos += pos - start;\n\n      if (!silent) {\n        state.pending += state.src.slice(start, pos);\n      }\n\n      return true;\n    }\n\n    state.pos = start + 2;\n    stack = 1;\n\n    while (state.pos + 1 < max) {\n      if (state.src.charCodeAt(state.pos) === 0x2B\n      /* + */\n      ) {\n        if (state.src.charCodeAt(state.pos + 1) === 0x2B\n        /* + */\n        ) {\n          lastChar = state.src.charCodeAt(state.pos - 1);\n          nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n\n          if (nextChar !== 0x2B\n          /* + */\n          && lastChar !== 0x2B\n          /* + */\n          ) {\n            if (lastChar !== 0x20 && lastChar !== 0x0A) {\n              // closing '++'\n              stack--;\n            } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n              // opening '++'\n              stack++;\n            } // else {\n            //  // standalone ' ++ ' indented with spaces\n            // }\n\n\n            if (stack <= 0) {\n              found = true;\n              break;\n            }\n          }\n        }\n      }\n\n      state.parser.skipToken(state);\n    }\n\n    if (!found) {\n      // parser failed to find ending tag, so it's not valid emphasis\n      state.pos = start;\n      return false;\n    } // found!\n\n\n    state.posMax = state.pos;\n    state.pos = start + 2;\n\n    if (!silent) {\n      state.push({\n        type: 'ins_open',\n        level: state.level++\n      });\n      state.parser.tokenize(state);\n      state.push({\n        type: 'ins_close',\n        level: --state.level\n      });\n    }\n\n    state.pos = state.posMax + 2;\n    state.posMax = max;\n    return true;\n  } // Process ==highlighted text==\n\n\n  function mark(state, silent) {\n    var found,\n        pos,\n        stack,\n        max = state.posMax,\n        start = state.pos,\n        lastChar,\n        nextChar;\n\n    if (state.src.charCodeAt(start) !== 0x3D\n    /* = */\n    ) {\n      return false;\n    }\n\n    if (silent) {\n      return false;\n    } // don't run any pairs in validation mode\n\n\n    if (start + 4 >= max) {\n      return false;\n    }\n\n    if (state.src.charCodeAt(start + 1) !== 0x3D\n    /* = */\n    ) {\n      return false;\n    }\n\n    if (state.level >= state.options.maxNesting) {\n      return false;\n    }\n\n    lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n    nextChar = state.src.charCodeAt(start + 2);\n\n    if (lastChar === 0x3D\n    /* = */\n    ) {\n      return false;\n    }\n\n    if (nextChar === 0x3D\n    /* = */\n    ) {\n      return false;\n    }\n\n    if (nextChar === 0x20 || nextChar === 0x0A) {\n      return false;\n    }\n\n    pos = start + 2;\n\n    while (pos < max && state.src.charCodeAt(pos) === 0x3D\n    /* = */\n    ) {\n      pos++;\n    }\n\n    if (pos !== start + 2) {\n      // sequence of 3+ markers taking as literal, same as in a emphasis\n      state.pos += pos - start;\n\n      if (!silent) {\n        state.pending += state.src.slice(start, pos);\n      }\n\n      return true;\n    }\n\n    state.pos = start + 2;\n    stack = 1;\n\n    while (state.pos + 1 < max) {\n      if (state.src.charCodeAt(state.pos) === 0x3D\n      /* = */\n      ) {\n        if (state.src.charCodeAt(state.pos + 1) === 0x3D\n        /* = */\n        ) {\n          lastChar = state.src.charCodeAt(state.pos - 1);\n          nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n\n          if (nextChar !== 0x3D\n          /* = */\n          && lastChar !== 0x3D\n          /* = */\n          ) {\n            if (lastChar !== 0x20 && lastChar !== 0x0A) {\n              // closing '=='\n              stack--;\n            } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n              // opening '=='\n              stack++;\n            } // else {\n            //  // standalone ' == ' indented with spaces\n            // }\n\n\n            if (stack <= 0) {\n              found = true;\n              break;\n            }\n          }\n        }\n      }\n\n      state.parser.skipToken(state);\n    }\n\n    if (!found) {\n      // parser failed to find ending tag, so it's not valid emphasis\n      state.pos = start;\n      return false;\n    } // found!\n\n\n    state.posMax = state.pos;\n    state.pos = start + 2;\n\n    if (!silent) {\n      state.push({\n        type: 'mark_open',\n        level: state.level++\n      });\n      state.parser.tokenize(state);\n      state.push({\n        type: 'mark_close',\n        level: --state.level\n      });\n    }\n\n    state.pos = state.posMax + 2;\n    state.posMax = max;\n    return true;\n  } // Process *this* and _that_\n\n\n  function isAlphaNum(code) {\n    return code >= 0x30\n    /* 0 */\n    && code <= 0x39\n    /* 9 */\n    || code >= 0x41\n    /* A */\n    && code <= 0x5A\n    /* Z */\n    || code >= 0x61\n    /* a */\n    && code <= 0x7A\n    /* z */\n    ;\n  } // parse sequence of emphasis markers,\n  // \"start\" should point at a valid marker\n\n\n  function scanDelims(state, start) {\n    var pos = start,\n        lastChar,\n        nextChar,\n        count,\n        can_open = true,\n        can_close = true,\n        max = state.posMax,\n        marker = state.src.charCodeAt(start);\n    lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n\n    while (pos < max && state.src.charCodeAt(pos) === marker) {\n      pos++;\n    }\n\n    if (pos >= max) {\n      can_open = false;\n    }\n\n    count = pos - start;\n\n    if (count >= 4) {\n      // sequence of four or more unescaped markers can't start/end an emphasis\n      can_open = can_close = false;\n    } else {\n      nextChar = pos < max ? state.src.charCodeAt(pos) : -1; // check whitespace conditions\n\n      if (nextChar === 0x20 || nextChar === 0x0A) {\n        can_open = false;\n      }\n\n      if (lastChar === 0x20 || lastChar === 0x0A) {\n        can_close = false;\n      }\n\n      if (marker === 0x5F\n      /* _ */\n      ) {\n        // check if we aren't inside the word\n        if (isAlphaNum(lastChar)) {\n          can_open = false;\n        }\n\n        if (isAlphaNum(nextChar)) {\n          can_close = false;\n        }\n      }\n    }\n\n    return {\n      can_open: can_open,\n      can_close: can_close,\n      delims: count\n    };\n  }\n\n  function emphasis(state, silent) {\n    var startCount,\n        count,\n        found,\n        oldCount,\n        newCount,\n        stack,\n        res,\n        max = state.posMax,\n        start = state.pos,\n        marker = state.src.charCodeAt(start);\n\n    if (marker !== 0x5F\n    /* _ */\n    && marker !== 0x2A\n    /* * */\n    ) {\n      return false;\n    }\n\n    if (silent) {\n      return false;\n    } // don't run any pairs in validation mode\n\n\n    res = scanDelims(state, start);\n    startCount = res.delims;\n\n    if (!res.can_open) {\n      state.pos += startCount;\n\n      if (!silent) {\n        state.pending += state.src.slice(start, state.pos);\n      }\n\n      return true;\n    }\n\n    if (state.level >= state.options.maxNesting) {\n      return false;\n    }\n\n    state.pos = start + startCount;\n    stack = [startCount];\n\n    while (state.pos < max) {\n      if (state.src.charCodeAt(state.pos) === marker) {\n        res = scanDelims(state, state.pos);\n        count = res.delims;\n\n        if (res.can_close) {\n          oldCount = stack.pop();\n          newCount = count;\n\n          while (oldCount !== newCount) {\n            if (newCount < oldCount) {\n              stack.push(oldCount - newCount);\n              break;\n            } // assert(newCount > oldCount)\n\n\n            newCount -= oldCount;\n\n            if (stack.length === 0) {\n              break;\n            }\n\n            state.pos += oldCount;\n            oldCount = stack.pop();\n          }\n\n          if (stack.length === 0) {\n            startCount = oldCount;\n            found = true;\n            break;\n          }\n\n          state.pos += count;\n          continue;\n        }\n\n        if (res.can_open) {\n          stack.push(count);\n        }\n\n        state.pos += count;\n        continue;\n      }\n\n      state.parser.skipToken(state);\n    }\n\n    if (!found) {\n      // parser failed to find ending tag, so it's not valid emphasis\n      state.pos = start;\n      return false;\n    } // found!\n\n\n    state.posMax = state.pos;\n    state.pos = start + startCount;\n\n    if (!silent) {\n      if (startCount === 2 || startCount === 3) {\n        state.push({\n          type: 'strong_open',\n          level: state.level++\n        });\n      }\n\n      if (startCount === 1 || startCount === 3) {\n        state.push({\n          type: 'em_open',\n          level: state.level++\n        });\n      }\n\n      state.parser.tokenize(state);\n\n      if (startCount === 1 || startCount === 3) {\n        state.push({\n          type: 'em_close',\n          level: --state.level\n        });\n      }\n\n      if (startCount === 2 || startCount === 3) {\n        state.push({\n          type: 'strong_close',\n          level: --state.level\n        });\n      }\n    }\n\n    state.pos = state.posMax + startCount;\n    state.posMax = max;\n    return true;\n  } // Process ~subscript~\n  // same as UNESCAPE_MD_RE plus a space\n\n\n  var UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\n  function sub(state, silent) {\n    var found,\n        content,\n        max = state.posMax,\n        start = state.pos;\n\n    if (state.src.charCodeAt(start) !== 0x7E\n    /* ~ */\n    ) {\n      return false;\n    }\n\n    if (silent) {\n      return false;\n    } // don't run any pairs in validation mode\n\n\n    if (start + 2 >= max) {\n      return false;\n    }\n\n    if (state.level >= state.options.maxNesting) {\n      return false;\n    }\n\n    state.pos = start + 1;\n\n    while (state.pos < max) {\n      if (state.src.charCodeAt(state.pos) === 0x7E\n      /* ~ */\n      ) {\n        found = true;\n        break;\n      }\n\n      state.parser.skipToken(state);\n    }\n\n    if (!found || start + 1 === state.pos) {\n      state.pos = start;\n      return false;\n    }\n\n    content = state.src.slice(start + 1, state.pos); // don't allow unescaped spaces/newlines inside\n\n    if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n      state.pos = start;\n      return false;\n    } // found!\n\n\n    state.posMax = state.pos;\n    state.pos = start + 1;\n\n    if (!silent) {\n      state.push({\n        type: 'sub',\n        level: state.level,\n        content: content.replace(UNESCAPE_RE, '$1')\n      });\n    }\n\n    state.pos = state.posMax + 1;\n    state.posMax = max;\n    return true;\n  } // Process ^superscript^\n  // same as UNESCAPE_MD_RE plus a space\n\n\n  var UNESCAPE_RE$1 = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\n  function sup(state, silent) {\n    var found,\n        content,\n        max = state.posMax,\n        start = state.pos;\n\n    if (state.src.charCodeAt(start) !== 0x5E\n    /* ^ */\n    ) {\n      return false;\n    }\n\n    if (silent) {\n      return false;\n    } // don't run any pairs in validation mode\n\n\n    if (start + 2 >= max) {\n      return false;\n    }\n\n    if (state.level >= state.options.maxNesting) {\n      return false;\n    }\n\n    state.pos = start + 1;\n\n    while (state.pos < max) {\n      if (state.src.charCodeAt(state.pos) === 0x5E\n      /* ^ */\n      ) {\n        found = true;\n        break;\n      }\n\n      state.parser.skipToken(state);\n    }\n\n    if (!found || start + 1 === state.pos) {\n      state.pos = start;\n      return false;\n    }\n\n    content = state.src.slice(start + 1, state.pos); // don't allow unescaped spaces/newlines inside\n\n    if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n      state.pos = start;\n      return false;\n    } // found!\n\n\n    state.posMax = state.pos;\n    state.pos = start + 1;\n\n    if (!silent) {\n      state.push({\n        type: 'sup',\n        level: state.level,\n        content: content.replace(UNESCAPE_RE$1, '$1')\n      });\n    }\n\n    state.pos = state.posMax + 1;\n    state.posMax = max;\n    return true;\n  } // Process [links](<to> \"stuff\")\n\n\n  function links(state, silent) {\n    var labelStart,\n        labelEnd,\n        label,\n        href,\n        title,\n        pos,\n        ref,\n        code,\n        isImage = false,\n        oldPos = state.pos,\n        max = state.posMax,\n        start = state.pos,\n        marker = state.src.charCodeAt(start);\n\n    if (marker === 0x21\n    /* ! */\n    ) {\n      isImage = true;\n      marker = state.src.charCodeAt(++start);\n    }\n\n    if (marker !== 0x5B\n    /* [ */\n    ) {\n      return false;\n    }\n\n    if (state.level >= state.options.maxNesting) {\n      return false;\n    }\n\n    labelStart = start + 1;\n    labelEnd = parseLinkLabel(state, start); // parser failed to find ']', so it's not a valid link\n\n    if (labelEnd < 0) {\n      return false;\n    }\n\n    pos = labelEnd + 1;\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x28\n    /* ( */\n    ) {\n      //\n      // Inline link\n      //\n      // [link](  <href>  \"title\"  )\n      //        ^^ skipping these spaces\n      pos++;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (code !== 0x20 && code !== 0x0A) {\n          break;\n        }\n      }\n\n      if (pos >= max) {\n        return false;\n      } // [link](  <href>  \"title\"  )\n      //          ^^^^^^ parsing link destination\n\n\n      start = pos;\n\n      if (parseLinkDestination(state, pos)) {\n        href = state.linkContent;\n        pos = state.pos;\n      } else {\n        href = '';\n      } // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n\n\n      start = pos;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (code !== 0x20 && code !== 0x0A) {\n          break;\n        }\n      } // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n\n\n      if (pos < max && start !== pos && parseLinkTitle(state, pos)) {\n        title = state.linkContent;\n        pos = state.pos; // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n\n          if (code !== 0x20 && code !== 0x0A) {\n            break;\n          }\n        }\n      } else {\n        title = '';\n      }\n\n      if (pos >= max || state.src.charCodeAt(pos) !== 0x29\n      /* ) */\n      ) {\n        state.pos = oldPos;\n        return false;\n      }\n\n      pos++;\n    } else {\n      //\n      // Link reference\n      //\n      // do not allow nested reference links\n      if (state.linkLevel > 0) {\n        return false;\n      } // [foo]  [bar]\n      //      ^^ optional whitespace (can include newlines)\n\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (code !== 0x20 && code !== 0x0A) {\n          break;\n        }\n      }\n\n      if (pos < max && state.src.charCodeAt(pos) === 0x5B\n      /* [ */\n      ) {\n        start = pos + 1;\n        pos = parseLinkLabel(state, pos);\n\n        if (pos >= 0) {\n          label = state.src.slice(start, pos++);\n        } else {\n          pos = start - 1;\n        }\n      } // covers label === '' and label === undefined\n      // (collapsed reference link and shortcut reference link respectively)\n\n\n      if (!label) {\n        if (typeof label === 'undefined') {\n          pos = labelEnd + 1;\n        }\n\n        label = state.src.slice(labelStart, labelEnd);\n      }\n\n      ref = state.env.references[normalizeReference(label)];\n\n      if (!ref) {\n        state.pos = oldPos;\n        return false;\n      }\n\n      href = ref.href;\n      title = ref.title;\n    } //\n    // We found the end of the link, and know for a fact it's a valid link;\n    // so all that's left to do is to call tokenizer.\n    //\n\n\n    if (!silent) {\n      state.pos = labelStart;\n      state.posMax = labelEnd;\n\n      if (isImage) {\n        state.push({\n          type: 'image',\n          src: href,\n          title: title,\n          alt: state.src.substr(labelStart, labelEnd - labelStart),\n          level: state.level\n        });\n      } else {\n        state.push({\n          type: 'link_open',\n          href: href,\n          title: title,\n          level: state.level++\n        });\n        state.linkLevel++;\n        state.parser.tokenize(state);\n        state.linkLevel--;\n        state.push({\n          type: 'link_close',\n          level: --state.level\n        });\n      }\n    }\n\n    state.pos = pos;\n    state.posMax = max;\n    return true;\n  } // Process inline footnotes (^[...])\n\n\n  function footnote_inline(state, silent) {\n    var labelStart,\n        labelEnd,\n        footnoteId,\n        oldLength,\n        max = state.posMax,\n        start = state.pos;\n\n    if (start + 2 >= max) {\n      return false;\n    }\n\n    if (state.src.charCodeAt(start) !== 0x5E\n    /* ^ */\n    ) {\n      return false;\n    }\n\n    if (state.src.charCodeAt(start + 1) !== 0x5B\n    /* [ */\n    ) {\n      return false;\n    }\n\n    if (state.level >= state.options.maxNesting) {\n      return false;\n    }\n\n    labelStart = start + 2;\n    labelEnd = parseLinkLabel(state, start + 1); // parser failed to find ']', so it's not a valid note\n\n    if (labelEnd < 0) {\n      return false;\n    } // We found the end of the link, and know for a fact it's a valid link;\n    // so all that's left to do is to call tokenizer.\n    //\n\n\n    if (!silent) {\n      if (!state.env.footnotes) {\n        state.env.footnotes = {};\n      }\n\n      if (!state.env.footnotes.list) {\n        state.env.footnotes.list = [];\n      }\n\n      footnoteId = state.env.footnotes.list.length;\n      state.pos = labelStart;\n      state.posMax = labelEnd;\n      state.push({\n        type: 'footnote_ref',\n        id: footnoteId,\n        level: state.level\n      });\n      state.linkLevel++;\n      oldLength = state.tokens.length;\n      state.parser.tokenize(state);\n      state.env.footnotes.list[footnoteId] = {\n        tokens: state.tokens.splice(oldLength)\n      };\n      state.linkLevel--;\n    }\n\n    state.pos = labelEnd + 1;\n    state.posMax = max;\n    return true;\n  } // Process footnote references ([^...])\n\n\n  function footnote_ref(state, silent) {\n    var label,\n        pos,\n        footnoteId,\n        footnoteSubId,\n        max = state.posMax,\n        start = state.pos; // should be at least 4 chars - \"[^x]\"\n\n    if (start + 3 > max) {\n      return false;\n    }\n\n    if (!state.env.footnotes || !state.env.footnotes.refs) {\n      return false;\n    }\n\n    if (state.src.charCodeAt(start) !== 0x5B\n    /* [ */\n    ) {\n      return false;\n    }\n\n    if (state.src.charCodeAt(start + 1) !== 0x5E\n    /* ^ */\n    ) {\n      return false;\n    }\n\n    if (state.level >= state.options.maxNesting) {\n      return false;\n    }\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) {\n        return false;\n      }\n\n      if (state.src.charCodeAt(pos) === 0x0A) {\n        return false;\n      }\n\n      if (state.src.charCodeAt(pos) === 0x5D\n      /* ] */\n      ) {\n        break;\n      }\n    }\n\n    if (pos === start + 2) {\n      return false;\n    } // no empty footnote labels\n\n\n    if (pos >= max) {\n      return false;\n    }\n\n    pos++;\n    label = state.src.slice(start + 2, pos - 1);\n\n    if (typeof state.env.footnotes.refs[':' + label] === 'undefined') {\n      return false;\n    }\n\n    if (!silent) {\n      if (!state.env.footnotes.list) {\n        state.env.footnotes.list = [];\n      }\n\n      if (state.env.footnotes.refs[':' + label] < 0) {\n        footnoteId = state.env.footnotes.list.length;\n        state.env.footnotes.list[footnoteId] = {\n          label: label,\n          count: 0\n        };\n        state.env.footnotes.refs[':' + label] = footnoteId;\n      } else {\n        footnoteId = state.env.footnotes.refs[':' + label];\n      }\n\n      footnoteSubId = state.env.footnotes.list[footnoteId].count;\n      state.env.footnotes.list[footnoteId].count++;\n      state.push({\n        type: 'footnote_ref',\n        id: footnoteId,\n        subId: footnoteSubId,\n        level: state.level\n      });\n    }\n\n    state.pos = pos;\n    state.posMax = max;\n    return true;\n  } // List of valid url schemas, accorting to commonmark spec\n  // http://jgm.github.io/CommonMark/spec.html#autolinks\n\n\n  var url_schemas = ['coap', 'doi', 'javascript', 'aaa', 'aaas', 'about', 'acap', 'cap', 'cid', 'crid', 'data', 'dav', 'dict', 'dns', 'file', 'ftp', 'geo', 'go', 'gopher', 'h323', 'http', 'https', 'iax', 'icap', 'im', 'imap', 'info', 'ipp', 'iris', 'iris.beep', 'iris.xpc', 'iris.xpcs', 'iris.lwz', 'ldap', 'mailto', 'mid', 'msrp', 'msrps', 'mtqp', 'mupdate', 'news', 'nfs', 'ni', 'nih', 'nntp', 'opaquelocktoken', 'pop', 'pres', 'rtsp', 'service', 'session', 'shttp', 'sieve', 'sip', 'sips', 'sms', 'snmp', 'soap.beep', 'soap.beeps', 'tag', 'tel', 'telnet', 'tftp', 'thismessage', 'tn3270', 'tip', 'tv', 'urn', 'vemmi', 'ws', 'wss', 'xcon', 'xcon-userid', 'xmlrpc.beep', 'xmlrpc.beeps', 'xmpp', 'z39.50r', 'z39.50s', 'adiumxtra', 'afp', 'afs', 'aim', 'apt', 'attachment', 'aw', 'beshare', 'bitcoin', 'bolo', 'callto', 'chrome', 'chrome-extension', 'com-eventbrite-attendee', 'content', 'cvs', 'dlna-playsingle', 'dlna-playcontainer', 'dtn', 'dvb', 'ed2k', 'facetime', 'feed', 'finger', 'fish', 'gg', 'git', 'gizmoproject', 'gtalk', 'hcp', 'icon', 'ipn', 'irc', 'irc6', 'ircs', 'itms', 'jar', 'jms', 'keyparc', 'lastfm', 'ldaps', 'magnet', 'maps', 'market', 'message', 'mms', 'ms-help', 'msnim', 'mumble', 'mvn', 'notes', 'oid', 'palm', 'paparazzi', 'platform', 'proxy', 'psyc', 'query', 'res', 'resource', 'rmi', 'rsync', 'rtmp', 'secondlife', 'sftp', 'sgn', 'skype', 'smb', 'soldat', 'spotify', 'ssh', 'steam', 'svn', 'teamspeak', 'things', 'udp', 'unreal', 'ut2004', 'ventrilo', 'view-source', 'webcal', 'wtai', 'wyciwyg', 'xfire', 'xri', 'ymsgr']; // Process autolinks '<protocol:...>'\n\n  /*eslint max-len:0*/\n\n  var EMAIL_RE = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\n  var AUTOLINK_RE = /^<([a-zA-Z.\\-]{1,25}):([^<>\\x00-\\x20]*)>/;\n\n  function autolink(state, silent) {\n    var tail,\n        linkMatch,\n        emailMatch,\n        url,\n        fullUrl,\n        pos = state.pos;\n\n    if (state.src.charCodeAt(pos) !== 0x3C\n    /* < */\n    ) {\n      return false;\n    }\n\n    tail = state.src.slice(pos);\n\n    if (tail.indexOf('>') < 0) {\n      return false;\n    }\n\n    linkMatch = tail.match(AUTOLINK_RE);\n\n    if (linkMatch) {\n      if (url_schemas.indexOf(linkMatch[1].toLowerCase()) < 0) {\n        return false;\n      }\n\n      url = linkMatch[0].slice(1, -1);\n      fullUrl = normalizeLink(url);\n\n      if (!state.parser.validateLink(url)) {\n        return false;\n      }\n\n      if (!silent) {\n        state.push({\n          type: 'link_open',\n          href: fullUrl,\n          level: state.level\n        });\n        state.push({\n          type: 'text',\n          content: url,\n          level: state.level + 1\n        });\n        state.push({\n          type: 'link_close',\n          level: state.level\n        });\n      }\n\n      state.pos += linkMatch[0].length;\n      return true;\n    }\n\n    emailMatch = tail.match(EMAIL_RE);\n\n    if (emailMatch) {\n      url = emailMatch[0].slice(1, -1);\n      fullUrl = normalizeLink('mailto:' + url);\n\n      if (!state.parser.validateLink(fullUrl)) {\n        return false;\n      }\n\n      if (!silent) {\n        state.push({\n          type: 'link_open',\n          href: fullUrl,\n          level: state.level\n        });\n        state.push({\n          type: 'text',\n          content: url,\n          level: state.level + 1\n        });\n        state.push({\n          type: 'link_close',\n          level: state.level\n        });\n      }\n\n      state.pos += emailMatch[0].length;\n      return true;\n    }\n\n    return false;\n  } // Regexps to match html elements\n\n\n  function replace$1(regex, options) {\n    regex = regex.source;\n    options = options || '';\n    return function self(name, val) {\n      if (!name) {\n        return new RegExp(regex, options);\n      }\n\n      val = val.source || val;\n      regex = regex.replace(name, val);\n      return self;\n    };\n  }\n\n  var attr_name = /[a-zA-Z_:][a-zA-Z0-9:._-]*/;\n  var unquoted = /[^\"'=<>`\\x00-\\x20]+/;\n  var single_quoted = /'[^']*'/;\n  var double_quoted = /\"[^\"]*\"/;\n  /*eslint no-spaced-func:0*/\n\n  var attr_value = replace$1(/(?:unquoted|single_quoted|double_quoted)/)('unquoted', unquoted)('single_quoted', single_quoted)('double_quoted', double_quoted)();\n  var attribute = replace$1(/(?:\\s+attr_name(?:\\s*=\\s*attr_value)?)/)('attr_name', attr_name)('attr_value', attr_value)();\n  var open_tag = replace$1(/<[A-Za-z][A-Za-z0-9]*attribute*\\s*\\/?>/)('attribute', attribute)();\n  var close_tag = /<\\/[A-Za-z][A-Za-z0-9]*\\s*>/;\n  var comment = /<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->/;\n  var processing = /<[?].*?[?]>/;\n  var declaration = /<![A-Z]+\\s+[^>]*>/;\n  var cdata = /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/;\n  var HTML_TAG_RE = replace$1(/^(?:open_tag|close_tag|comment|processing|declaration|cdata)/)('open_tag', open_tag)('close_tag', close_tag)('comment', comment)('processing', processing)('declaration', declaration)('cdata', cdata)(); // Process html tags\n\n  function isLetter$2(ch) {\n    /*eslint no-bitwise:0*/\n    var lc = ch | 0x20; // to lower case\n\n    return lc >= 0x61\n    /* a */\n    && lc <= 0x7a\n    /* z */\n    ;\n  }\n\n  function htmltag(state, silent) {\n    var ch,\n        match,\n        max,\n        pos = state.pos;\n\n    if (!state.options.html) {\n      return false;\n    } // Check start\n\n\n    max = state.posMax;\n\n    if (state.src.charCodeAt(pos) !== 0x3C\n    /* < */\n    || pos + 2 >= max) {\n      return false;\n    } // Quick fail on second char\n\n\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch !== 0x21\n    /* ! */\n    && ch !== 0x3F\n    /* ? */\n    && ch !== 0x2F\n    /* / */\n    && !isLetter$2(ch)) {\n      return false;\n    }\n\n    match = state.src.slice(pos).match(HTML_TAG_RE);\n\n    if (!match) {\n      return false;\n    }\n\n    if (!silent) {\n      state.push({\n        type: 'htmltag',\n        content: state.src.slice(pos, pos + match[0].length),\n        level: state.level\n      });\n    }\n\n    state.pos += match[0].length;\n    return true;\n  } // Process html entity - &#123;, &#xAF;, &quot;, ...\n\n\n  var DIGITAL_RE = /^&#((?:x[a-f0-9]{1,8}|[0-9]{1,8}));/i;\n  var NAMED_RE = /^&([a-z][a-z0-9]{1,31});/i;\n\n  function entity(state, silent) {\n    var ch,\n        code,\n        match,\n        pos = state.pos,\n        max = state.posMax;\n\n    if (state.src.charCodeAt(pos) !== 0x26\n    /* & */\n    ) {\n      return false;\n    }\n\n    if (pos + 1 < max) {\n      ch = state.src.charCodeAt(pos + 1);\n\n      if (ch === 0x23\n      /* # */\n      ) {\n        match = state.src.slice(pos).match(DIGITAL_RE);\n\n        if (match) {\n          if (!silent) {\n            code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n            state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n          }\n\n          state.pos += match[0].length;\n          return true;\n        }\n      } else {\n        match = state.src.slice(pos).match(NAMED_RE);\n\n        if (match) {\n          var decoded = decodeEntity(match[1]);\n\n          if (match[1] !== decoded) {\n            if (!silent) {\n              state.pending += decoded;\n            }\n\n            state.pos += match[0].length;\n            return true;\n          }\n        }\n      }\n    }\n\n    if (!silent) {\n      state.pending += '&';\n    }\n\n    state.pos++;\n    return true;\n  }\n  /**\n   * Inline Parser `rules`\n   */\n\n\n  var _rules$2 = [['text', text], ['newline', newline], ['escape', escape], ['backticks', backticks], ['del', del], ['ins', ins], ['mark', mark], ['emphasis', emphasis], ['sub', sub], ['sup', sup], ['links', links], ['footnote_inline', footnote_inline], ['footnote_ref', footnote_ref], ['autolink', autolink], ['htmltag', htmltag], ['entity', entity]];\n  /**\n   * Inline Parser class. Note that link validation is stricter\n   * in Remarkable than what is specified by CommonMark. If you\n   * want to change this you can use a custom validator.\n   *\n   * @api private\n   */\n\n  function ParserInline() {\n    this.ruler = new Ruler();\n\n    for (var i = 0; i < _rules$2.length; i++) {\n      this.ruler.push(_rules$2[i][0], _rules$2[i][1]);\n    } // Can be overridden with a custom validator\n\n\n    this.validateLink = validateLink;\n  }\n  /**\n   * Skip a single token by running all rules in validation mode.\n   * Returns `true` if any rule reports success.\n   *\n   * @param  {Object} `state`\n   * @api privage\n   */\n\n\n  ParserInline.prototype.skipToken = function (state) {\n    var rules = this.ruler.getRules('');\n    var len = rules.length;\n    var pos = state.pos;\n    var i, cached_pos;\n\n    if ((cached_pos = state.cacheGet(pos)) > 0) {\n      state.pos = cached_pos;\n      return;\n    }\n\n    for (i = 0; i < len; i++) {\n      if (rules[i](state, true)) {\n        state.cacheSet(pos, state.pos);\n        return;\n      }\n    }\n\n    state.pos++;\n    state.cacheSet(pos, state.pos);\n  };\n  /**\n   * Generate tokens for the given input range.\n   *\n   * @param  {Object} `state`\n   * @api private\n   */\n\n\n  ParserInline.prototype.tokenize = function (state) {\n    var rules = this.ruler.getRules('');\n    var len = rules.length;\n    var end = state.posMax;\n    var ok, i;\n\n    while (state.pos < end) {\n      // Try all possible rules.\n      // On success, the rule should:\n      //\n      // - update `state.pos`\n      // - update `state.tokens`\n      // - return true\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n\n        if (ok) {\n          break;\n        }\n      }\n\n      if (ok) {\n        if (state.pos >= end) {\n          break;\n        }\n\n        continue;\n      }\n\n      state.pending += state.src[state.pos++];\n    }\n\n    if (state.pending) {\n      state.pushPending();\n    }\n  };\n  /**\n   * Parse the given input string.\n   *\n   * @param  {String} `str`\n   * @param  {Object} `options`\n   * @param  {Object} `env`\n   * @param  {Array} `outTokens`\n   * @api private\n   */\n\n\n  ParserInline.prototype.parse = function (str, options, env, outTokens) {\n    var state = new StateInline(str, this, options, env, outTokens);\n    this.tokenize(state);\n  };\n  /**\n   * Validate the given `url` by checking for bad protocols.\n   *\n   * @param  {String} `url`\n   * @return {Boolean}\n   */\n\n\n  function validateLink(url) {\n    var BAD_PROTOCOLS = ['vbscript', 'javascript', 'file', 'data'];\n    var str = url.trim().toLowerCase(); // Care about digital entities \"javascript&#x3A;alert(1)\"\n\n    str = replaceEntities(str);\n\n    if (str.indexOf(':') !== -1 && BAD_PROTOCOLS.indexOf(str.split(':')[0]) !== -1) {\n      return false;\n    }\n\n    return true;\n  } // Remarkable default options\n\n\n  var defaultConfig = {\n    options: {\n      html: false,\n      // Enable HTML tags in source\n      xhtmlOut: false,\n      // Use '/' to close single tags (<br />)\n      breaks: false,\n      // Convert '\\n' in paragraphs into <br>\n      langPrefix: 'language-',\n      // CSS language prefix for fenced blocks\n      linkTarget: '',\n      // set target to open link in\n      // Enable some language-neutral replacements + quotes beautification\n      typographer: false,\n      // Double + single quotes replacement pairs, when typographer enabled,\n      // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.\n      quotes: '“”‘’',\n      // Highlighter function. Should return escaped HTML,\n      // or '' if input not changed\n      //\n      // function (/*str, lang*/) { return ''; }\n      //\n      highlight: null,\n      maxNesting: 20 // Internal protection, recursion limit\n\n    },\n    components: {\n      core: {\n        rules: ['block', 'inline', 'references', 'replacements', 'smartquotes', 'references', 'abbr2', 'footnote_tail']\n      },\n      block: {\n        rules: ['blockquote', 'code', 'fences', 'footnote', 'heading', 'hr', 'htmlblock', 'lheading', 'list', 'paragraph', 'table']\n      },\n      inline: {\n        rules: ['autolink', 'backticks', 'del', 'emphasis', 'entity', 'escape', 'footnote_ref', 'htmltag', 'links', 'newline', 'text']\n      }\n    }\n  }; // Remarkable default options\n\n  var fullConfig = {\n    options: {\n      html: false,\n      // Enable HTML tags in source\n      xhtmlOut: false,\n      // Use '/' to close single tags (<br />)\n      breaks: false,\n      // Convert '\\n' in paragraphs into <br>\n      langPrefix: 'language-',\n      // CSS language prefix for fenced blocks\n      linkTarget: '',\n      // set target to open link in\n      // Enable some language-neutral replacements + quotes beautification\n      typographer: false,\n      // Double + single quotes replacement pairs, when typographer enabled,\n      // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.\n      quotes: '“”‘’',\n      // Highlighter function. Should return escaped HTML,\n      // or '' if input not changed\n      //\n      // function (/*str, lang*/) { return ''; }\n      //\n      highlight: null,\n      maxNesting: 20 // Internal protection, recursion limit\n\n    },\n    components: {\n      // Don't restrict core/block/inline rules\n      core: {},\n      block: {},\n      inline: {}\n    }\n  }; // Commonmark default options\n\n  var commonmarkConfig = {\n    options: {\n      html: true,\n      // Enable HTML tags in source\n      xhtmlOut: true,\n      // Use '/' to close single tags (<br />)\n      breaks: false,\n      // Convert '\\n' in paragraphs into <br>\n      langPrefix: 'language-',\n      // CSS language prefix for fenced blocks\n      linkTarget: '',\n      // set target to open link in\n      // Enable some language-neutral replacements + quotes beautification\n      typographer: false,\n      // Double + single quotes replacement pairs, when typographer enabled,\n      // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.\n      quotes: '“”‘’',\n      // Highlighter function. Should return escaped HTML,\n      // or '' if input not changed\n      //\n      // function (/*str, lang*/) { return ''; }\n      //\n      highlight: null,\n      maxNesting: 20 // Internal protection, recursion limit\n\n    },\n    components: {\n      core: {\n        rules: ['block', 'inline', 'references', 'abbr2']\n      },\n      block: {\n        rules: ['blockquote', 'code', 'fences', 'heading', 'hr', 'htmlblock', 'lheading', 'list', 'paragraph']\n      },\n      inline: {\n        rules: ['autolink', 'backticks', 'emphasis', 'entity', 'escape', 'htmltag', 'links', 'newline', 'text']\n      }\n    }\n  };\n  /**\n   * Preset configs\n   */\n\n  var config = {\n    'default': defaultConfig,\n    'full': fullConfig,\n    'commonmark': commonmarkConfig\n  };\n  /**\n   * The `StateCore` class manages state.\n   *\n   * @param {Object} `instance` Remarkable instance\n   * @param {String} `str` Markdown string\n   * @param {Object} `env`\n   */\n\n  function StateCore(instance, str, env) {\n    this.src = str;\n    this.env = env;\n    this.options = instance.options;\n    this.tokens = [];\n    this.inlineMode = false;\n    this.inline = instance.inline;\n    this.block = instance.block;\n    this.renderer = instance.renderer;\n    this.typographer = instance.typographer;\n  }\n  /**\n   * The main `Remarkable` class. Create an instance of\n   * `Remarkable` with a `preset` and/or `options`.\n   *\n   * @param {String} `preset` If no preset is given, `default` is used.\n   * @param {Object} `options`\n   */\n\n\n  function Remarkable(preset, options) {\n    if (typeof preset !== 'string') {\n      options = preset;\n      preset = 'default';\n    }\n\n    if (options && options.linkify != null) {\n      console.warn('linkify option is removed. Use linkify plugin instead:\\n\\n' + 'import Remarkable from \\'remarkable\\';\\n' + 'import linkify from \\'remarkable/linkify\\';\\n' + 'new Remarkable().use(linkify)\\n');\n    }\n\n    this.inline = new ParserInline();\n    this.block = new ParserBlock();\n    this.core = new Core();\n    this.renderer = new Renderer();\n    this.ruler = new Ruler();\n    this.options = {};\n    this.configure(config[preset]);\n    this.set(options || {});\n  }\n  /**\n   * Set options as an alternative to passing them\n   * to the constructor.\n   *\n   * ```js\n   * md.set({typographer: true});\n   * ```\n   * @param {Object} `options`\n   * @api public\n   */\n\n\n  Remarkable.prototype.set = function (options) {\n    assign(this.options, options);\n  };\n  /**\n   * Batch loader for components rules states, and options\n   *\n   * @param  {Object} `presets`\n   */\n\n\n  Remarkable.prototype.configure = function (presets) {\n    var self = this;\n\n    if (!presets) {\n      throw new Error('Wrong `remarkable` preset, check name/content');\n    }\n\n    if (presets.options) {\n      self.set(presets.options);\n    }\n\n    if (presets.components) {\n      Object.keys(presets.components).forEach(function (name) {\n        if (presets.components[name].rules) {\n          self[name].ruler.enable(presets.components[name].rules, true);\n        }\n      });\n    }\n  };\n  /**\n   * Use a plugin.\n   *\n   * ```js\n   * var md = new Remarkable();\n   *\n   * md.use(plugin1)\n   *   .use(plugin2, opts)\n   *   .use(plugin3);\n   * ```\n   *\n   * @param  {Function} `plugin`\n   * @param  {Object} `options`\n   * @return {Object} `Remarkable` for chaining\n   */\n\n\n  Remarkable.prototype.use = function (plugin, options) {\n    plugin(this, options);\n    return this;\n  };\n  /**\n   * Parse the input `string` and return a tokens array.\n   * Modifies `env` with definitions data.\n   *\n   * @param  {String} `string`\n   * @param  {Object} `env`\n   * @return {Array} Array of tokens\n   */\n\n\n  Remarkable.prototype.parse = function (str, env) {\n    var state = new StateCore(this, str, env);\n    this.core.process(state);\n    return state.tokens;\n  };\n  /**\n   * The main `.render()` method that does all the magic :)\n   *\n   * @param  {String} `string`\n   * @param  {Object} `env`\n   * @return {String} Rendered HTML.\n   */\n\n\n  Remarkable.prototype.render = function (str, env) {\n    env = env || {};\n    return this.renderer.render(this.parse(str, env), this.options, env);\n  };\n  /**\n   * Parse the given content `string` as a single string.\n   *\n   * @param  {String} `string`\n   * @param  {Object} `env`\n   * @return {Array} Array of tokens\n   */\n\n\n  Remarkable.prototype.parseInline = function (str, env) {\n    var state = new StateCore(this, str, env);\n    state.inlineMode = true;\n    this.core.process(state);\n    return state.tokens;\n  };\n  /**\n   * Render a single content `string`, without wrapping it\n   * to paragraphs\n   *\n   * @param  {String} `str`\n   * @param  {Object} `env`\n   * @return {String}\n   */\n\n\n  Remarkable.prototype.renderInline = function (str, env) {\n    env = env || {};\n    return this.renderer.render(this.parseInline(str, env), this.options, env);\n  };\n  /**\n   * Plugin for Remarkable Markdown processor which transforms $..$ and $$..$$ sequences into math HTML using the\n   * Katex package.\n   */\n\n\n  var rkatex = function rkatex(md, options) {\n    var backslash = '\\\\';\n    var dollar = '$';\n    var opts = options || {};\n    var delimiter = opts.delimiter || dollar;\n\n    if (delimiter.length !== 1) {\n      throw new Error('invalid delimiter');\n    }\n\n    var katex = require$$0__default;\n    /**\n     * Render the contents as KaTeX\n     */\n\n    var renderKatex = function renderKatex(source, displayMode) {\n      return katex.renderToString(source, {\n        displayMode: displayMode,\n        throwOnError: false\n      });\n    };\n    /**\n     * Parse '$$' as a block. Based off of similar method in remarkable.\n     */\n\n\n    var parseBlockKatex = function parseBlockKatex(state, startLine, endLine) {\n      var haveEndMarker = false;\n      var pos = state.bMarks[startLine] + state.tShift[startLine];\n      var max = state.eMarks[startLine];\n\n      if (pos + 1 > max) {\n        return false;\n      }\n\n      var marker = state.src.charAt(pos);\n\n      if (marker !== delimiter) {\n        return false;\n      } // scan marker length\n\n\n      var mem = pos;\n      pos = state.skipChars(pos, marker);\n      var len = pos - mem;\n\n      if (len !== 2) {\n        return false;\n      } // search end of block\n\n\n      var nextLine = startLine;\n\n      for (;;) {\n        ++nextLine;\n\n        if (nextLine >= endLine) {\n          break;\n        }\n\n        pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n        max = state.eMarks[nextLine];\n\n        if (pos < max && state.tShift[nextLine] < state.blkIndent) {\n          break;\n        }\n\n        if (state.src.charAt(pos) !== delimiter) {\n          continue;\n        }\n\n        if (state.tShift[nextLine] - state.blkIndent >= 4) {\n          continue;\n        }\n\n        pos = state.skipChars(pos, marker);\n\n        if (pos - mem < len) {\n          continue;\n        }\n\n        pos = state.skipSpaces(pos);\n\n        if (pos < max) {\n          continue;\n        }\n\n        haveEndMarker = true;\n        break;\n      } // If a fence has heading spaces, they should be removed from its inner block\n\n\n      len = state.tShift[startLine];\n      state.line = nextLine + (haveEndMarker ? 1 : 0);\n      var content = state.getLines(startLine + 1, nextLine, len, true).replace(/[ \\n]+/g, ' ').trim();\n      state.tokens.push({\n        type: 'katex',\n        params: null,\n        content: content,\n        lines: [startLine, state.line],\n        level: state.level,\n        block: true\n      });\n      return true;\n    };\n    /**\n     * Look for '$' or '$$' spans in Markdown text. Based off of the 'fenced' parser in remarkable.\n     */\n\n\n    var parseInlineKatex = function parseInlineKatex(state, silent) {\n      var start = state.pos;\n      var max = state.posMax;\n      var pos = start; // Unexpected starting character\n\n      if (state.src.charAt(pos) !== delimiter) {\n        return false;\n      }\n\n      ++pos;\n\n      while (pos < max && state.src.charAt(pos) === delimiter) {\n        ++pos;\n      } // Capture the length of the starting delimiter -- closing one must match in size\n\n\n      var marker = state.src.slice(start, pos);\n\n      if (marker.length > 2) {\n        return false;\n      }\n\n      var spanStart = pos;\n      var escapedDepth = 0;\n\n      while (pos < max) {\n        var char = state.src.charAt(pos);\n\n        if (char === '{' && (pos == 0 || state.src.charAt(pos - 1) != backslash)) {\n          escapedDepth += 1;\n        } else if (char === '}' && (pos == 0 || state.src.charAt(pos - 1) != backslash)) {\n          escapedDepth -= 1;\n\n          if (escapedDepth < 0) {\n            return false;\n          }\n        } else if (char === delimiter && escapedDepth === 0) {\n          var matchStart = pos;\n          var matchEnd = pos + 1;\n\n          while (matchEnd < max && state.src.charAt(matchEnd) === delimiter) {\n            ++matchEnd;\n          }\n\n          if (matchEnd - matchStart === marker.length) {\n            if (!silent) {\n              var content = state.src.slice(spanStart, matchStart).replace(/[ \\n]+/g, ' ').trim();\n              state.push({\n                type: 'katex',\n                content: content,\n                block: marker.length > 1,\n                level: state.level\n              });\n            }\n\n            state.pos = matchEnd;\n            return true;\n          }\n        }\n\n        pos += 1;\n      }\n\n      if (!silent) {\n        state.pending += marker;\n      }\n\n      state.pos += marker.length;\n      return true;\n    };\n\n    md.inline.ruler.push('katex', parseInlineKatex, options);\n    md.block.ruler.push('katex', parseBlockKatex, options);\n\n    md.renderer.rules.katex = function (tokens, idx) {\n      return renderKatex(tokens[idx].content, tokens[idx].block);\n    };\n\n    md.renderer.rules.katex.delimiter = delimiter;\n  };\n\n  var remarkableKatex = rkatex;\n  var loading$1;\n\n  var autoload$1 = function autoload$1() {\n    loading$1 || (loading$1 = loadJS([{\n      type: 'script',\n      data: {\n        src: 'https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.js'\n      }\n    }]));\n    return loading$1;\n  };\n\n  var name$2 = 'katex';\n\n  function transform$2(transformHooks) {\n    var renderKatex = function renderKatex(source, displayMode) {\n      var _window = window,\n          katex = _window.katex;\n\n      if (katex) {\n        return katex.renderToString(source, {\n          displayMode: displayMode,\n          throwOnError: false\n        });\n      }\n\n      autoload$1().then(function () {\n        transformHooks.retransform.call();\n      });\n      return source;\n    };\n\n    var enableFeature = function enableFeature() {};\n\n    transformHooks.parser.tap(function (md) {\n      md.use(remarkableKatex);\n\n      md.renderer.rules.katex = function (tokens, idx) {\n        enableFeature();\n        var result = renderKatex(tokens[idx].content, tokens[idx].block);\n        return result;\n      };\n    });\n    transformHooks.transform.tap(function (_, context) {\n      enableFeature = function enableFeature() {\n        context.features[name$2] = true;\n      };\n    });\n    return {\n      styles: [{\n        type: 'stylesheet',\n        data: {\n          href: 'https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.css'\n        }\n      }],\n      scripts: [{\n        type: 'iife',\n        data: {\n          fn: function fn(getMarkmap) {\n            window.WebFontConfig = {\n              custom: {\n                families: ['KaTeX_AMS', 'KaTeX_Caligraphic:n4,n7', 'KaTeX_Fraktur:n4,n7', 'KaTeX_Main:n4,n7,i4,i7', 'KaTeX_Math:i4,i7', 'KaTeX_Script', 'KaTeX_SansSerif:n4,n7,i4', 'KaTeX_Size1', 'KaTeX_Size2', 'KaTeX_Size3', 'KaTeX_Size4', 'KaTeX_Typewriter']\n              },\n              active: function active() {\n                getMarkmap().refreshHook.call();\n              }\n            };\n          },\n          getParams: function getParams(_ref9) {\n            var getMarkmap = _ref9.getMarkmap;\n            return [getMarkmap];\n          }\n        }\n      }, {\n        type: 'script',\n        data: {\n          src: 'https://cdn.jsdelivr.net/npm/webfontloader@1.6.28/webfontloader.js',\n          defer: true\n        }\n      }]\n    };\n  }\n\n  var katex = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    name: name$2,\n    transform: transform$2\n  });\n  var loading;\n\n  var autoload = function autoload() {\n    loading || (loading = loadJS([{\n      type: 'script',\n      data: {\n        src: \"https://cdn.jsdelivr.net/npm/prismjs@\".concat(\"1.25.0\", \"/components/prism-core.min.js\")\n      }\n    }, {\n      type: 'script',\n      data: {\n        src: \"https://cdn.jsdelivr.net/npm/prismjs@\".concat(\"1.25.0\", \"/plugins/autoloader/prism-autoloader.min.js\")\n      }\n    }]));\n    return loading;\n  };\n\n  function loadLanguageAndRefresh(lang, transformHooks) {\n    autoload().then(function () {\n      window.Prism.plugins.autoloader.loadLanguages([lang], function () {\n        transformHooks.retransform.call();\n      });\n    });\n  }\n\n  var name$1 = 'prism';\n\n  function transform$1(transformHooks) {\n    var enableFeature = function enableFeature() {};\n\n    transformHooks.parser.tap(function (md) {\n      md.set({\n        highlight: function highlight(str, lang) {\n          var _Prism$languages;\n\n          enableFeature();\n          var _window2 = window,\n              Prism = _window2.Prism;\n          var grammar = Prism == null ? void 0 : (_Prism$languages = Prism.languages) == null ? void 0 : _Prism$languages[lang];\n\n          if (!grammar) {\n            loadLanguageAndRefresh(lang, transformHooks);\n            return '';\n          }\n\n          return Prism.highlight(str, grammar, lang);\n        }\n      });\n    });\n    transformHooks.transform.tap(function (_, context) {\n      enableFeature = function enableFeature() {\n        context.features[name$1] = true;\n      };\n    });\n    return {\n      styles: [{\n        type: 'stylesheet',\n        data: {\n          href: \"https://cdn.jsdelivr.net/npm/prismjs@\".concat(\"1.25.0\", \"/themes/prism.css\")\n        }\n      }]\n    };\n  }\n\n  var prism = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    name: name$1,\n    transform: transform$1\n  });\n  /*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */\n\n  function isNothing(subject) {\n    return typeof subject === 'undefined' || subject === null;\n  }\n\n  function isObject(subject) {\n    return typeof subject === 'object' && subject !== null;\n  }\n\n  function toArray(sequence) {\n    if (Array.isArray(sequence)) return sequence;else if (isNothing(sequence)) return [];\n    return [sequence];\n  }\n\n  function extend(target, source) {\n    var index, length, key, sourceKeys;\n\n    if (source) {\n      sourceKeys = Object.keys(source);\n\n      for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n        key = sourceKeys[index];\n        target[key] = source[key];\n      }\n    }\n\n    return target;\n  }\n\n  function repeat(string, count) {\n    var result = '',\n        cycle;\n\n    for (cycle = 0; cycle < count; cycle += 1) {\n      result += string;\n    }\n\n    return result;\n  }\n\n  function isNegativeZero(number) {\n    return number === 0 && Number.NEGATIVE_INFINITY === 1 / number;\n  }\n\n  var isNothing_1 = isNothing;\n  var isObject_1 = isObject;\n  var toArray_1 = toArray;\n  var repeat_1 = repeat;\n  var isNegativeZero_1 = isNegativeZero;\n  var extend_1 = extend;\n  var common = {\n    isNothing: isNothing_1,\n    isObject: isObject_1,\n    toArray: toArray_1,\n    repeat: repeat_1,\n    isNegativeZero: isNegativeZero_1,\n    extend: extend_1\n  }; // YAML error class. http://stackoverflow.com/questions/8458984\n\n  function formatError(exception, compact) {\n    var where = '',\n        message = exception.reason || '(unknown reason)';\n    if (!exception.mark) return message;\n\n    if (exception.mark.name) {\n      where += 'in \"' + exception.mark.name + '\" ';\n    }\n\n    where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n    if (!compact && exception.mark.snippet) {\n      where += '\\n\\n' + exception.mark.snippet;\n    }\n\n    return message + ' ' + where;\n  }\n\n  function YAMLException$1(reason, mark) {\n    // Super constructor\n    Error.call(this);\n    this.name = 'YAMLException';\n    this.reason = reason;\n    this.mark = mark;\n    this.message = formatError(this, false); // Include stack trace in error object\n\n    if (Error.captureStackTrace) {\n      // Chrome and NodeJS\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      // FF, IE 10+ and Safari 6+. Fallback for others\n      this.stack = new Error().stack || '';\n    }\n  } // Inherit from Error\n\n\n  YAMLException$1.prototype = Object.create(Error.prototype);\n  YAMLException$1.prototype.constructor = YAMLException$1;\n\n  YAMLException$1.prototype.toString = function toString(compact) {\n    return this.name + ': ' + formatError(this, compact);\n  };\n\n  var exception = YAMLException$1; // get snippet for a single line, respecting maxLength\n\n  function getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n    var head = '';\n    var tail = '';\n    var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n    if (position - lineStart > maxHalfLength) {\n      head = ' ... ';\n      lineStart = position - maxHalfLength + head.length;\n    }\n\n    if (lineEnd - position > maxHalfLength) {\n      tail = ' ...';\n      lineEnd = position + maxHalfLength - tail.length;\n    }\n\n    return {\n      str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n      pos: position - lineStart + head.length // relative position\n\n    };\n  }\n\n  function padStart(string, max) {\n    return common.repeat(' ', max - string.length) + string;\n  }\n\n  function makeSnippet(mark, options) {\n    options = Object.create(options || null);\n    if (!mark.buffer) return null;\n    if (!options.maxLength) options.maxLength = 79;\n    if (typeof options.indent !== 'number') options.indent = 1;\n    if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n    if (typeof options.linesAfter !== 'number') options.linesAfter = 2;\n    var re = /\\r?\\n|\\r|\\0/g;\n    var lineStarts = [0];\n    var lineEnds = [];\n    var match;\n    var foundLineNo = -1;\n\n    while (match = re.exec(mark.buffer)) {\n      lineEnds.push(match.index);\n      lineStarts.push(match.index + match[0].length);\n\n      if (mark.position <= match.index && foundLineNo < 0) {\n        foundLineNo = lineStarts.length - 2;\n      }\n    }\n\n    if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n    var result = '',\n        i,\n        line;\n    var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n    var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n    for (i = 1; i <= options.linesBefore; i++) {\n      if (foundLineNo - i < 0) break;\n      line = getLine(mark.buffer, lineStarts[foundLineNo - i], lineEnds[foundLineNo - i], mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]), maxLineLength);\n      result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) + ' | ' + line.str + '\\n' + result;\n    }\n\n    line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n    result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) + ' | ' + line.str + '\\n';\n    result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n    for (i = 1; i <= options.linesAfter; i++) {\n      if (foundLineNo + i >= lineEnds.length) break;\n      line = getLine(mark.buffer, lineStarts[foundLineNo + i], lineEnds[foundLineNo + i], mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]), maxLineLength);\n      result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) + ' | ' + line.str + '\\n';\n    }\n\n    return result.replace(/\\n$/, '');\n  }\n\n  var snippet = makeSnippet;\n  var TYPE_CONSTRUCTOR_OPTIONS = ['kind', 'multi', 'resolve', 'construct', 'instanceOf', 'predicate', 'represent', 'representName', 'defaultStyle', 'styleAliases'];\n  var YAML_NODE_KINDS = ['scalar', 'sequence', 'mapping'];\n\n  function compileStyleAliases(map) {\n    var result = {};\n\n    if (map !== null) {\n      Object.keys(map).forEach(function (style) {\n        map[style].forEach(function (alias) {\n          result[String(alias)] = style;\n        });\n      });\n    }\n\n    return result;\n  }\n\n  function Type$1(tag, options) {\n    options = options || {};\n    Object.keys(options).forEach(function (name) {\n      if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n        throw new exception('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n      }\n    }); // TODO: Add tag format check.\n\n    this.options = options; // keep original options in case user wants to extend this type later\n\n    this.tag = tag;\n    this.kind = options['kind'] || null;\n\n    this.resolve = options['resolve'] || function () {\n      return true;\n    };\n\n    this.construct = options['construct'] || function (data) {\n      return data;\n    };\n\n    this.instanceOf = options['instanceOf'] || null;\n    this.predicate = options['predicate'] || null;\n    this.represent = options['represent'] || null;\n    this.representName = options['representName'] || null;\n    this.defaultStyle = options['defaultStyle'] || null;\n    this.multi = options['multi'] || false;\n    this.styleAliases = compileStyleAliases(options['styleAliases'] || null);\n\n    if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n      throw new exception('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n    }\n  }\n\n  var type = Type$1;\n  /*eslint-disable max-len*/\n\n  function compileList(schema, name) {\n    var result = [];\n    schema[name].forEach(function (currentType) {\n      var newIndex = result.length;\n      result.forEach(function (previousType, previousIndex) {\n        if (previousType.tag === currentType.tag && previousType.kind === currentType.kind && previousType.multi === currentType.multi) {\n          newIndex = previousIndex;\n        }\n      });\n      result[newIndex] = currentType;\n    });\n    return result;\n  }\n\n  function\n    /* lists... */\n  compileMap() {\n    var result = {\n      scalar: {},\n      sequence: {},\n      mapping: {},\n      fallback: {},\n      multi: {\n        scalar: [],\n        sequence: [],\n        mapping: [],\n        fallback: []\n      }\n    },\n        index,\n        length;\n\n    function collectType(type) {\n      if (type.multi) {\n        result.multi[type.kind].push(type);\n        result.multi['fallback'].push(type);\n      } else {\n        result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n      }\n    }\n\n    for (index = 0, length = arguments.length; index < length; index += 1) {\n      arguments[index].forEach(collectType);\n    }\n\n    return result;\n  }\n\n  function Schema$1(definition) {\n    return this.extend(definition);\n  }\n\n  Schema$1.prototype.extend = function extend(definition) {\n    var implicit = [];\n    var explicit = [];\n\n    if (definition instanceof type) {\n      // Schema.extend(type)\n      explicit.push(definition);\n    } else if (Array.isArray(definition)) {\n      // Schema.extend([ type1, type2, ... ])\n      explicit = explicit.concat(definition);\n    } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n      // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n      if (definition.implicit) implicit = implicit.concat(definition.implicit);\n      if (definition.explicit) explicit = explicit.concat(definition.explicit);\n    } else {\n      throw new exception('Schema.extend argument should be a Type, [ Type ], ' + 'or a schema definition ({ implicit: [...], explicit: [...] })');\n    }\n\n    implicit.forEach(function (type$1) {\n      if (!(type$1 instanceof type)) {\n        throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n      }\n\n      if (type$1.loadKind && type$1.loadKind !== 'scalar') {\n        throw new exception('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n      }\n\n      if (type$1.multi) {\n        throw new exception('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n      }\n    });\n    explicit.forEach(function (type$1) {\n      if (!(type$1 instanceof type)) {\n        throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n      }\n    });\n    var result = Object.create(Schema$1.prototype);\n    result.implicit = (this.implicit || []).concat(implicit);\n    result.explicit = (this.explicit || []).concat(explicit);\n    result.compiledImplicit = compileList(result, 'implicit');\n    result.compiledExplicit = compileList(result, 'explicit');\n    result.compiledTypeMap = compileMap(result.compiledImplicit, result.compiledExplicit);\n    return result;\n  };\n\n  var schema = Schema$1;\n  var str = new type('tag:yaml.org,2002:str', {\n    kind: 'scalar',\n    construct: function construct(data) {\n      return data !== null ? data : '';\n    }\n  });\n  var seq = new type('tag:yaml.org,2002:seq', {\n    kind: 'sequence',\n    construct: function construct(data) {\n      return data !== null ? data : [];\n    }\n  });\n  var map = new type('tag:yaml.org,2002:map', {\n    kind: 'mapping',\n    construct: function construct(data) {\n      return data !== null ? data : {};\n    }\n  });\n  var failsafe = new schema({\n    explicit: [str, seq, map]\n  });\n\n  function resolveYamlNull(data) {\n    if (data === null) return true;\n    var max = data.length;\n    return max === 1 && data === '~' || max === 4 && (data === 'null' || data === 'Null' || data === 'NULL');\n  }\n\n  function constructYamlNull() {\n    return null;\n  }\n\n  function isNull(object) {\n    return object === null;\n  }\n\n  var _null = new type('tag:yaml.org,2002:null', {\n    kind: 'scalar',\n    resolve: resolveYamlNull,\n    construct: constructYamlNull,\n    predicate: isNull,\n    represent: {\n      canonical: function canonical() {\n        return '~';\n      },\n      lowercase: function lowercase() {\n        return 'null';\n      },\n      uppercase: function uppercase() {\n        return 'NULL';\n      },\n      camelcase: function camelcase() {\n        return 'Null';\n      },\n      empty: function empty() {\n        return '';\n      }\n    },\n    defaultStyle: 'lowercase'\n  });\n\n  function resolveYamlBoolean(data) {\n    if (data === null) return false;\n    var max = data.length;\n    return max === 4 && (data === 'true' || data === 'True' || data === 'TRUE') || max === 5 && (data === 'false' || data === 'False' || data === 'FALSE');\n  }\n\n  function constructYamlBoolean(data) {\n    return data === 'true' || data === 'True' || data === 'TRUE';\n  }\n\n  function isBoolean(object) {\n    return Object.prototype.toString.call(object) === '[object Boolean]';\n  }\n\n  var bool = new type('tag:yaml.org,2002:bool', {\n    kind: 'scalar',\n    resolve: resolveYamlBoolean,\n    construct: constructYamlBoolean,\n    predicate: isBoolean,\n    represent: {\n      lowercase: function lowercase(object) {\n        return object ? 'true' : 'false';\n      },\n      uppercase: function uppercase(object) {\n        return object ? 'TRUE' : 'FALSE';\n      },\n      camelcase: function camelcase(object) {\n        return object ? 'True' : 'False';\n      }\n    },\n    defaultStyle: 'lowercase'\n  });\n\n  function isHexCode(c) {\n    return 0x30\n    /* 0 */\n    <= c && c <= 0x39\n    /* 9 */\n    || 0x41\n    /* A */\n    <= c && c <= 0x46\n    /* F */\n    || 0x61\n    /* a */\n    <= c && c <= 0x66\n    /* f */\n    ;\n  }\n\n  function isOctCode(c) {\n    return 0x30\n    /* 0 */\n    <= c && c <= 0x37\n    /* 7 */\n    ;\n  }\n\n  function isDecCode(c) {\n    return 0x30\n    /* 0 */\n    <= c && c <= 0x39\n    /* 9 */\n    ;\n  }\n\n  function resolveYamlInteger(data) {\n    if (data === null) return false;\n    var max = data.length,\n        index = 0,\n        hasDigits = false,\n        ch;\n    if (!max) return false;\n    ch = data[index]; // sign\n\n    if (ch === '-' || ch === '+') {\n      ch = data[++index];\n    }\n\n    if (ch === '0') {\n      // 0\n      if (index + 1 === max) return true;\n      ch = data[++index]; // base 2, base 8, base 16\n\n      if (ch === 'b') {\n        // base 2\n        index++;\n\n        for (; index < max; index++) {\n          ch = data[index];\n          if (ch === '_') continue;\n          if (ch !== '0' && ch !== '1') return false;\n          hasDigits = true;\n        }\n\n        return hasDigits && ch !== '_';\n      }\n\n      if (ch === 'x') {\n        // base 16\n        index++;\n\n        for (; index < max; index++) {\n          ch = data[index];\n          if (ch === '_') continue;\n          if (!isHexCode(data.charCodeAt(index))) return false;\n          hasDigits = true;\n        }\n\n        return hasDigits && ch !== '_';\n      }\n\n      if (ch === 'o') {\n        // base 8\n        index++;\n\n        for (; index < max; index++) {\n          ch = data[index];\n          if (ch === '_') continue;\n          if (!isOctCode(data.charCodeAt(index))) return false;\n          hasDigits = true;\n        }\n\n        return hasDigits && ch !== '_';\n      }\n    } // base 10 (except 0)\n    // value should not start with `_`;\n\n\n    if (ch === '_') return false;\n\n    for (; index < max; index++) {\n      ch = data[index];\n      if (ch === '_') continue;\n\n      if (!isDecCode(data.charCodeAt(index))) {\n        return false;\n      }\n\n      hasDigits = true;\n    } // Should have digits and should not end with `_`\n\n\n    if (!hasDigits || ch === '_') return false;\n    return true;\n  }\n\n  function constructYamlInteger(data) {\n    var value = data,\n        sign = 1,\n        ch;\n\n    if (value.indexOf('_') !== -1) {\n      value = value.replace(/_/g, '');\n    }\n\n    ch = value[0];\n\n    if (ch === '-' || ch === '+') {\n      if (ch === '-') sign = -1;\n      value = value.slice(1);\n      ch = value[0];\n    }\n\n    if (value === '0') return 0;\n\n    if (ch === '0') {\n      if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n      if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n      if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n    }\n\n    return sign * parseInt(value, 10);\n  }\n\n  function isInteger(object) {\n    return Object.prototype.toString.call(object) === '[object Number]' && object % 1 === 0 && !common.isNegativeZero(object);\n  }\n\n  var int = new type('tag:yaml.org,2002:int', {\n    kind: 'scalar',\n    resolve: resolveYamlInteger,\n    construct: constructYamlInteger,\n    predicate: isInteger,\n    represent: {\n      binary: function binary(obj) {\n        return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1);\n      },\n      octal: function octal(obj) {\n        return obj >= 0 ? '0o' + obj.toString(8) : '-0o' + obj.toString(8).slice(1);\n      },\n      decimal: function decimal(obj) {\n        return obj.toString(10);\n      },\n\n      /* eslint-disable max-len */\n      hexadecimal: function hexadecimal(obj) {\n        return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() : '-0x' + obj.toString(16).toUpperCase().slice(1);\n      }\n    },\n    defaultStyle: 'decimal',\n    styleAliases: {\n      binary: [2, 'bin'],\n      octal: [8, 'oct'],\n      decimal: [10, 'dec'],\n      hexadecimal: [16, 'hex']\n    }\n  });\n  var YAML_FLOAT_PATTERN = new RegExp( // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' + // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' + // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' + // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\n  function resolveYamlFloat(data) {\n    if (data === null) return false;\n\n    if (!YAML_FLOAT_PATTERN.test(data) || // Quick hack to not allow integers end with `_`\n    // Probably should update regexp & check speed\n    data[data.length - 1] === '_') {\n      return false;\n    }\n\n    return true;\n  }\n\n  function constructYamlFloat(data) {\n    var value, sign;\n    value = data.replace(/_/g, '').toLowerCase();\n    sign = value[0] === '-' ? -1 : 1;\n\n    if ('+-'.indexOf(value[0]) >= 0) {\n      value = value.slice(1);\n    }\n\n    if (value === '.inf') {\n      return sign === 1 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n    } else if (value === '.nan') {\n      return NaN;\n    }\n\n    return sign * parseFloat(value, 10);\n  }\n\n  var SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\n  function representYamlFloat(object, style) {\n    var res;\n\n    if (isNaN(object)) {\n      switch (style) {\n        case 'lowercase':\n          return '.nan';\n\n        case 'uppercase':\n          return '.NAN';\n\n        case 'camelcase':\n          return '.NaN';\n      }\n    } else if (Number.POSITIVE_INFINITY === object) {\n      switch (style) {\n        case 'lowercase':\n          return '.inf';\n\n        case 'uppercase':\n          return '.INF';\n\n        case 'camelcase':\n          return '.Inf';\n      }\n    } else if (Number.NEGATIVE_INFINITY === object) {\n      switch (style) {\n        case 'lowercase':\n          return '-.inf';\n\n        case 'uppercase':\n          return '-.INF';\n\n        case 'camelcase':\n          return '-.Inf';\n      }\n    } else if (common.isNegativeZero(object)) {\n      return '-0.0';\n    }\n\n    res = object.toString(10); // JS stringifier can build scientific format without dots: 5e-100,\n    // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n    return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n  }\n\n  function isFloat(object) {\n    return Object.prototype.toString.call(object) === '[object Number]' && (object % 1 !== 0 || common.isNegativeZero(object));\n  }\n\n  var float = new type('tag:yaml.org,2002:float', {\n    kind: 'scalar',\n    resolve: resolveYamlFloat,\n    construct: constructYamlFloat,\n    predicate: isFloat,\n    represent: representYamlFloat,\n    defaultStyle: 'lowercase'\n  });\n  var json = failsafe.extend({\n    implicit: [_null, bool, int, float]\n  });\n  var core = json;\n  var YAML_DATE_REGEXP = new RegExp('^([0-9][0-9][0-9][0-9])' + // [1] year\n  '-([0-9][0-9])' + // [2] month\n  '-([0-9][0-9])$'); // [3] day\n\n  var YAML_TIMESTAMP_REGEXP = new RegExp('^([0-9][0-9][0-9][0-9])' + // [1] year\n  '-([0-9][0-9]?)' + // [2] month\n  '-([0-9][0-9]?)' + // [3] day\n  '(?:[Tt]|[ \\\\t]+)' + // ...\n  '([0-9][0-9]?)' + // [4] hour\n  ':([0-9][0-9])' + // [5] minute\n  ':([0-9][0-9])' + // [6] second\n  '(?:\\\\.([0-9]*))?' + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$'); // [11] tz_minute\n\n  function resolveYamlTimestamp(data) {\n    if (data === null) return false;\n    if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n    if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n    return false;\n  }\n\n  function constructYamlTimestamp(data) {\n    var match,\n        year,\n        month,\n        day,\n        hour,\n        minute,\n        second,\n        fraction = 0,\n        delta = null,\n        tz_hour,\n        tz_minute,\n        date;\n    match = YAML_DATE_REGEXP.exec(data);\n    if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n    if (match === null) throw new Error('Date resolve error'); // match: [1] year [2] month [3] day\n\n    year = +match[1];\n    month = +match[2] - 1; // JS month starts with 0\n\n    day = +match[3];\n\n    if (!match[4]) {\n      // no hour\n      return new Date(Date.UTC(year, month, day));\n    } // match: [4] hour [5] minute [6] second [7] fraction\n\n\n    hour = +match[4];\n    minute = +match[5];\n    second = +match[6];\n\n    if (match[7]) {\n      fraction = match[7].slice(0, 3);\n\n      while (fraction.length < 3) {\n        // milli-seconds\n        fraction += '0';\n      }\n\n      fraction = +fraction;\n    } // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n\n    if (match[9]) {\n      tz_hour = +match[10];\n      tz_minute = +(match[11] || 0);\n      delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n\n      if (match[9] === '-') delta = -delta;\n    }\n\n    date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n    if (delta) date.setTime(date.getTime() - delta);\n    return date;\n  }\n\n  function representYamlTimestamp(object\n  /*, style*/\n  ) {\n    return object.toISOString();\n  }\n\n  var timestamp = new type('tag:yaml.org,2002:timestamp', {\n    kind: 'scalar',\n    resolve: resolveYamlTimestamp,\n    construct: constructYamlTimestamp,\n    instanceOf: Date,\n    represent: representYamlTimestamp\n  });\n\n  function resolveYamlMerge(data) {\n    return data === '<<' || data === null;\n  }\n\n  var merge = new type('tag:yaml.org,2002:merge', {\n    kind: 'scalar',\n    resolve: resolveYamlMerge\n  });\n  /*eslint-disable no-bitwise*/\n  // [ 64, 65, 66 ] -> [ padding, CR, LF ]\n\n  var BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n  function resolveYamlBinary(data) {\n    if (data === null) return false;\n    var code,\n        idx,\n        bitlen = 0,\n        max = data.length,\n        map = BASE64_MAP; // Convert one by one.\n\n    for (idx = 0; idx < max; idx++) {\n      code = map.indexOf(data.charAt(idx)); // Skip CR/LF\n\n      if (code > 64) continue; // Fail on illegal characters\n\n      if (code < 0) return false;\n      bitlen += 6;\n    } // If there are any bits left, source was corrupted\n\n\n    return bitlen % 8 === 0;\n  }\n\n  function constructYamlBinary(data) {\n    var idx,\n        tailbits,\n        input = data.replace(/[\\r\\n=]/g, ''),\n        // remove CR/LF & padding to simplify scan\n    max = input.length,\n        map = BASE64_MAP,\n        bits = 0,\n        result = []; // Collect by 6*4 bits (3 bytes)\n\n    for (idx = 0; idx < max; idx++) {\n      if (idx % 4 === 0 && idx) {\n        result.push(bits >> 16 & 0xFF);\n        result.push(bits >> 8 & 0xFF);\n        result.push(bits & 0xFF);\n      }\n\n      bits = bits << 6 | map.indexOf(input.charAt(idx));\n    } // Dump tail\n\n\n    tailbits = max % 4 * 6;\n\n    if (tailbits === 0) {\n      result.push(bits >> 16 & 0xFF);\n      result.push(bits >> 8 & 0xFF);\n      result.push(bits & 0xFF);\n    } else if (tailbits === 18) {\n      result.push(bits >> 10 & 0xFF);\n      result.push(bits >> 2 & 0xFF);\n    } else if (tailbits === 12) {\n      result.push(bits >> 4 & 0xFF);\n    }\n\n    return new Uint8Array(result);\n  }\n\n  function representYamlBinary(object\n  /*, style*/\n  ) {\n    var result = '',\n        bits = 0,\n        idx,\n        tail,\n        max = object.length,\n        map = BASE64_MAP; // Convert every three bytes to 4 ASCII characters.\n\n    for (idx = 0; idx < max; idx++) {\n      if (idx % 3 === 0 && idx) {\n        result += map[bits >> 18 & 0x3F];\n        result += map[bits >> 12 & 0x3F];\n        result += map[bits >> 6 & 0x3F];\n        result += map[bits & 0x3F];\n      }\n\n      bits = (bits << 8) + object[idx];\n    } // Dump tail\n\n\n    tail = max % 3;\n\n    if (tail === 0) {\n      result += map[bits >> 18 & 0x3F];\n      result += map[bits >> 12 & 0x3F];\n      result += map[bits >> 6 & 0x3F];\n      result += map[bits & 0x3F];\n    } else if (tail === 2) {\n      result += map[bits >> 10 & 0x3F];\n      result += map[bits >> 4 & 0x3F];\n      result += map[bits << 2 & 0x3F];\n      result += map[64];\n    } else if (tail === 1) {\n      result += map[bits >> 2 & 0x3F];\n      result += map[bits << 4 & 0x3F];\n      result += map[64];\n      result += map[64];\n    }\n\n    return result;\n  }\n\n  function isBinary(obj) {\n    return Object.prototype.toString.call(obj) === '[object Uint8Array]';\n  }\n\n  var binary = new type('tag:yaml.org,2002:binary', {\n    kind: 'scalar',\n    resolve: resolveYamlBinary,\n    construct: constructYamlBinary,\n    predicate: isBinary,\n    represent: representYamlBinary\n  });\n  var _hasOwnProperty$3 = Object.prototype.hasOwnProperty;\n  var _toString$2 = Object.prototype.toString;\n\n  function resolveYamlOmap(data) {\n    if (data === null) return true;\n    var objectKeys = [],\n        index,\n        length,\n        pair,\n        pairKey,\n        pairHasKey,\n        object = data;\n\n    for (index = 0, length = object.length; index < length; index += 1) {\n      pair = object[index];\n      pairHasKey = false;\n      if (_toString$2.call(pair) !== '[object Object]') return false;\n\n      for (pairKey in pair) {\n        if (_hasOwnProperty$3.call(pair, pairKey)) {\n          if (!pairHasKey) pairHasKey = true;else return false;\n        }\n      }\n\n      if (!pairHasKey) return false;\n      if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);else return false;\n    }\n\n    return true;\n  }\n\n  function constructYamlOmap(data) {\n    return data !== null ? data : [];\n  }\n\n  var omap = new type('tag:yaml.org,2002:omap', {\n    kind: 'sequence',\n    resolve: resolveYamlOmap,\n    construct: constructYamlOmap\n  });\n  var _toString$1 = Object.prototype.toString;\n\n  function resolveYamlPairs(data) {\n    if (data === null) return true;\n    var index,\n        length,\n        pair,\n        keys,\n        result,\n        object = data;\n    result = new Array(object.length);\n\n    for (index = 0, length = object.length; index < length; index += 1) {\n      pair = object[index];\n      if (_toString$1.call(pair) !== '[object Object]') return false;\n      keys = Object.keys(pair);\n      if (keys.length !== 1) return false;\n      result[index] = [keys[0], pair[keys[0]]];\n    }\n\n    return true;\n  }\n\n  function constructYamlPairs(data) {\n    if (data === null) return [];\n    var index,\n        length,\n        pair,\n        keys,\n        result,\n        object = data;\n    result = new Array(object.length);\n\n    for (index = 0, length = object.length; index < length; index += 1) {\n      pair = object[index];\n      keys = Object.keys(pair);\n      result[index] = [keys[0], pair[keys[0]]];\n    }\n\n    return result;\n  }\n\n  var pairs = new type('tag:yaml.org,2002:pairs', {\n    kind: 'sequence',\n    resolve: resolveYamlPairs,\n    construct: constructYamlPairs\n  });\n  var _hasOwnProperty$2 = Object.prototype.hasOwnProperty;\n\n  function resolveYamlSet(data) {\n    if (data === null) return true;\n    var key,\n        object = data;\n\n    for (key in object) {\n      if (_hasOwnProperty$2.call(object, key)) {\n        if (object[key] !== null) return false;\n      }\n    }\n\n    return true;\n  }\n\n  function constructYamlSet(data) {\n    return data !== null ? data : {};\n  }\n\n  var set = new type('tag:yaml.org,2002:set', {\n    kind: 'mapping',\n    resolve: resolveYamlSet,\n    construct: constructYamlSet\n  });\n\n  var _default = core.extend({\n    implicit: [timestamp, merge],\n    explicit: [binary, omap, pairs, set]\n  });\n  /*eslint-disable max-len,no-use-before-define*/\n\n\n  var _hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n  var CONTEXT_FLOW_IN = 1;\n  var CONTEXT_FLOW_OUT = 2;\n  var CONTEXT_BLOCK_IN = 3;\n  var CONTEXT_BLOCK_OUT = 4;\n  var CHOMPING_CLIP = 1;\n  var CHOMPING_STRIP = 2;\n  var CHOMPING_KEEP = 3;\n  var PATTERN_NON_PRINTABLE = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n  var PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\n  var PATTERN_FLOW_INDICATORS = /[,\\[\\]\\{\\}]/;\n  var PATTERN_TAG_HANDLE = /^(?:!|!!|![a-z\\-]+!)$/i;\n  var PATTERN_TAG_URI = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n  function _class(obj) {\n    return Object.prototype.toString.call(obj);\n  }\n\n  function is_EOL(c) {\n    return c === 0x0A\n    /* LF */\n    || c === 0x0D\n    /* CR */\n    ;\n  }\n\n  function is_WHITE_SPACE(c) {\n    return c === 0x09\n    /* Tab */\n    || c === 0x20\n    /* Space */\n    ;\n  }\n\n  function is_WS_OR_EOL(c) {\n    return c === 0x09\n    /* Tab */\n    || c === 0x20\n    /* Space */\n    || c === 0x0A\n    /* LF */\n    || c === 0x0D\n    /* CR */\n    ;\n  }\n\n  function is_FLOW_INDICATOR(c) {\n    return c === 0x2C\n    /* , */\n    || c === 0x5B\n    /* [ */\n    || c === 0x5D\n    /* ] */\n    || c === 0x7B\n    /* { */\n    || c === 0x7D\n    /* } */\n    ;\n  }\n\n  function fromHexCode(c) {\n    var lc;\n\n    if (0x30\n    /* 0 */\n    <= c && c <= 0x39\n    /* 9 */\n    ) {\n      return c - 0x30;\n    }\n    /*eslint-disable no-bitwise*/\n\n\n    lc = c | 0x20;\n\n    if (0x61\n    /* a */\n    <= lc && lc <= 0x66\n    /* f */\n    ) {\n      return lc - 0x61 + 10;\n    }\n\n    return -1;\n  }\n\n  function escapedHexLen(c) {\n    if (c === 0x78\n    /* x */\n    ) {\n      return 2;\n    }\n\n    if (c === 0x75\n    /* u */\n    ) {\n      return 4;\n    }\n\n    if (c === 0x55\n    /* U */\n    ) {\n      return 8;\n    }\n\n    return 0;\n  }\n\n  function fromDecimalCode(c) {\n    if (0x30\n    /* 0 */\n    <= c && c <= 0x39\n    /* 9 */\n    ) {\n      return c - 0x30;\n    }\n\n    return -1;\n  }\n\n  function simpleEscapeSequence(c) {\n    /* eslint-disable indent */\n    return c === 0x30\n    /* 0 */\n    ? '\\x00' : c === 0x61\n    /* a */\n    ? '\\x07' : c === 0x62\n    /* b */\n    ? '\\x08' : c === 0x74\n    /* t */\n    ? '\\x09' : c === 0x09\n    /* Tab */\n    ? '\\x09' : c === 0x6E\n    /* n */\n    ? '\\x0A' : c === 0x76\n    /* v */\n    ? '\\x0B' : c === 0x66\n    /* f */\n    ? '\\x0C' : c === 0x72\n    /* r */\n    ? '\\x0D' : c === 0x65\n    /* e */\n    ? '\\x1B' : c === 0x20\n    /* Space */\n    ? ' ' : c === 0x22\n    /* \" */\n    ? '\\x22' : c === 0x2F\n    /* / */\n    ? '/' : c === 0x5C\n    /* \\ */\n    ? '\\x5C' : c === 0x4E\n    /* N */\n    ? '\\x85' : c === 0x5F\n    /* _ */\n    ? '\\xA0' : c === 0x4C\n    /* L */\n    ? \"\\u2028\" : c === 0x50\n    /* P */\n    ? \"\\u2029\" : '';\n  }\n\n  function charFromCodepoint(c) {\n    if (c <= 0xFFFF) {\n      return String.fromCharCode(c);\n    } // Encode UTF-16 surrogate pair\n    // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n\n\n    return String.fromCharCode((c - 0x010000 >> 10) + 0xD800, (c - 0x010000 & 0x03FF) + 0xDC00);\n  }\n\n  var simpleEscapeCheck = new Array(256); // integer, for fast access\n\n  var simpleEscapeMap = new Array(256);\n\n  for (var i = 0; i < 256; i++) {\n    simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n    simpleEscapeMap[i] = simpleEscapeSequence(i);\n  }\n\n  function State$1(input, options) {\n    this.input = input;\n    this.filename = options['filename'] || null;\n    this.schema = options['schema'] || _default;\n    this.onWarning = options['onWarning'] || null; // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n    // if such documents have no explicit %YAML directive\n\n    this.legacy = options['legacy'] || false;\n    this.json = options['json'] || false;\n    this.listener = options['listener'] || null;\n    this.implicitTypes = this.schema.compiledImplicit;\n    this.typeMap = this.schema.compiledTypeMap;\n    this.length = input.length;\n    this.position = 0;\n    this.line = 0;\n    this.lineStart = 0;\n    this.lineIndent = 0; // position of first leading tab in the current line,\n    // used to make sure there are no tabs in the indentation\n\n    this.firstTabInLine = -1;\n    this.documents = [];\n    /*\n    this.version;\n    this.checkLineBreaks;\n    this.tagMap;\n    this.anchorMap;\n    this.tag;\n    this.anchor;\n    this.kind;\n    this.result;*/\n  }\n\n  function generateError(state, message) {\n    var mark = {\n      name: state.filename,\n      buffer: state.input.slice(0, -1),\n      // omit trailing \\0\n      position: state.position,\n      line: state.line,\n      column: state.position - state.lineStart\n    };\n    mark.snippet = snippet(mark);\n    return new exception(message, mark);\n  }\n\n  function throwError(state, message) {\n    throw generateError(state, message);\n  }\n\n  function throwWarning(state, message) {\n    if (state.onWarning) {\n      state.onWarning.call(null, generateError(state, message));\n    }\n  }\n\n  var directiveHandlers = {\n    YAML: function handleYamlDirective(state, name, args) {\n      var match, major, minor;\n\n      if (state.version !== null) {\n        throwError(state, 'duplication of %YAML directive');\n      }\n\n      if (args.length !== 1) {\n        throwError(state, 'YAML directive accepts exactly one argument');\n      }\n\n      match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n      if (match === null) {\n        throwError(state, 'ill-formed argument of the YAML directive');\n      }\n\n      major = parseInt(match[1], 10);\n      minor = parseInt(match[2], 10);\n\n      if (major !== 1) {\n        throwError(state, 'unacceptable YAML version of the document');\n      }\n\n      state.version = args[0];\n      state.checkLineBreaks = minor < 2;\n\n      if (minor !== 1 && minor !== 2) {\n        throwWarning(state, 'unsupported YAML version of the document');\n      }\n    },\n    TAG: function handleTagDirective(state, name, args) {\n      var handle, prefix;\n\n      if (args.length !== 2) {\n        throwError(state, 'TAG directive accepts exactly two arguments');\n      }\n\n      handle = args[0];\n      prefix = args[1];\n\n      if (!PATTERN_TAG_HANDLE.test(handle)) {\n        throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n      }\n\n      if (_hasOwnProperty$1.call(state.tagMap, handle)) {\n        throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n      }\n\n      if (!PATTERN_TAG_URI.test(prefix)) {\n        throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n      }\n\n      try {\n        prefix = decodeURIComponent(prefix);\n      } catch (err) {\n        throwError(state, 'tag prefix is malformed: ' + prefix);\n      }\n\n      state.tagMap[handle] = prefix;\n    }\n  };\n\n  function captureSegment(state, start, end, checkJson) {\n    var _position, _length, _character, _result;\n\n    if (start < end) {\n      _result = state.input.slice(start, end);\n\n      if (checkJson) {\n        for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n          _character = _result.charCodeAt(_position);\n\n          if (!(_character === 0x09 || 0x20 <= _character && _character <= 0x10FFFF)) {\n            throwError(state, 'expected valid JSON character');\n          }\n        }\n      } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n        throwError(state, 'the stream contains non-printable characters');\n      }\n\n      state.result += _result;\n    }\n  }\n\n  function mergeMappings(state, destination, source, overridableKeys) {\n    var sourceKeys, key, index, quantity;\n\n    if (!common.isObject(source)) {\n      throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n    }\n\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n      key = sourceKeys[index];\n\n      if (!_hasOwnProperty$1.call(destination, key)) {\n        destination[key] = source[key];\n        overridableKeys[key] = true;\n      }\n    }\n  }\n\n  function storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, startLine, startLineStart, startPos) {\n    var index, quantity; // The output is a plain object here, so keys can only be strings.\n    // We need to convert keyNode to a string, but doing so can hang the process\n    // (deeply nested arrays that explode exponentially using aliases).\n\n    if (Array.isArray(keyNode)) {\n      keyNode = Array.prototype.slice.call(keyNode);\n\n      for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n        if (Array.isArray(keyNode[index])) {\n          throwError(state, 'nested arrays are not supported inside keys');\n        }\n\n        if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n          keyNode[index] = '[object Object]';\n        }\n      }\n    } // Avoid code execution in load() via toString property\n    // (still use its own toString for arrays, timestamps,\n    // and whatever user schema extensions happen to have @@toStringTag)\n\n\n    if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n      keyNode = '[object Object]';\n    }\n\n    keyNode = String(keyNode);\n\n    if (_result === null) {\n      _result = {};\n    }\n\n    if (keyTag === 'tag:yaml.org,2002:merge') {\n      if (Array.isArray(valueNode)) {\n        for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n          mergeMappings(state, _result, valueNode[index], overridableKeys);\n        }\n      } else {\n        mergeMappings(state, _result, valueNode, overridableKeys);\n      }\n    } else {\n      if (!state.json && !_hasOwnProperty$1.call(overridableKeys, keyNode) && _hasOwnProperty$1.call(_result, keyNode)) {\n        state.line = startLine || state.line;\n        state.lineStart = startLineStart || state.lineStart;\n        state.position = startPos || state.position;\n        throwError(state, 'duplicated mapping key');\n      } // used for this specific key only because Object.defineProperty is slow\n\n\n      if (keyNode === '__proto__') {\n        Object.defineProperty(_result, keyNode, {\n          configurable: true,\n          enumerable: true,\n          writable: true,\n          value: valueNode\n        });\n      } else {\n        _result[keyNode] = valueNode;\n      }\n\n      delete overridableKeys[keyNode];\n    }\n\n    return _result;\n  }\n\n  function readLineBreak(state) {\n    var ch;\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x0A\n    /* LF */\n    ) {\n      state.position++;\n    } else if (ch === 0x0D\n    /* CR */\n    ) {\n      state.position++;\n\n      if (state.input.charCodeAt(state.position) === 0x0A\n      /* LF */\n      ) {\n        state.position++;\n      }\n    } else {\n      throwError(state, 'a line break is expected');\n    }\n\n    state.line += 1;\n    state.lineStart = state.position;\n    state.firstTabInLine = -1;\n  }\n\n  function skipSeparationSpace(state, allowComments, checkIndent) {\n    var lineBreaks = 0,\n        ch = state.input.charCodeAt(state.position);\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        if (ch === 0x09\n        /* Tab */\n        && state.firstTabInLine === -1) {\n          state.firstTabInLine = state.position;\n        }\n\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (allowComments && ch === 0x23\n      /* # */\n      ) {\n        do {\n          ch = state.input.charCodeAt(++state.position);\n        } while (ch !== 0x0A\n        /* LF */\n        && ch !== 0x0D\n        /* CR */\n        && ch !== 0);\n      }\n\n      if (is_EOL(ch)) {\n        readLineBreak(state);\n        ch = state.input.charCodeAt(state.position);\n        lineBreaks++;\n        state.lineIndent = 0;\n\n        while (ch === 0x20\n        /* Space */\n        ) {\n          state.lineIndent++;\n          ch = state.input.charCodeAt(++state.position);\n        }\n      } else {\n        break;\n      }\n    }\n\n    if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n      throwWarning(state, 'deficient indentation');\n    }\n\n    return lineBreaks;\n  }\n\n  function testDocumentSeparator(state) {\n    var _position = state.position,\n        ch;\n    ch = state.input.charCodeAt(_position); // Condition state.position === state.lineStart is tested\n    // in parent on each call, for efficiency. No needs to test here again.\n\n    if ((ch === 0x2D\n    /* - */\n    || ch === 0x2E\n    /* . */\n    ) && ch === state.input.charCodeAt(_position + 1) && ch === state.input.charCodeAt(_position + 2)) {\n      _position += 3;\n      ch = state.input.charCodeAt(_position);\n\n      if (ch === 0 || is_WS_OR_EOL(ch)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function writeFoldedLines(state, count) {\n    if (count === 1) {\n      state.result += ' ';\n    } else if (count > 1) {\n      state.result += common.repeat('\\n', count - 1);\n    }\n  }\n\n  function readPlainScalar(state, nodeIndent, withinFlowCollection) {\n    var preceding,\n        following,\n        captureStart,\n        captureEnd,\n        hasPendingContent,\n        _line,\n        _lineStart,\n        _lineIndent,\n        _kind = state.kind,\n        _result = state.result,\n        ch;\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (is_WS_OR_EOL(ch) || is_FLOW_INDICATOR(ch) || ch === 0x23\n    /* # */\n    || ch === 0x26\n    /* & */\n    || ch === 0x2A\n    /* * */\n    || ch === 0x21\n    /* ! */\n    || ch === 0x7C\n    /* | */\n    || ch === 0x3E\n    /* > */\n    || ch === 0x27\n    /* ' */\n    || ch === 0x22\n    /* \" */\n    || ch === 0x25\n    /* % */\n    || ch === 0x40\n    /* @ */\n    || ch === 0x60\n    /* ` */\n    ) {\n      return false;\n    }\n\n    if (ch === 0x3F\n    /* ? */\n    || ch === 0x2D\n    /* - */\n    ) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) || withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        return false;\n      }\n    }\n\n    state.kind = 'scalar';\n    state.result = '';\n    captureStart = captureEnd = state.position;\n    hasPendingContent = false;\n\n    while (ch !== 0) {\n      if (ch === 0x3A\n      /* : */\n      ) {\n        following = state.input.charCodeAt(state.position + 1);\n\n        if (is_WS_OR_EOL(following) || withinFlowCollection && is_FLOW_INDICATOR(following)) {\n          break;\n        }\n      } else if (ch === 0x23\n      /* # */\n      ) {\n        preceding = state.input.charCodeAt(state.position - 1);\n\n        if (is_WS_OR_EOL(preceding)) {\n          break;\n        }\n      } else if (state.position === state.lineStart && testDocumentSeparator(state) || withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n        break;\n      } else if (is_EOL(ch)) {\n        _line = state.line;\n        _lineStart = state.lineStart;\n        _lineIndent = state.lineIndent;\n        skipSeparationSpace(state, false, -1);\n\n        if (state.lineIndent >= nodeIndent) {\n          hasPendingContent = true;\n          ch = state.input.charCodeAt(state.position);\n          continue;\n        } else {\n          state.position = captureEnd;\n          state.line = _line;\n          state.lineStart = _lineStart;\n          state.lineIndent = _lineIndent;\n          break;\n        }\n      }\n\n      if (hasPendingContent) {\n        captureSegment(state, captureStart, captureEnd, false);\n        writeFoldedLines(state, state.line - _line);\n        captureStart = captureEnd = state.position;\n        hasPendingContent = false;\n      }\n\n      if (!is_WHITE_SPACE(ch)) {\n        captureEnd = state.position + 1;\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, captureEnd, false);\n\n    if (state.result) {\n      return true;\n    }\n\n    state.kind = _kind;\n    state.result = _result;\n    return false;\n  }\n\n  function readSingleQuotedScalar(state, nodeIndent) {\n    var ch, captureStart, captureEnd;\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch !== 0x27\n    /* ' */\n    ) {\n      return false;\n    }\n\n    state.kind = 'scalar';\n    state.result = '';\n    state.position++;\n    captureStart = captureEnd = state.position;\n\n    while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n      if (ch === 0x27\n      /* ' */\n      ) {\n        captureSegment(state, captureStart, state.position, true);\n        ch = state.input.charCodeAt(++state.position);\n\n        if (ch === 0x27\n        /* ' */\n        ) {\n          captureStart = state.position;\n          state.position++;\n          captureEnd = state.position;\n        } else {\n          return true;\n        }\n      } else if (is_EOL(ch)) {\n        captureSegment(state, captureStart, captureEnd, true);\n        writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n        captureStart = captureEnd = state.position;\n      } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n        throwError(state, 'unexpected end of the document within a single quoted scalar');\n      } else {\n        state.position++;\n        captureEnd = state.position;\n      }\n    }\n\n    throwError(state, 'unexpected end of the stream within a single quoted scalar');\n  }\n\n  function readDoubleQuotedScalar(state, nodeIndent) {\n    var captureStart, captureEnd, hexLength, hexResult, tmp, ch;\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch !== 0x22\n    /* \" */\n    ) {\n      return false;\n    }\n\n    state.kind = 'scalar';\n    state.result = '';\n    state.position++;\n    captureStart = captureEnd = state.position;\n\n    while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n      if (ch === 0x22\n      /* \" */\n      ) {\n        captureSegment(state, captureStart, state.position, true);\n        state.position++;\n        return true;\n      } else if (ch === 0x5C\n      /* \\ */\n      ) {\n        captureSegment(state, captureStart, state.position, true);\n        ch = state.input.charCodeAt(++state.position);\n\n        if (is_EOL(ch)) {\n          skipSeparationSpace(state, false, nodeIndent); // TODO: rework to inline fn with no type cast?\n        } else if (ch < 256 && simpleEscapeCheck[ch]) {\n          state.result += simpleEscapeMap[ch];\n          state.position++;\n        } else if ((tmp = escapedHexLen(ch)) > 0) {\n          hexLength = tmp;\n          hexResult = 0;\n\n          for (; hexLength > 0; hexLength--) {\n            ch = state.input.charCodeAt(++state.position);\n\n            if ((tmp = fromHexCode(ch)) >= 0) {\n              hexResult = (hexResult << 4) + tmp;\n            } else {\n              throwError(state, 'expected hexadecimal character');\n            }\n          }\n\n          state.result += charFromCodepoint(hexResult);\n          state.position++;\n        } else {\n          throwError(state, 'unknown escape sequence');\n        }\n\n        captureStart = captureEnd = state.position;\n      } else if (is_EOL(ch)) {\n        captureSegment(state, captureStart, captureEnd, true);\n        writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n        captureStart = captureEnd = state.position;\n      } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n        throwError(state, 'unexpected end of the document within a double quoted scalar');\n      } else {\n        state.position++;\n        captureEnd = state.position;\n      }\n    }\n\n    throwError(state, 'unexpected end of the stream within a double quoted scalar');\n  }\n\n  function readFlowCollection(state, nodeIndent) {\n    var readNext = true,\n        _line,\n        _lineStart,\n        _pos,\n        _tag = state.tag,\n        _result,\n        _anchor = state.anchor,\n        following,\n        terminator,\n        isPair,\n        isExplicitPair,\n        isMapping,\n        overridableKeys = Object.create(null),\n        keyNode,\n        keyTag,\n        valueNode,\n        ch;\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x5B\n    /* [ */\n    ) {\n      terminator = 0x5D;\n      /* ] */\n\n      isMapping = false;\n      _result = [];\n    } else if (ch === 0x7B\n    /* { */\n    ) {\n      terminator = 0x7D;\n      /* } */\n\n      isMapping = true;\n      _result = {};\n    } else {\n      return false;\n    }\n\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = _result;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n\n    while (ch !== 0) {\n      skipSeparationSpace(state, true, nodeIndent);\n      ch = state.input.charCodeAt(state.position);\n\n      if (ch === terminator) {\n        state.position++;\n        state.tag = _tag;\n        state.anchor = _anchor;\n        state.kind = isMapping ? 'mapping' : 'sequence';\n        state.result = _result;\n        return true;\n      } else if (!readNext) {\n        throwError(state, 'missed comma between flow collection entries');\n      } else if (ch === 0x2C\n      /* , */\n      ) {\n        // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n        throwError(state, \"expected the node content, but found ','\");\n      }\n\n      keyTag = keyNode = valueNode = null;\n      isPair = isExplicitPair = false;\n\n      if (ch === 0x3F\n      /* ? */\n      ) {\n        following = state.input.charCodeAt(state.position + 1);\n\n        if (is_WS_OR_EOL(following)) {\n          isPair = isExplicitPair = true;\n          state.position++;\n          skipSeparationSpace(state, true, nodeIndent);\n        }\n      }\n\n      _line = state.line; // Save the current line.\n\n      _lineStart = state.lineStart;\n      _pos = state.position;\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      keyTag = state.tag;\n      keyNode = state.result;\n      skipSeparationSpace(state, true, nodeIndent);\n      ch = state.input.charCodeAt(state.position);\n\n      if ((isExplicitPair || state.line === _line) && ch === 0x3A\n      /* : */\n      ) {\n        isPair = true;\n        ch = state.input.charCodeAt(++state.position);\n        skipSeparationSpace(state, true, nodeIndent);\n        composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n        valueNode = state.result;\n      }\n\n      if (isMapping) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n      } else if (isPair) {\n        _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n      } else {\n        _result.push(keyNode);\n      }\n\n      skipSeparationSpace(state, true, nodeIndent);\n      ch = state.input.charCodeAt(state.position);\n\n      if (ch === 0x2C\n      /* , */\n      ) {\n        readNext = true;\n        ch = state.input.charCodeAt(++state.position);\n      } else {\n        readNext = false;\n      }\n    }\n\n    throwError(state, 'unexpected end of the stream within a flow collection');\n  }\n\n  function readBlockScalar(state, nodeIndent) {\n    var captureStart,\n        folding,\n        chomping = CHOMPING_CLIP,\n        didReadContent = false,\n        detectedIndent = false,\n        textIndent = nodeIndent,\n        emptyLines = 0,\n        atMoreIndented = false,\n        tmp,\n        ch;\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x7C\n    /* | */\n    ) {\n      folding = false;\n    } else if (ch === 0x3E\n    /* > */\n    ) {\n      folding = true;\n    } else {\n      return false;\n    }\n\n    state.kind = 'scalar';\n    state.result = '';\n\n    while (ch !== 0) {\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x2B\n      /* + */\n      || ch === 0x2D\n      /* - */\n      ) {\n        if (CHOMPING_CLIP === chomping) {\n          chomping = ch === 0x2B\n          /* + */\n          ? CHOMPING_KEEP : CHOMPING_STRIP;\n        } else {\n          throwError(state, 'repeat of a chomping mode identifier');\n        }\n      } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n        if (tmp === 0) {\n          throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n        } else if (!detectedIndent) {\n          textIndent = nodeIndent + tmp - 1;\n          detectedIndent = true;\n        } else {\n          throwError(state, 'repeat of an indentation width identifier');\n        }\n      } else {\n        break;\n      }\n    }\n\n    if (is_WHITE_SPACE(ch)) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (is_WHITE_SPACE(ch));\n\n      if (ch === 0x23\n      /* # */\n      ) {\n        do {\n          ch = state.input.charCodeAt(++state.position);\n        } while (!is_EOL(ch) && ch !== 0);\n      }\n    }\n\n    while (ch !== 0) {\n      readLineBreak(state);\n      state.lineIndent = 0;\n      ch = state.input.charCodeAt(state.position);\n\n      while ((!detectedIndent || state.lineIndent < textIndent) && ch === 0x20\n      /* Space */\n      ) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (!detectedIndent && state.lineIndent > textIndent) {\n        textIndent = state.lineIndent;\n      }\n\n      if (is_EOL(ch)) {\n        emptyLines++;\n        continue;\n      } // End of the scalar.\n\n\n      if (state.lineIndent < textIndent) {\n        // Perform the chomping.\n        if (chomping === CHOMPING_KEEP) {\n          state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n        } else if (chomping === CHOMPING_CLIP) {\n          if (didReadContent) {\n            // i.e. only if the scalar is not empty.\n            state.result += '\\n';\n          }\n        } // Break this `while` cycle and go to the funciton's epilogue.\n\n\n        break;\n      } // Folded style: use fancy rules to handle line breaks.\n\n\n      if (folding) {\n        // Lines starting with white space characters (more-indented lines) are not folded.\n        if (is_WHITE_SPACE(ch)) {\n          atMoreIndented = true; // except for the first content line (cf. Example 8.1)\n\n          state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines); // End of more-indented block.\n        } else if (atMoreIndented) {\n          atMoreIndented = false;\n          state.result += common.repeat('\\n', emptyLines + 1); // Just one line break - perceive as the same line.\n        } else if (emptyLines === 0) {\n          if (didReadContent) {\n            // i.e. only if we have already read some scalar content.\n            state.result += ' ';\n          } // Several line breaks - perceive as different lines.\n\n        } else {\n          state.result += common.repeat('\\n', emptyLines);\n        } // Literal style: just add exact number of line breaks between content lines.\n\n      } else {\n        // Keep all line breaks except the header line break.\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      }\n\n      didReadContent = true;\n      detectedIndent = true;\n      emptyLines = 0;\n      captureStart = state.position;\n\n      while (!is_EOL(ch) && ch !== 0) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      captureSegment(state, captureStart, state.position, false);\n    }\n\n    return true;\n  }\n\n  function readBlockSequence(state, nodeIndent) {\n    var _line,\n        _tag = state.tag,\n        _anchor = state.anchor,\n        _result = [],\n        following,\n        detected = false,\n        ch; // there is a leading tab before this token, so it can't be a block sequence/mapping;\n    // it can still be flow sequence/mapping or a scalar\n\n\n    if (state.firstTabInLine !== -1) return false;\n\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = _result;\n    }\n\n    ch = state.input.charCodeAt(state.position);\n\n    while (ch !== 0) {\n      if (state.firstTabInLine !== -1) {\n        state.position = state.firstTabInLine;\n        throwError(state, 'tab characters must not be used in indentation');\n      }\n\n      if (ch !== 0x2D\n      /* - */\n      ) {\n        break;\n      }\n\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (!is_WS_OR_EOL(following)) {\n        break;\n      }\n\n      detected = true;\n      state.position++;\n\n      if (skipSeparationSpace(state, true, -1)) {\n        if (state.lineIndent <= nodeIndent) {\n          _result.push(null);\n\n          ch = state.input.charCodeAt(state.position);\n          continue;\n        }\n      }\n\n      _line = state.line;\n      composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n\n      _result.push(state.result);\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n\n      if ((state.line === _line || state.lineIndent > nodeIndent) && ch !== 0) {\n        throwError(state, 'bad indentation of a sequence entry');\n      } else if (state.lineIndent < nodeIndent) {\n        break;\n      }\n    }\n\n    if (detected) {\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = 'sequence';\n      state.result = _result;\n      return true;\n    }\n\n    return false;\n  }\n\n  function readBlockMapping(state, nodeIndent, flowIndent) {\n    var following,\n        allowCompact,\n        _line,\n        _keyLine,\n        _keyLineStart,\n        _keyPos,\n        _tag = state.tag,\n        _anchor = state.anchor,\n        _result = {},\n        overridableKeys = Object.create(null),\n        keyTag = null,\n        keyNode = null,\n        valueNode = null,\n        atExplicitKey = false,\n        detected = false,\n        ch; // there is a leading tab before this token, so it can't be a block sequence/mapping;\n    // it can still be flow sequence/mapping or a scalar\n\n\n    if (state.firstTabInLine !== -1) return false;\n\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = _result;\n    }\n\n    ch = state.input.charCodeAt(state.position);\n\n    while (ch !== 0) {\n      if (!atExplicitKey && state.firstTabInLine !== -1) {\n        state.position = state.firstTabInLine;\n        throwError(state, 'tab characters must not be used in indentation');\n      }\n\n      following = state.input.charCodeAt(state.position + 1);\n      _line = state.line; // Save the current line.\n      //\n      // Explicit notation case. There are two separate blocks:\n      // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n      //\n\n      if ((ch === 0x3F\n      /* ? */\n      || ch === 0x3A\n      /* : */\n      ) && is_WS_OR_EOL(following)) {\n        if (ch === 0x3F\n        /* ? */\n        ) {\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = true;\n          allowCompact = true;\n        } else if (atExplicitKey) {\n          // i.e. 0x3A/* : */ === character after the explicit key.\n          atExplicitKey = false;\n          allowCompact = true;\n        } else {\n          throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n        }\n\n        state.position += 1;\n        ch = following; //\n        // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n        //\n      } else {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n\n        if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n          // Neither implicit nor explicit notation.\n          // Reading is done. Go to the epilogue.\n          break;\n        }\n\n        if (state.line === _line) {\n          ch = state.input.charCodeAt(state.position);\n\n          while (is_WHITE_SPACE(ch)) {\n            ch = state.input.charCodeAt(++state.position);\n          }\n\n          if (ch === 0x3A\n          /* : */\n          ) {\n            ch = state.input.charCodeAt(++state.position);\n\n            if (!is_WS_OR_EOL(ch)) {\n              throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n            }\n\n            if (atExplicitKey) {\n              storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n              keyTag = keyNode = valueNode = null;\n            }\n\n            detected = true;\n            atExplicitKey = false;\n            allowCompact = false;\n            keyTag = state.tag;\n            keyNode = state.result;\n          } else if (detected) {\n            throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n          } else {\n            state.tag = _tag;\n            state.anchor = _anchor;\n            return true; // Keep the result of `composeNode`.\n          }\n        } else if (detected) {\n          throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n      } //\n      // Common reading code for both explicit and implicit notations.\n      //\n\n\n      if (state.line === _line || state.lineIndent > nodeIndent) {\n        if (atExplicitKey) {\n          _keyLine = state.line;\n          _keyLineStart = state.lineStart;\n          _keyPos = state.position;\n        }\n\n        if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n          if (atExplicitKey) {\n            keyNode = state.result;\n          } else {\n            valueNode = state.result;\n          }\n        }\n\n        if (!atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        skipSeparationSpace(state, true, -1);\n        ch = state.input.charCodeAt(state.position);\n      }\n\n      if ((state.line === _line || state.lineIndent > nodeIndent) && ch !== 0) {\n        throwError(state, 'bad indentation of a mapping entry');\n      } else if (state.lineIndent < nodeIndent) {\n        break;\n      }\n    } //\n    // Epilogue.\n    //\n    // Special case: last mapping's node contains only the key in explicit notation.\n\n\n    if (atExplicitKey) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n    } // Expose the resulting mapping.\n\n\n    if (detected) {\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = 'mapping';\n      state.result = _result;\n    }\n\n    return detected;\n  }\n\n  function readTagProperty(state) {\n    var _position,\n        isVerbatim = false,\n        isNamed = false,\n        tagHandle,\n        tagName,\n        ch;\n\n    ch = state.input.charCodeAt(state.position);\n    if (ch !== 0x21\n    /* ! */\n    ) return false;\n\n    if (state.tag !== null) {\n      throwError(state, 'duplication of a tag property');\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x3C\n    /* < */\n    ) {\n      isVerbatim = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else if (ch === 0x21\n    /* ! */\n    ) {\n      isNamed = true;\n      tagHandle = '!!';\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      tagHandle = '!';\n    }\n\n    _position = state.position;\n\n    if (isVerbatim) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0 && ch !== 0x3E\n      /* > */\n      );\n\n      if (state.position < state.length) {\n        tagName = state.input.slice(_position, state.position);\n        ch = state.input.charCodeAt(++state.position);\n      } else {\n        throwError(state, 'unexpected end of the stream within a verbatim tag');\n      }\n    } else {\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        if (ch === 0x21\n        /* ! */\n        ) {\n          if (!isNamed) {\n            tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n            if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n              throwError(state, 'named tag handle cannot contain such characters');\n            }\n\n            isNamed = true;\n            _position = state.position + 1;\n          } else {\n            throwError(state, 'tag suffix cannot contain exclamation marks');\n          }\n        }\n\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      tagName = state.input.slice(_position, state.position);\n\n      if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n        throwError(state, 'tag suffix cannot contain flow indicator characters');\n      }\n    }\n\n    if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n      throwError(state, 'tag name cannot contain such characters: ' + tagName);\n    }\n\n    try {\n      tagName = decodeURIComponent(tagName);\n    } catch (err) {\n      throwError(state, 'tag name is malformed: ' + tagName);\n    }\n\n    if (isVerbatim) {\n      state.tag = tagName;\n    } else if (_hasOwnProperty$1.call(state.tagMap, tagHandle)) {\n      state.tag = state.tagMap[tagHandle] + tagName;\n    } else if (tagHandle === '!') {\n      state.tag = '!' + tagName;\n    } else if (tagHandle === '!!') {\n      state.tag = 'tag:yaml.org,2002:' + tagName;\n    } else {\n      throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n    }\n\n    return true;\n  }\n\n  function readAnchorProperty(state) {\n    var _position, ch;\n\n    ch = state.input.charCodeAt(state.position);\n    if (ch !== 0x26\n    /* & */\n    ) return false;\n\n    if (state.anchor !== null) {\n      throwError(state, 'duplication of an anchor property');\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (state.position === _position) {\n      throwError(state, 'name of an anchor node must contain at least one character');\n    }\n\n    state.anchor = state.input.slice(_position, state.position);\n    return true;\n  }\n\n  function readAlias(state) {\n    var _position, alias, ch;\n\n    ch = state.input.charCodeAt(state.position);\n    if (ch !== 0x2A\n    /* * */\n    ) return false;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (state.position === _position) {\n      throwError(state, 'name of an alias node must contain at least one character');\n    }\n\n    alias = state.input.slice(_position, state.position);\n\n    if (!_hasOwnProperty$1.call(state.anchorMap, alias)) {\n      throwError(state, 'unidentified alias \"' + alias + '\"');\n    }\n\n    state.result = state.anchorMap[alias];\n    skipSeparationSpace(state, true, -1);\n    return true;\n  }\n\n  function composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n    var allowBlockStyles,\n        allowBlockScalars,\n        allowBlockCollections,\n        indentStatus = 1,\n        // 1: this>parent, 0: this=parent, -1: this<parent\n    atNewLine = false,\n        hasContent = false,\n        typeIndex,\n        typeQuantity,\n        typeList,\n        type,\n        flowIndent,\n        blockIndent;\n\n    if (state.listener !== null) {\n      state.listener('open', state);\n    }\n\n    state.tag = null;\n    state.anchor = null;\n    state.kind = null;\n    state.result = null;\n    allowBlockStyles = allowBlockScalars = allowBlockCollections = CONTEXT_BLOCK_OUT === nodeContext || CONTEXT_BLOCK_IN === nodeContext;\n\n    if (allowToSeek) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      }\n    }\n\n    if (indentStatus === 1) {\n      while (readTagProperty(state) || readAnchorProperty(state)) {\n        if (skipSeparationSpace(state, true, -1)) {\n          atNewLine = true;\n          allowBlockCollections = allowBlockStyles;\n\n          if (state.lineIndent > parentIndent) {\n            indentStatus = 1;\n          } else if (state.lineIndent === parentIndent) {\n            indentStatus = 0;\n          } else if (state.lineIndent < parentIndent) {\n            indentStatus = -1;\n          }\n        } else {\n          allowBlockCollections = false;\n        }\n      }\n    }\n\n    if (allowBlockCollections) {\n      allowBlockCollections = atNewLine || allowCompact;\n    }\n\n    if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n      if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n        flowIndent = parentIndent;\n      } else {\n        flowIndent = parentIndent + 1;\n      }\n\n      blockIndent = state.position - state.lineStart;\n\n      if (indentStatus === 1) {\n        if (allowBlockCollections && (readBlockSequence(state, blockIndent) || readBlockMapping(state, blockIndent, flowIndent)) || readFlowCollection(state, flowIndent)) {\n          hasContent = true;\n        } else {\n          if (allowBlockScalars && readBlockScalar(state, flowIndent) || readSingleQuotedScalar(state, flowIndent) || readDoubleQuotedScalar(state, flowIndent)) {\n            hasContent = true;\n          } else if (readAlias(state)) {\n            hasContent = true;\n\n            if (state.tag !== null || state.anchor !== null) {\n              throwError(state, 'alias node should not have any properties');\n            }\n          } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n            hasContent = true;\n\n            if (state.tag === null) {\n              state.tag = '?';\n            }\n          }\n\n          if (state.anchor !== null) {\n            state.anchorMap[state.anchor] = state.result;\n          }\n        }\n      } else if (indentStatus === 0) {\n        // Special case: block sequences are allowed to have same indentation level as the parent.\n        // http://www.yaml.org/spec/1.2/spec.html#id2799784\n        hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n      }\n    }\n\n    if (state.tag === null) {\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    } else if (state.tag === '?') {\n      // Implicit resolving is not allowed for non-scalar types, and '?'\n      // non-specific tag is only automatically assigned to plain scalars.\n      //\n      // We only need to check kind conformity in case user explicitly assigns '?'\n      // tag, for example like this: \"!<?> [0]\"\n      //\n      if (state.result !== null && state.kind !== 'scalar') {\n        throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n      }\n\n      for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n        type = state.implicitTypes[typeIndex];\n\n        if (type.resolve(state.result)) {\n          // `state.result` updated in resolver if matched\n          state.result = type.construct(state.result);\n          state.tag = type.tag;\n\n          if (state.anchor !== null) {\n            state.anchorMap[state.anchor] = state.result;\n          }\n\n          break;\n        }\n      }\n    } else if (state.tag !== '!') {\n      if (_hasOwnProperty$1.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n        type = state.typeMap[state.kind || 'fallback'][state.tag];\n      } else {\n        // looking for multi type\n        type = null;\n        typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n        for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n          if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n            type = typeList[typeIndex];\n            break;\n          }\n        }\n      }\n\n      if (!type) {\n        throwError(state, 'unknown tag !<' + state.tag + '>');\n      }\n\n      if (state.result !== null && type.kind !== state.kind) {\n        throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n      }\n\n      if (!type.resolve(state.result, state.tag)) {\n        // `state.result` updated in resolver if matched\n        throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n      } else {\n        state.result = type.construct(state.result, state.tag);\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    }\n\n    if (state.listener !== null) {\n      state.listener('close', state);\n    }\n\n    return state.tag !== null || state.anchor !== null || hasContent;\n  }\n\n  function readDocument(state) {\n    var documentStart = state.position,\n        _position,\n        directiveName,\n        directiveArgs,\n        hasDirectives = false,\n        ch;\n\n    state.version = null;\n    state.checkLineBreaks = state.legacy;\n    state.tagMap = Object.create(null);\n    state.anchorMap = Object.create(null);\n\n    while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n\n      if (state.lineIndent > 0 || ch !== 0x25\n      /* % */\n      ) {\n        break;\n      }\n\n      hasDirectives = true;\n      ch = state.input.charCodeAt(++state.position);\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveName = state.input.slice(_position, state.position);\n      directiveArgs = [];\n\n      if (directiveName.length < 1) {\n        throwError(state, 'directive name must not be less than one character in length');\n      }\n\n      while (ch !== 0) {\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x23\n        /* # */\n        ) {\n          do {\n            ch = state.input.charCodeAt(++state.position);\n          } while (ch !== 0 && !is_EOL(ch));\n\n          break;\n        }\n\n        if (is_EOL(ch)) break;\n        _position = state.position;\n\n        while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        directiveArgs.push(state.input.slice(_position, state.position));\n      }\n\n      if (ch !== 0) readLineBreak(state);\n\n      if (_hasOwnProperty$1.call(directiveHandlers, directiveName)) {\n        directiveHandlers[directiveName](state, directiveName, directiveArgs);\n      } else {\n        throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n      }\n    }\n\n    skipSeparationSpace(state, true, -1);\n\n    if (state.lineIndent === 0 && state.input.charCodeAt(state.position) === 0x2D\n    /* - */\n    && state.input.charCodeAt(state.position + 1) === 0x2D\n    /* - */\n    && state.input.charCodeAt(state.position + 2) === 0x2D\n    /* - */\n    ) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    } else if (hasDirectives) {\n      throwError(state, 'directives end mark is expected');\n    }\n\n    composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n    skipSeparationSpace(state, true, -1);\n\n    if (state.checkLineBreaks && PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n      throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n    }\n\n    state.documents.push(state.result);\n\n    if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      if (state.input.charCodeAt(state.position) === 0x2E\n      /* . */\n      ) {\n        state.position += 3;\n        skipSeparationSpace(state, true, -1);\n      }\n\n      return;\n    }\n\n    if (state.position < state.length - 1) {\n      throwError(state, 'end of the stream or a document separator is expected');\n    } else {\n      return;\n    }\n  }\n\n  function loadDocuments(input, options) {\n    input = String(input);\n    options = options || {};\n\n    if (input.length !== 0) {\n      // Add tailing `\\n` if not exists\n      if (input.charCodeAt(input.length - 1) !== 0x0A\n      /* LF */\n      && input.charCodeAt(input.length - 1) !== 0x0D\n      /* CR */\n      ) {\n        input += '\\n';\n      } // Strip BOM\n\n\n      if (input.charCodeAt(0) === 0xFEFF) {\n        input = input.slice(1);\n      }\n    }\n\n    var state = new State$1(input, options);\n    var nullpos = input.indexOf('\\0');\n\n    if (nullpos !== -1) {\n      state.position = nullpos;\n      throwError(state, 'null byte is not allowed in input');\n    } // Use 0 as string terminator. That significantly simplifies bounds check.\n\n\n    state.input += '\\0';\n\n    while (state.input.charCodeAt(state.position) === 0x20\n    /* Space */\n    ) {\n      state.lineIndent += 1;\n      state.position += 1;\n    }\n\n    while (state.position < state.length - 1) {\n      readDocument(state);\n    }\n\n    return state.documents;\n  }\n\n  function loadAll$1(input, iterator, options) {\n    if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n      options = iterator;\n      iterator = null;\n    }\n\n    var documents = loadDocuments(input, options);\n\n    if (typeof iterator !== 'function') {\n      return documents;\n    }\n\n    for (var index = 0, length = documents.length; index < length; index += 1) {\n      iterator(documents[index]);\n    }\n  }\n\n  function load$1(input, options) {\n    var documents = loadDocuments(input, options);\n\n    if (documents.length === 0) {\n      /*eslint-disable no-undefined*/\n      return undefined;\n    } else if (documents.length === 1) {\n      return documents[0];\n    }\n\n    throw new exception('expected a single document in the stream, but found more');\n  }\n\n  var loadAll_1 = loadAll$1;\n  var load_1 = load$1;\n  var loader = {\n    loadAll: loadAll_1,\n    load: load_1\n  };\n  /*eslint-disable no-use-before-define*/\n\n  var _toString = Object.prototype.toString;\n  var _hasOwnProperty = Object.prototype.hasOwnProperty;\n  var CHAR_BOM = 0xFEFF;\n  var CHAR_TAB = 0x09;\n  /* Tab */\n\n  var CHAR_LINE_FEED = 0x0A;\n  /* LF */\n\n  var CHAR_CARRIAGE_RETURN = 0x0D;\n  /* CR */\n\n  var CHAR_SPACE = 0x20;\n  /* Space */\n\n  var CHAR_EXCLAMATION = 0x21;\n  /* ! */\n\n  var CHAR_DOUBLE_QUOTE = 0x22;\n  /* \" */\n\n  var CHAR_SHARP = 0x23;\n  /* # */\n\n  var CHAR_PERCENT = 0x25;\n  /* % */\n\n  var CHAR_AMPERSAND = 0x26;\n  /* & */\n\n  var CHAR_SINGLE_QUOTE = 0x27;\n  /* ' */\n\n  var CHAR_ASTERISK = 0x2A;\n  /* * */\n\n  var CHAR_COMMA = 0x2C;\n  /* , */\n\n  var CHAR_MINUS = 0x2D;\n  /* - */\n\n  var CHAR_COLON = 0x3A;\n  /* : */\n\n  var CHAR_EQUALS = 0x3D;\n  /* = */\n\n  var CHAR_GREATER_THAN = 0x3E;\n  /* > */\n\n  var CHAR_QUESTION = 0x3F;\n  /* ? */\n\n  var CHAR_COMMERCIAL_AT = 0x40;\n  /* @ */\n\n  var CHAR_LEFT_SQUARE_BRACKET = 0x5B;\n  /* [ */\n\n  var CHAR_RIGHT_SQUARE_BRACKET = 0x5D;\n  /* ] */\n\n  var CHAR_GRAVE_ACCENT = 0x60;\n  /* ` */\n\n  var CHAR_LEFT_CURLY_BRACKET = 0x7B;\n  /* { */\n\n  var CHAR_VERTICAL_LINE = 0x7C;\n  /* | */\n\n  var CHAR_RIGHT_CURLY_BRACKET = 0x7D;\n  /* } */\n\n  var ESCAPE_SEQUENCES = {};\n  ESCAPE_SEQUENCES[0x00] = '\\\\0';\n  ESCAPE_SEQUENCES[0x07] = '\\\\a';\n  ESCAPE_SEQUENCES[0x08] = '\\\\b';\n  ESCAPE_SEQUENCES[0x09] = '\\\\t';\n  ESCAPE_SEQUENCES[0x0A] = '\\\\n';\n  ESCAPE_SEQUENCES[0x0B] = '\\\\v';\n  ESCAPE_SEQUENCES[0x0C] = '\\\\f';\n  ESCAPE_SEQUENCES[0x0D] = '\\\\r';\n  ESCAPE_SEQUENCES[0x1B] = '\\\\e';\n  ESCAPE_SEQUENCES[0x22] = '\\\\\"';\n  ESCAPE_SEQUENCES[0x5C] = '\\\\\\\\';\n  ESCAPE_SEQUENCES[0x85] = '\\\\N';\n  ESCAPE_SEQUENCES[0xA0] = '\\\\_';\n  ESCAPE_SEQUENCES[0x2028] = '\\\\L';\n  ESCAPE_SEQUENCES[0x2029] = '\\\\P';\n  var DEPRECATED_BOOLEANS_SYNTAX = ['y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON', 'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'];\n  var DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\n  function compileStyleMap(schema, map) {\n    var result, keys, index, length, tag, style, type;\n    if (map === null) return {};\n    result = {};\n    keys = Object.keys(map);\n\n    for (index = 0, length = keys.length; index < length; index += 1) {\n      tag = keys[index];\n      style = String(map[tag]);\n\n      if (tag.slice(0, 2) === '!!') {\n        tag = 'tag:yaml.org,2002:' + tag.slice(2);\n      }\n\n      type = schema.compiledTypeMap['fallback'][tag];\n\n      if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n        style = type.styleAliases[style];\n      }\n\n      result[tag] = style;\n    }\n\n    return result;\n  }\n\n  function encodeHex(character) {\n    var string, handle, length;\n    string = character.toString(16).toUpperCase();\n\n    if (character <= 0xFF) {\n      handle = 'x';\n      length = 2;\n    } else if (character <= 0xFFFF) {\n      handle = 'u';\n      length = 4;\n    } else if (character <= 0xFFFFFFFF) {\n      handle = 'U';\n      length = 8;\n    } else {\n      throw new exception('code point within a string may not be greater than 0xFFFFFFFF');\n    }\n\n    return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n  }\n\n  var QUOTING_TYPE_SINGLE = 1,\n      QUOTING_TYPE_DOUBLE = 2;\n\n  function State(options) {\n    this.schema = options['schema'] || _default;\n    this.indent = Math.max(1, options['indent'] || 2);\n    this.noArrayIndent = options['noArrayIndent'] || false;\n    this.skipInvalid = options['skipInvalid'] || false;\n    this.flowLevel = common.isNothing(options['flowLevel']) ? -1 : options['flowLevel'];\n    this.styleMap = compileStyleMap(this.schema, options['styles'] || null);\n    this.sortKeys = options['sortKeys'] || false;\n    this.lineWidth = options['lineWidth'] || 80;\n    this.noRefs = options['noRefs'] || false;\n    this.noCompatMode = options['noCompatMode'] || false;\n    this.condenseFlow = options['condenseFlow'] || false;\n    this.quotingType = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n    this.forceQuotes = options['forceQuotes'] || false;\n    this.replacer = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n    this.implicitTypes = this.schema.compiledImplicit;\n    this.explicitTypes = this.schema.compiledExplicit;\n    this.tag = null;\n    this.result = '';\n    this.duplicates = [];\n    this.usedDuplicates = null;\n  } // Indents every line in a string. Empty lines (\\n only) are not indented.\n\n\n  function indentString(string, spaces) {\n    var ind = common.repeat(' ', spaces),\n        position = 0,\n        next = -1,\n        result = '',\n        line,\n        length = string.length;\n\n    while (position < length) {\n      next = string.indexOf('\\n', position);\n\n      if (next === -1) {\n        line = string.slice(position);\n        position = length;\n      } else {\n        line = string.slice(position, next + 1);\n        position = next + 1;\n      }\n\n      if (line.length && line !== '\\n') result += ind;\n      result += line;\n    }\n\n    return result;\n  }\n\n  function generateNextLine(state, level) {\n    return '\\n' + common.repeat(' ', state.indent * level);\n  }\n\n  function testImplicitResolving(state, str) {\n    var index, length, type;\n\n    for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n      type = state.implicitTypes[index];\n\n      if (type.resolve(str)) {\n        return true;\n      }\n    }\n\n    return false;\n  } // [33] s-white ::= s-space | s-tab\n\n\n  function isWhitespace(c) {\n    return c === CHAR_SPACE || c === CHAR_TAB;\n  } // Returns true if the character can be printed without escaping.\n  // From YAML 1.2: \"any allowed characters known to be non-printable\n  // should also be escaped. [However,] This isn’t mandatory\"\n  // Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\n\n\n  function isPrintable(c) {\n    return 0x00020 <= c && c <= 0x00007E || 0x000A1 <= c && c <= 0x00D7FF && c !== 0x2028 && c !== 0x2029 || 0x0E000 <= c && c <= 0x00FFFD && c !== CHAR_BOM || 0x10000 <= c && c <= 0x10FFFF;\n  } // [34] ns-char ::= nb-char - s-white\n  // [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n  // [26] b-char  ::= b-line-feed | b-carriage-return\n  // Including s-white (for some reason, examples doesn't match specs in this aspect)\n  // ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\n\n\n  function isNsCharOrWhitespace(c) {\n    return isPrintable(c) && c !== CHAR_BOM // - b-char\n    && c !== CHAR_CARRIAGE_RETURN && c !== CHAR_LINE_FEED;\n  } // [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n  //                             c = flow-in   ⇒ ns-plain-safe-in\n  //                             c = block-key ⇒ ns-plain-safe-out\n  //                             c = flow-key  ⇒ ns-plain-safe-in\n  // [128] ns-plain-safe-out ::= ns-char\n  // [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n  // [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n  //                            | ( /* An ns-char preceding */ “#” )\n  //                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\n\n\n  function isPlainSafe(c, prev, inblock) {\n    var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n    var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n    return ( // ns-plain-safe\n    inblock ? // c = flow-in\n    cIsNsCharOrWhitespace : cIsNsCharOrWhitespace // - c-flow-indicator\n    && c !== CHAR_COMMA && c !== CHAR_LEFT_SQUARE_BRACKET && c !== CHAR_RIGHT_SQUARE_BRACKET && c !== CHAR_LEFT_CURLY_BRACKET && c !== CHAR_RIGHT_CURLY_BRACKET // ns-plain-char\n    ) && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP // change to true on '[^ ]#'\n    || prev === CHAR_COLON && cIsNsChar; // change to true on ':[^ ]'\n  } // Simplified test for values allowed as the first character in plain style.\n\n\n  function isPlainSafeFirst(c) {\n    // Uses a subset of ns-char - c-indicator\n    // where ns-char = nb-char - s-white.\n    // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n    return isPrintable(c) && c !== CHAR_BOM && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS && c !== CHAR_QUESTION && c !== CHAR_COLON && c !== CHAR_COMMA && c !== CHAR_LEFT_SQUARE_BRACKET && c !== CHAR_RIGHT_SQUARE_BRACKET && c !== CHAR_LEFT_CURLY_BRACKET && c !== CHAR_RIGHT_CURLY_BRACKET // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP && c !== CHAR_AMPERSAND && c !== CHAR_ASTERISK && c !== CHAR_EXCLAMATION && c !== CHAR_VERTICAL_LINE && c !== CHAR_EQUALS && c !== CHAR_GREATER_THAN && c !== CHAR_SINGLE_QUOTE && c !== CHAR_DOUBLE_QUOTE // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT && c !== CHAR_COMMERCIAL_AT && c !== CHAR_GRAVE_ACCENT;\n  } // Simplified test for values allowed as the last character in plain style.\n\n\n  function isPlainSafeLast(c) {\n    // just not whitespace or colon, it will be checked to be plain character later\n    return !isWhitespace(c) && c !== CHAR_COLON;\n  } // Same as 'string'.codePointAt(pos), but works in older browsers.\n\n\n  function codePointAt(string, pos) {\n    var first = string.charCodeAt(pos),\n        second;\n\n    if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n      second = string.charCodeAt(pos + 1);\n\n      if (second >= 0xDC00 && second <= 0xDFFF) {\n        // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      }\n    }\n\n    return first;\n  } // Determines whether block indentation indicator is required.\n\n\n  function needIndentIndicator(string) {\n    var leadingSpaceRe = /^\\n* /;\n    return leadingSpaceRe.test(string);\n  }\n\n  var STYLE_PLAIN = 1,\n      STYLE_SINGLE = 2,\n      STYLE_LITERAL = 3,\n      STYLE_FOLDED = 4,\n      STYLE_DOUBLE = 5; // Determines which scalar styles are possible and returns the preferred style.\n  // lineWidth = -1 => no limit.\n  // Pre-conditions: str.length > 0.\n  // Post-conditions:\n  //    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n  //    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n  //    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\n\n  function chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth, testAmbiguousType, quotingType, forceQuotes, inblock) {\n    var i;\n    var char = 0;\n    var prevChar = null;\n    var hasLineBreak = false;\n    var hasFoldableLine = false; // only checked if shouldTrackWidth\n\n    var shouldTrackWidth = lineWidth !== -1;\n    var previousLineBreak = -1; // count the first line correctly\n\n    var plain = isPlainSafeFirst(codePointAt(string, 0)) && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n    if (singleLineOnly || forceQuotes) {\n      // Case: no block styles.\n      // Check for disallowed characters to rule out plain and single.\n      for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n        char = codePointAt(string, i);\n\n        if (!isPrintable(char)) {\n          return STYLE_DOUBLE;\n        }\n\n        plain = plain && isPlainSafe(char, prevChar, inblock);\n        prevChar = char;\n      }\n    } else {\n      // Case: block styles permitted.\n      for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n        char = codePointAt(string, i);\n\n        if (char === CHAR_LINE_FEED) {\n          hasLineBreak = true; // Check if any line can be folded.\n\n          if (shouldTrackWidth) {\n            hasFoldableLine = hasFoldableLine || // Foldable line = too long, and not more-indented.\n            i - previousLineBreak - 1 > lineWidth && string[previousLineBreak + 1] !== ' ';\n            previousLineBreak = i;\n          }\n        } else if (!isPrintable(char)) {\n          return STYLE_DOUBLE;\n        }\n\n        plain = plain && isPlainSafe(char, prevChar, inblock);\n        prevChar = char;\n      } // in case the end is missing a \\n\n\n\n      hasFoldableLine = hasFoldableLine || shouldTrackWidth && i - previousLineBreak - 1 > lineWidth && string[previousLineBreak + 1] !== ' ';\n    } // Although every style can represent \\n without escaping, prefer block styles\n    // for multiline, since they're more readable and they don't add empty lines.\n    // Also prefer folding a super-long line.\n\n\n    if (!hasLineBreak && !hasFoldableLine) {\n      // Strings interpretable as another type have to be quoted;\n      // e.g. the string 'true' vs. the boolean true.\n      if (plain && !forceQuotes && !testAmbiguousType(string)) {\n        return STYLE_PLAIN;\n      }\n\n      return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n    } // Edge case: block indentation indicator can only have one digit.\n\n\n    if (indentPerLevel > 9 && needIndentIndicator(string)) {\n      return STYLE_DOUBLE;\n    } // At this point we know block styles are valid.\n    // Prefer literal style unless we want to fold.\n\n\n    if (!forceQuotes) {\n      return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n    }\n\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  } // Note: line breaking/folding is implemented for only the folded style.\n  // NB. We drop the last trailing newline (if any) of a returned block scalar\n  //  since the dumper adds its own newline. This always works:\n  //    • No ending newline => unaffected; already using strip \"-\" chomping.\n  //    • Ending newline    => removed then restored.\n  //  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\n\n\n  function writeScalar(state, string, level, iskey, inblock) {\n    state.dump = function () {\n      if (string.length === 0) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n      }\n\n      if (!state.noCompatMode) {\n        if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n          return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"' + string + '\"' : \"'\" + string + \"'\";\n        }\n      }\n\n      var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n      // As indentation gets deeper, let the width decrease monotonically\n      // to the lower bound min(state.lineWidth, 40).\n      // Note that this implies\n      //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n      //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n      // This behaves better than a constant minimum width which disallows narrower options,\n      // or an indent threshold which causes the width to suddenly increase.\n\n      var lineWidth = state.lineWidth === -1 ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent); // Without knowing if keys are implicit/explicit, assume implicit for safety.\n\n      var singleLineOnly = iskey // No block styles in flow mode.\n      || state.flowLevel > -1 && level >= state.flowLevel;\n\n      function testAmbiguity(string) {\n        return testImplicitResolving(state, string);\n      }\n\n      switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth, testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n        case STYLE_PLAIN:\n          return string;\n\n        case STYLE_SINGLE:\n          return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n\n        case STYLE_LITERAL:\n          return '|' + blockHeader(string, state.indent) + dropEndingNewline(indentString(string, indent));\n\n        case STYLE_FOLDED:\n          return '>' + blockHeader(string, state.indent) + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n\n        case STYLE_DOUBLE:\n          return '\"' + escapeString(string) + '\"';\n\n        default:\n          throw new exception('impossible error: invalid scalar style');\n      }\n    }();\n  } // Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\n\n\n  function blockHeader(string, indentPerLevel) {\n    var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : ''; // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n\n    var clip = string[string.length - 1] === '\\n';\n    var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n    var chomp = keep ? '+' : clip ? '' : '-';\n    return indentIndicator + chomp + '\\n';\n  } // (See the note for writeScalar.)\n\n\n  function dropEndingNewline(string) {\n    return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n  } // Note: a long line without a suitable break point will exceed the width limit.\n  // Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\n\n\n  function foldString(string, width) {\n    // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n    // unless they're before or after a more-indented line, or at the very\n    // beginning or end, in which case $k$ maps to $k$.\n    // Therefore, parse each chunk as newline(s) followed by a content line.\n    var lineRe = /(\\n+)([^\\n]*)/g; // first line (possibly an empty line)\n\n    var result = function () {\n      var nextLF = string.indexOf('\\n');\n      nextLF = nextLF !== -1 ? nextLF : string.length;\n      lineRe.lastIndex = nextLF;\n      return foldLine(string.slice(0, nextLF), width);\n    }(); // If we haven't reached the first content line yet, don't add an extra \\n.\n\n\n    var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n    var moreIndented; // rest of the lines\n\n    var match;\n\n    while (match = lineRe.exec(string)) {\n      var prefix = match[1],\n          line = match[2];\n      moreIndented = line[0] === ' ';\n      result += prefix + (!prevMoreIndented && !moreIndented && line !== '' ? '\\n' : '') + foldLine(line, width);\n      prevMoreIndented = moreIndented;\n    }\n\n    return result;\n  } // Greedy line breaking.\n  // Picks the longest line under the limit each time,\n  // otherwise settles for the shortest line over the limit.\n  // NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\n\n\n  function foldLine(line, width) {\n    if (line === '' || line[0] === ' ') return line; // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n\n    var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n\n    var match; // start is an inclusive index. end, curr, and next are exclusive.\n\n    var start = 0,\n        end,\n        curr = 0,\n        next = 0;\n    var result = ''; // Invariants: 0 <= start <= length-1.\n    //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n    // Inside the loop:\n    //   A match implies length >= 2, so curr and next are <= length-2.\n\n    while (match = breakRe.exec(line)) {\n      next = match.index; // maintain invariant: curr - start <= width\n\n      if (next - start > width) {\n        end = curr > start ? curr : next; // derive end <= length-2\n\n        result += '\\n' + line.slice(start, end); // skip the space that was output as \\n\n\n        start = end + 1; // derive start <= length-1\n      }\n\n      curr = next;\n    } // By the invariants, start <= length-1, so there is something left over.\n    // It is either the whole string or a part starting from non-whitespace.\n\n\n    result += '\\n'; // Insert a break if the remainder is too long and there is a break available.\n\n    if (line.length - start > width && curr > start) {\n      result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n    } else {\n      result += line.slice(start);\n    }\n\n    return result.slice(1); // drop extra \\n joiner\n  } // Escapes a double-quoted string.\n\n\n  function escapeString(string) {\n    var result = '';\n    var char = 0;\n    var escapeSeq;\n\n    for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      escapeSeq = ESCAPE_SEQUENCES[char];\n\n      if (!escapeSeq && isPrintable(char)) {\n        result += string[i];\n        if (char >= 0x10000) result += string[i + 1];\n      } else {\n        result += escapeSeq || encodeHex(char);\n      }\n    }\n\n    return result;\n  }\n\n  function writeFlowSequence(state, level, object) {\n    var _result = '',\n        _tag = state.tag,\n        index,\n        length,\n        value;\n\n    for (index = 0, length = object.length; index < length; index += 1) {\n      value = object[index];\n\n      if (state.replacer) {\n        value = state.replacer.call(object, String(index), value);\n      } // Write only valid elements, put null instead of invalid elements.\n\n\n      if (writeNode(state, level, value, false, false) || typeof value === 'undefined' && writeNode(state, level, null, false, false)) {\n        if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n        _result += state.dump;\n      }\n    }\n\n    state.tag = _tag;\n    state.dump = '[' + _result + ']';\n  }\n\n  function writeBlockSequence(state, level, object, compact) {\n    var _result = '',\n        _tag = state.tag,\n        index,\n        length,\n        value;\n\n    for (index = 0, length = object.length; index < length; index += 1) {\n      value = object[index];\n\n      if (state.replacer) {\n        value = state.replacer.call(object, String(index), value);\n      } // Write only valid elements, put null instead of invalid elements.\n\n\n      if (writeNode(state, level + 1, value, true, true, false, true) || typeof value === 'undefined' && writeNode(state, level + 1, null, true, true, false, true)) {\n        if (!compact || _result !== '') {\n          _result += generateNextLine(state, level);\n        }\n\n        if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n          _result += '-';\n        } else {\n          _result += '- ';\n        }\n\n        _result += state.dump;\n      }\n    }\n\n    state.tag = _tag;\n    state.dump = _result || '[]'; // Empty sequence if no valid values.\n  }\n\n  function writeFlowMapping(state, level, object) {\n    var _result = '',\n        _tag = state.tag,\n        objectKeyList = Object.keys(object),\n        index,\n        length,\n        objectKey,\n        objectValue,\n        pairBuffer;\n\n    for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n      pairBuffer = '';\n      if (_result !== '') pairBuffer += ', ';\n      if (state.condenseFlow) pairBuffer += '\"';\n      objectKey = objectKeyList[index];\n      objectValue = object[objectKey];\n\n      if (state.replacer) {\n        objectValue = state.replacer.call(object, objectKey, objectValue);\n      }\n\n      if (!writeNode(state, level, objectKey, false, false)) {\n        continue; // Skip this pair because of invalid key;\n      }\n\n      if (state.dump.length > 1024) pairBuffer += '? ';\n      pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n      if (!writeNode(state, level, objectValue, false, false)) {\n        continue; // Skip this pair because of invalid value.\n      }\n\n      pairBuffer += state.dump; // Both key and value are valid.\n\n      _result += pairBuffer;\n    }\n\n    state.tag = _tag;\n    state.dump = '{' + _result + '}';\n  }\n\n  function writeBlockMapping(state, level, object, compact) {\n    var _result = '',\n        _tag = state.tag,\n        objectKeyList = Object.keys(object),\n        index,\n        length,\n        objectKey,\n        objectValue,\n        explicitPair,\n        pairBuffer; // Allow sorting keys so that the output file is deterministic\n\n    if (state.sortKeys === true) {\n      // Default sorting\n      objectKeyList.sort();\n    } else if (typeof state.sortKeys === 'function') {\n      // Custom sort function\n      objectKeyList.sort(state.sortKeys);\n    } else if (state.sortKeys) {\n      // Something is wrong\n      throw new exception('sortKeys must be a boolean or a function');\n    }\n\n    for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n      pairBuffer = '';\n\n      if (!compact || _result !== '') {\n        pairBuffer += generateNextLine(state, level);\n      }\n\n      objectKey = objectKeyList[index];\n      objectValue = object[objectKey];\n\n      if (state.replacer) {\n        objectValue = state.replacer.call(object, objectKey, objectValue);\n      }\n\n      if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n        continue; // Skip this pair because of invalid key.\n      }\n\n      explicitPair = state.tag !== null && state.tag !== '?' || state.dump && state.dump.length > 1024;\n\n      if (explicitPair) {\n        if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n          pairBuffer += '?';\n        } else {\n          pairBuffer += '? ';\n        }\n      }\n\n      pairBuffer += state.dump;\n\n      if (explicitPair) {\n        pairBuffer += generateNextLine(state, level);\n      }\n\n      if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n        continue; // Skip this pair because of invalid value.\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += ':';\n      } else {\n        pairBuffer += ': ';\n      }\n\n      pairBuffer += state.dump; // Both key and value are valid.\n\n      _result += pairBuffer;\n    }\n\n    state.tag = _tag;\n    state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n  }\n\n  function detectType(state, object, explicit) {\n    var _result, typeList, index, length, type, style;\n\n    typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n    for (index = 0, length = typeList.length; index < length; index += 1) {\n      type = typeList[index];\n\n      if ((type.instanceOf || type.predicate) && (!type.instanceOf || typeof object === 'object' && object instanceof type.instanceOf) && (!type.predicate || type.predicate(object))) {\n        if (explicit) {\n          if (type.multi && type.representName) {\n            state.tag = type.representName(object);\n          } else {\n            state.tag = type.tag;\n          }\n        } else {\n          state.tag = '?';\n        }\n\n        if (type.represent) {\n          style = state.styleMap[type.tag] || type.defaultStyle;\n\n          if (_toString.call(type.represent) === '[object Function]') {\n            _result = type.represent(object, style);\n          } else if (_hasOwnProperty.call(type.represent, style)) {\n            _result = type.represent[style](object, style);\n          } else {\n            throw new exception('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n          }\n\n          state.dump = _result;\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  } // Serializes `object` and writes it to global `result`.\n  // Returns true on success, or false on invalid object.\n  //\n\n\n  function writeNode(state, level, object, block, compact, iskey, isblockseq) {\n    state.tag = null;\n    state.dump = object;\n\n    if (!detectType(state, object, false)) {\n      detectType(state, object, true);\n    }\n\n    var type = _toString.call(state.dump);\n\n    var inblock = block;\n    var tagStr;\n\n    if (block) {\n      block = state.flowLevel < 0 || state.flowLevel > level;\n    }\n\n    var objectOrArray = type === '[object Object]' || type === '[object Array]',\n        duplicateIndex,\n        duplicate;\n\n    if (objectOrArray) {\n      duplicateIndex = state.duplicates.indexOf(object);\n      duplicate = duplicateIndex !== -1;\n    }\n\n    if (state.tag !== null && state.tag !== '?' || duplicate || state.indent !== 2 && level > 0) {\n      compact = false;\n    }\n\n    if (duplicate && state.usedDuplicates[duplicateIndex]) {\n      state.dump = '*ref_' + duplicateIndex;\n    } else {\n      if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n        state.usedDuplicates[duplicateIndex] = true;\n      }\n\n      if (type === '[object Object]') {\n        if (block && Object.keys(state.dump).length !== 0) {\n          writeBlockMapping(state, level, state.dump, compact);\n\n          if (duplicate) {\n            state.dump = '&ref_' + duplicateIndex + state.dump;\n          }\n        } else {\n          writeFlowMapping(state, level, state.dump);\n\n          if (duplicate) {\n            state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n          }\n        }\n      } else if (type === '[object Array]') {\n        if (block && state.dump.length !== 0) {\n          if (state.noArrayIndent && !isblockseq && level > 0) {\n            writeBlockSequence(state, level - 1, state.dump, compact);\n          } else {\n            writeBlockSequence(state, level, state.dump, compact);\n          }\n\n          if (duplicate) {\n            state.dump = '&ref_' + duplicateIndex + state.dump;\n          }\n        } else {\n          writeFlowSequence(state, level, state.dump);\n\n          if (duplicate) {\n            state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n          }\n        }\n      } else if (type === '[object String]') {\n        if (state.tag !== '?') {\n          writeScalar(state, state.dump, level, iskey, inblock);\n        }\n      } else if (type === '[object Undefined]') {\n        return false;\n      } else {\n        if (state.skipInvalid) return false;\n        throw new exception('unacceptable kind of an object to dump ' + type);\n      }\n\n      if (state.tag !== null && state.tag !== '?') {\n        // Need to encode all characters except those allowed by the spec:\n        //\n        // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n        // [36] ns-hex-digit    ::=  ns-dec-digit\n        //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n        // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n        // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n        // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n        //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n        //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n        //\n        // Also need to encode '!' because it has special meaning (end of tag prefix).\n        //\n        tagStr = encodeURI(state.tag[0] === '!' ? state.tag.slice(1) : state.tag).replace(/!/g, '%21');\n\n        if (state.tag[0] === '!') {\n          tagStr = '!' + tagStr;\n        } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n          tagStr = '!!' + tagStr.slice(18);\n        } else {\n          tagStr = '!<' + tagStr + '>';\n        }\n\n        state.dump = tagStr + ' ' + state.dump;\n      }\n    }\n\n    return true;\n  }\n\n  function getDuplicateReferences(object, state) {\n    var objects = [],\n        duplicatesIndexes = [],\n        index,\n        length;\n    inspectNode(object, objects, duplicatesIndexes);\n\n    for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n      state.duplicates.push(objects[duplicatesIndexes[index]]);\n    }\n\n    state.usedDuplicates = new Array(length);\n  }\n\n  function inspectNode(object, objects, duplicatesIndexes) {\n    var objectKeyList, index, length;\n\n    if (object !== null && typeof object === 'object') {\n      index = objects.indexOf(object);\n\n      if (index !== -1) {\n        if (duplicatesIndexes.indexOf(index) === -1) {\n          duplicatesIndexes.push(index);\n        }\n      } else {\n        objects.push(object);\n\n        if (Array.isArray(object)) {\n          for (index = 0, length = object.length; index < length; index += 1) {\n            inspectNode(object[index], objects, duplicatesIndexes);\n          }\n        } else {\n          objectKeyList = Object.keys(object);\n\n          for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n            inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n          }\n        }\n      }\n    }\n  }\n\n  function dump$1(input, options) {\n    options = options || {};\n    var state = new State(options);\n    if (!state.noRefs) getDuplicateReferences(input, state);\n    var value = input;\n\n    if (state.replacer) {\n      value = state.replacer.call({\n        '': value\n      }, '', value);\n    }\n\n    if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n    return '';\n  }\n\n  var dump_1 = dump$1;\n  var dumper = {\n    dump: dump_1\n  };\n\n  function renamed(from, to) {\n    return function () {\n      throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' + 'Use yaml.' + to + ' instead, which is now safe by default.');\n    };\n  }\n\n  var Type = type;\n  var Schema = schema;\n  var FAILSAFE_SCHEMA = failsafe;\n  var JSON_SCHEMA = json;\n  var CORE_SCHEMA = core;\n  var DEFAULT_SCHEMA = _default;\n  var load = loader.load;\n  var loadAll = loader.loadAll;\n  var dump = dumper.dump;\n  var YAMLException = exception; // Re-export all types in case user wants to create custom schema\n\n  var types = {\n    binary: binary,\n    float: float,\n    map: map,\n    null: _null,\n    pairs: pairs,\n    set: set,\n    timestamp: timestamp,\n    bool: bool,\n    int: int,\n    merge: merge,\n    omap: omap,\n    seq: seq,\n    str: str\n  }; // Removed functions from JS-YAML 3.0.x\n\n  var safeLoad = renamed('safeLoad', 'load');\n  var safeLoadAll = renamed('safeLoadAll', 'loadAll');\n  var safeDump = renamed('safeDump', 'dump');\n  var jsYaml = {\n    Type: Type,\n    Schema: Schema,\n    FAILSAFE_SCHEMA: FAILSAFE_SCHEMA,\n    JSON_SCHEMA: JSON_SCHEMA,\n    CORE_SCHEMA: CORE_SCHEMA,\n    DEFAULT_SCHEMA: DEFAULT_SCHEMA,\n    load: load,\n    loadAll: loadAll,\n    dump: dump,\n    YAMLException: YAMLException,\n    types: types,\n    safeLoad: safeLoad,\n    safeLoadAll: safeLoadAll,\n    safeDump: safeDump\n  };\n  var name = 'frontmatter';\n\n  function transform(transformHooks) {\n    transformHooks.transform.tap(function (md, context) {\n      var origParse = md.parse;\n      md.parse = wrapFunction(origParse, {\n        before: function before(ctx) {\n          var _ctx$args = _slicedToArray(ctx.args, 1),\n              content = _ctx$args[0];\n\n          if (!content.startsWith('---\\n')) return;\n          var endOffset = content.indexOf('\\n---\\n');\n          if (endOffset < 0) return;\n          var raw = content.slice(4, endOffset);\n\n          try {\n            context.frontmatter = jsYaml.load(raw);\n          } catch (_unused) {\n            return;\n          }\n\n          var offset = endOffset + 5;\n          ctx.args[0] = content.slice(offset);\n        },\n        after: function after() {\n          md.parse = origParse;\n        }\n      });\n    });\n    return {};\n  }\n\n  var frontmatter = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    name: name,\n    transform: transform\n  });\n\n  function createTransformHooks() {\n    return {\n      parser: new Hook(),\n      transform: new Hook(),\n      htmltag: new Hook(),\n      retransform: new Hook()\n    };\n  }\n\n  var plugins = [katex, prism, frontmatter];\n\n  function cleanNode(node) {\n    var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (node.t === 'heading') {\n      // drop all paragraphs\n      node.c = node.c.filter(function (item) {\n        return item.t !== 'paragraph';\n      });\n    } else if (node.t === 'list_item') {\n      var _node$p; // keep first paragraph as content of list_item, drop others\n\n\n      node.c = node.c.filter(function (item) {\n        if (['paragraph', 'fence'].includes(item.t)) {\n          if (!node.v) {\n            node.v = item.v;\n            node.p = _extends$1({}, node.p, item.p);\n          }\n\n          return false;\n        }\n\n        return true;\n      });\n\n      if (((_node$p = node.p) == null ? void 0 : _node$p.index) != null) {\n        node.v = \"\".concat(node.p.index, \". \").concat(node.v);\n      }\n    } else if (node.t === 'ordered_list') {\n      var _node$p$start, _node$p2;\n\n      var index = (_node$p$start = (_node$p2 = node.p) == null ? void 0 : _node$p2.start) != null ? _node$p$start : 1;\n      node.c.forEach(function (item) {\n        if (item.t === 'list_item') {\n          item.p = _extends$1({}, item.p, {\n            index: index\n          });\n          index += 1;\n        }\n      });\n    }\n\n    if (node.c.length === 0) {\n      delete node.c;\n    } else {\n      node.c.forEach(function (child) {\n        return cleanNode(child, depth + 1);\n      });\n\n      if (node.c.length === 1 && !node.c[0].v) {\n        node.c = node.c[0].c;\n      }\n    }\n\n    node.d = depth;\n  }\n\n  var Transformer = /*#__PURE__*/function () {\n    function Transformer() {\n      var _this2 = this;\n\n      var plugins$1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : plugins;\n\n      _classCallCheck(this, Transformer);\n\n      this.plugins = plugins$1;\n      this.hooks = createTransformHooks();\n      var assetsMap = {};\n\n      var _iterator2 = _createForOfIteratorHelper(plugins$1),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _step2$value = _step2.value,\n              _name = _step2$value.name,\n              _transform = _step2$value.transform;\n          assetsMap[_name] = _transform(this.hooks);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      this.assetsMap = assetsMap;\n      var md = new Remarkable({\n        html: true,\n        breaks: true,\n        maxNesting: Infinity\n      });\n      md.block.ruler.enable(['deflist']);\n      md.renderer.rules.htmltag = wrapFunction(md.renderer.rules.htmltag, {\n        after: function after(ctx) {\n          _this2.hooks.htmltag.call(ctx);\n        }\n      });\n      this.md = md;\n      this.hooks.parser.call(md);\n    }\n\n    _createClass(Transformer, [{\n      key: \"buildTree\",\n      value: function buildTree(tokens) {\n        var _this3 = this;\n\n        var md = this.md; // TODO deal with <dl><dt>\n\n        var root = {\n          t: 'root',\n          d: 0,\n          v: '',\n          c: [],\n          p: {}\n        };\n        var stack = [root];\n        var depth = 0;\n\n        var _iterator3 = _createForOfIteratorHelper(tokens),\n            _step3;\n\n        try {\n          var _loop = function _loop() {\n            var token = _step3.value;\n            var current = stack[stack.length - 1];\n\n            if (token.type.endsWith('_open')) {\n              var _type = token.type.slice(0, -5);\n\n              var payload = {};\n\n              if (token.lines) {\n                payload.lines = token.lines;\n              }\n\n              if (_type === 'heading') {\n                depth = token.hLevel;\n\n                while (((_current = current) == null ? void 0 : _current.d) >= depth) {\n                  stack.pop();\n                  current = stack[stack.length - 1];\n                }\n              } else {\n                depth = Math.max(depth, ((_current2 = current) == null ? void 0 : _current2.d) || 0) + 1;\n\n                if (_type === 'ordered_list') {\n                  payload.start = token.order;\n                }\n              }\n\n              var item = {\n                t: _type,\n                d: depth,\n                p: payload,\n                v: '',\n                c: []\n              };\n              current.c.push(item);\n              stack.push(item);\n            } else if (!current) {\n              return \"continue\";\n            } else if (token.type === \"\".concat(current.t, \"_close\")) {\n              if (current.t === 'heading') {\n                depth = current.d;\n              } else {\n                stack.pop();\n                depth = 0;\n              }\n            } else if (token.type === 'inline') {\n              var revoke = _this3.hooks.htmltag.tap(function (ctx) {\n                var comment = ctx.result.match(/^<!--([\\s\\S]*?)-->$/);\n                var data = comment == null ? void 0 : comment[1].trim();\n\n                if (data === 'fold') {\n                  current.p.f = true;\n                  ctx.result = '';\n                }\n              });\n\n              var _text = md.renderer.render([token], md.options, {});\n\n              revoke();\n              current.v = \"\".concat(current.v || '').concat(_text);\n            } else if (token.type === 'fence') {\n              var result = md.renderer.render([token], md.options, {}); // Remarkable only adds className to `<code>` but not `<pre>`, copy it to make PrismJS style work.\n\n              var matches = result.match(/<code( class=\"[^\"]*\")>/);\n              if (matches) result = result.replace('<pre>', \"<pre\".concat(matches[1], \">\"));\n              current.c.push({\n                t: token.type,\n                d: depth + 1,\n                v: result,\n                c: []\n              });\n            } else ;\n          };\n\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _current;\n\n            var _current2;\n\n            var _ret = _loop();\n\n            if (_ret === \"continue\") continue;\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n\n        return root;\n      }\n    }, {\n      key: \"transform\",\n      value: function transform(content) {\n        var _root$c;\n\n        var context = {\n          features: {}\n        };\n        this.hooks.transform.call(this.md, context);\n        var tokens = this.md.parse(content, {});\n        var root = this.buildTree(tokens);\n        cleanNode(root);\n        if (((_root$c = root.c) == null ? void 0 : _root$c.length) === 1) root = root.c[0];\n        return _extends$1({}, context, {\n          root: root\n        });\n      }\n      /**\n       * Get all assets from enabled plugins or filter them by plugin names as keys.\n       */\n\n    }, {\n      key: \"getAssets\",\n      value: function getAssets(keys) {\n        var _this4 = this;\n\n        var _keys;\n\n        var styles = [];\n        var scripts = [];\n        (_keys = keys) != null ? _keys : keys = Object.keys(this.assetsMap);\n\n        var _iterator4 = _createForOfIteratorHelper(keys.map(function (key) {\n          return _this4.assetsMap[key];\n        })),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var assets = _step4.value;\n\n            if (assets) {\n              if (assets.styles) styles.push.apply(styles, _toConsumableArray(assets.styles));\n              if (assets.scripts) scripts.push.apply(scripts, _toConsumableArray(assets.scripts));\n            }\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n\n        return {\n          styles: styles,\n          scripts: scripts\n        };\n      }\n      /**\n       * Get used assets by features object returned by `transform`.\n       */\n\n    }, {\n      key: \"getUsedAssets\",\n      value: function getUsedAssets(features) {\n        return this.getAssets(Object.keys(features).filter(function (key) {\n          return features[key];\n        }));\n      }\n    }]);\n\n    return Transformer;\n  }();\n\n  exports.Transformer = Transformer;\n  exports.builtInPlugins = plugins;\n  exports.fillTemplate = fillTemplate;\n});"],"names":["_regeneratorRuntime","_asyncToGenerator","_toConsumableArray","_slicedToArray","_classCallCheck","_createClass","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","from","test","_unsupportedIterableToArray","length","i","F","s","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","return","arr","len","arr2","exports","require$$0","_interopDefaultLegacy","require$$0__default","_extends$1","assign","target","arguments","source","key","hasOwnProperty","apply","this","Hook","listeners","fn","_this","push","revoke","indexOf","splice","_step","_iterator","_extends","escapeHtml$1","html","replace","m","escapeScript","content","htmlOpen","tagName","attrs","attrStr","entries","map","_ref","_ref2","concat","filter","Boolean","join","htmlClose","wrapHtml","buildCode","args","params","arg","JSON","stringify","persistJS","items","context","item","type","data","_item$data3","getParams","persistCSS","rel","wrapFunction","_ref3","before","after","_len","_key","ctx","thisObj","_unused","result","_unused2","memoize","cache","undefined","createElement","props","el","document","forEach","_ref4","_ref5","_ref6","_ref7","setAttribute","Math","random","memoizedPreloadJS","url","head","append","as","href","loadJSItem","Promise","resolve","reject","_item$data","onload","onerror","src","_item$data4","loadJS","_x","_x2","_loadJS","mark","_callee","needPreload","_iterator5","_step5","wrap","_context","prev","_item$data2","getMarkmap","window","markmap","t0","finish","stop","template","BASE_JS","fillTemplate","root","assets","extra","getOptions","baseJs","scripts","styles","cssList","jsList","Markmap","mm","create","_ref8","entities","hasOwn","has","object","decodeEntity","hasOwn$1","has$1","obj","keys","UNESCAPE_MD_RE","unescapeMd","str","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","NAMED_ENTITY_RE","DIGITAL_ENTITY_TEST_RE","replaceEntityPattern","match","code","decoded","charCodeAt","toLowerCase","parseInt","replaceEntities","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","escapeHtml","rules","nextToken","tokens","idx","tight","blockquote_open","blockquote_close","getBreak","block","fence","options","env","instance","fences","fenceName","token","langClass","langPrefix","split","fence_custom","highlight","heading_open","hLevel","heading_close","hr","xhtmlOut","bullet_list_open","bullet_list_close","list_item_open","list_item_close","ordered_list_open","order","ordered_list_close","paragraph_open","paragraph_close","addBreak","link_open","title","linkTarget","link_close","image","alt","table_open","table_close","thead_open","thead_close","tbody_open","tbody_close","tr_open","tr_close","th_open","align","th_close","td_open","td_close","strong_open","strong_close","em_open","em_close","del_open","del_close","ins_open","ins_close","mark_open","mark_close","sub","sup","hardbreak","softbreak","breaks","text","htmlblock","htmltag","abbr_open","abbr_close","footnote_ref","Number","id","subId","footnote_block_open","footnote_block_close","footnote_open","footnote_close","footnote_anchor","dl_open","dt_open","dd_open","dl_close","dt_close","dd_close","Renderer","Ruler","__rules__","__cache__","state","inlineMode","trim","level","lines","children","parse","StateInline","parserInline","outTokens","parser","pos","posMax","pending","pendingLevel","isInLabel","linkLevel","linkContent","labelUnmatchedScopes","parseLinkLabel","start","found","marker","labelEnd","max","oldPos","oldFlag","skipToken","parseAbbr","label","abbreviations","abbr","l","inline","normalizeLink","normalized","decodeURI","encodeURI","parseLinkDestination","link","validateLink","parseLinkTitle","normalizeReference","toUpperCase","parseReference","references","tok","footnote_block","j","t","lastParagraph","list","current","currentLabel","insideRef","refTokens","footnotes","pop","count","renderInline","_rules","render","__find__","__compile__","self","chains","rule","enabled","altName","chain","at","opt","Error","beforeName","ruleName","afterName","enable","strict","disable","getRules","chainName","pushPending","cacheSet","val","cacheGet","PUNCT_CHARS","regEscape","abbr2","nodes","reg","regText","blockTokens","abbrRegExp","x","substr","sort","a","b","RegExp","lastIndex","exec","index","RARE_RE","SCOPED_ABBR_RE","SCOPED_ABBR","replaceScopedAbbr","inlineTokens","blkIdx","typographer","QUOTE_TEST_RE","QUOTE_RE","PUNCT_RE","APOSTROPHE","isLetter","replaceAt","smartquotes","thisLevel","lastSpace","nextSpace","canOpen","canClose","isSingle","stack","OUTER","single","quotes","Core","ruler","StateBlock","indent","indent_found","bMarks","eMarks","tShift","blkIndent","line","lineMax","parentType","ddIndent","startLine","endLine","nextLine","last","isEmpty","getLines","silent","mem","haveEndMarker","skipChars","skipSpaces","blockquote","lastLineEmpty","oldTShift","oldBMarks","oldIndent","oldParentType","terminatorRules","terminate","maxNesting","tokenize","cnt","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","oldTight","posAfterMarker","indentAfterMarker","markerValue","markerCharCode","isOrdered","contentStart","listTokIdx","prevEmptyEnd","listLines","itemLines","footnote","oldBMark","refs","heading","tmp","skipCharsBack","lheading","process","skipEmptyLines","min","begin","end","keepLastLF","first","queue","shift","html_blocks","HTML_TAG_OPEN_RE","HTML_TAG_CLOSE_RE","isLetter$1","lc","getLine$1","table","lineText","rows","cell","aligns","tableLines","tbodyLines","substring","skipMarker","markTightParagraphs$1","deflist","ddLine","dtLine","oldDDIndent","paragraph","_rules$1","ParserBlock","hasEmptyLines","TABS_SCAN_RE","NEWLINES_RE","SPACES_RE","isTerminatorChar","newline","pmax","lineStart","lastTabPos","offset","ESCAPED","i$1","escape","backticks","matchStart","matchEnd","del","lastChar","nextChar","ins","isAlphaNum","scanDelims","can_open","can_close","delims","emphasis","startCount","oldCount","newCount","res","UNESCAPE_RE","UNESCAPE_RE$1","links","labelStart","ref","isImage","footnote_inline","footnoteId","oldLength","footnoteSubId","url_schemas","EMAIL_RE","AUTOLINK_RE","autolink","tail","linkMatch","emailMatch","fullUrl","replace$1","regex","attr_name","unquoted","single_quoted","double_quoted","attr_value","attribute","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","isLetter$2","DIGITAL_RE","NAMED_RE","entity","_rules$2","ParserInline","BAD_PROTOCOLS","cached_pos","ok","config","components","core","StateCore","renderer","Remarkable","preset","linkify","console","warn","configure","set","presets","use","plugin","parseInline","loading$1","rkatex","md","backslash","dollar","delimiter","katex","renderKatex","displayMode","renderToString","throwOnError","parseBlockKatex","charAt","parseInlineKatex","spanStart","escapedDepth","char","remarkableKatex","autoload$1","name$2","transform$2","transformHooks","then","retransform","enableFeature","tap","transform","_","features","WebFontConfig","custom","families","active","refreshHook","_ref9","defer","loading","freeze","__proto__","autoload","loadLanguageAndRefresh","lang","Prism","plugins","autoloader","loadLanguages","name$1","transform$1","_Prism$languages","grammar","languages","prism","isNothing","subject","isObject","toArray","sequence","extend","sourceKeys","repeat","string","cycle","isNegativeZero","number","NEGATIVE_INFINITY","common","formatError","exception","compact","where","message","reason","column","snippet","YAMLException$1","captureStackTrace","getLine","buffer","lineEnd","position","maxLineLength","maxHalfLength","floor","padStart","makeSnippet","maxLength","linesBefore","linesAfter","re","lineStarts","lineEnds","foundLineNo","lineNoLength","TYPE_CONSTRUCTOR_OPTIONS","YAML_NODE_KINDS","compileStyleAliases","style","alias","Type$1","tag","kind","construct","instanceOf","predicate","represent","representName","defaultStyle","multi","styleAliases","compileList","schema","currentType","newIndex","previousType","previousIndex","compileMap","scalar","mapping","fallback","collectType","Schema$1","definition","implicit","explicit","type$1","loadKind","compiledImplicit","compiledExplicit","compiledTypeMap","seq","failsafe","resolveYamlNull","constructYamlNull","isNull","_null","canonical","lowercase","uppercase","camelcase","empty","resolveYamlBoolean","constructYamlBoolean","isBoolean","bool","isHexCode","isOctCode","isDecCode","resolveYamlInteger","hasDigits","constructYamlInteger","sign","isInteger","int","binary","octal","decimal","hexadecimal","YAML_FLOAT_PATTERN","resolveYamlFloat","constructYamlFloat","POSITIVE_INFINITY","NaN","parseFloat","SCIENTIFIC_WITHOUT_DOT","representYamlFloat","isNaN","isFloat","float","json","YAML_DATE_REGEXP","YAML_TIMESTAMP_REGEXP","resolveYamlTimestamp","constructYamlTimestamp","year","month","day","hour","minute","second","date","fraction","delta","Date","UTC","setTime","getTime","representYamlTimestamp","toISOString","timestamp","resolveYamlMerge","merge","BASE64_MAP","resolveYamlBinary","bitlen","constructYamlBinary","tailbits","input","bits","Uint8Array","representYamlBinary","isBinary","_hasOwnProperty$3","_toString$2","resolveYamlOmap","pair","pairKey","pairHasKey","objectKeys","constructYamlOmap","omap","_toString$1","resolveYamlPairs","constructYamlPairs","pairs","_hasOwnProperty$2","resolveYamlSet","constructYamlSet","_default","_hasOwnProperty$1","CONTEXT_FLOW_IN","CONTEXT_FLOW_OUT","CONTEXT_BLOCK_IN","CONTEXT_BLOCK_OUT","CHOMPING_CLIP","CHOMPING_STRIP","CHOMPING_KEEP","PATTERN_NON_PRINTABLE","PATTERN_NON_ASCII_LINE_BREAKS","PATTERN_FLOW_INDICATORS","PATTERN_TAG_HANDLE","PATTERN_TAG_URI","_class","is_EOL","is_WHITE_SPACE","is_WS_OR_EOL","is_FLOW_INDICATOR","fromHexCode","escapedHexLen","fromDecimalCode","simpleEscapeSequence","charFromCodepoint","simpleEscapeCheck","simpleEscapeMap","State$1","filename","onWarning","legacy","listener","implicitTypes","typeMap","lineIndent","firstTabInLine","documents","generateError","throwError","throwWarning","directiveHandlers","YAML","major","minor","version","checkLineBreaks","TAG","handle","prefix","tagMap","decodeURIComponent","captureSegment","checkJson","_position","_length","_character","_result","mergeMappings","destination","overridableKeys","quantity","storeMappingPair","keyTag","keyNode","valueNode","startLineStart","startPos","defineProperty","configurable","enumerable","writable","readLineBreak","skipSeparationSpace","allowComments","checkIndent","lineBreaks","testDocumentSeparator","writeFoldedLines","readPlainScalar","nodeIndent","withinFlowCollection","following","captureStart","captureEnd","hasPendingContent","_line","_lineStart","_lineIndent","_kind","readSingleQuotedScalar","readDoubleQuotedScalar","hexLength","hexResult","readFlowCollection","_pos","terminator","isPair","isExplicitPair","isMapping","readNext","_tag","_anchor","anchor","anchorMap","composeNode","readBlockScalar","folding","chomping","didReadContent","detectedIndent","textIndent","emptyLines","atMoreIndented","readBlockSequence","detected","readBlockMapping","flowIndent","allowCompact","_keyLine","_keyLineStart","_keyPos","atExplicitKey","readTagProperty","tagHandle","isVerbatim","isNamed","readAnchorProperty","readAlias","parentIndent","nodeContext","allowToSeek","allowBlockStyles","allowBlockScalars","allowBlockCollections","typeIndex","typeQuantity","typeList","blockIndent","indentStatus","atNewLine","hasContent","readDocument","directiveName","directiveArgs","documentStart","hasDirectives","loadDocuments","nullpos","loadAll$1","load$1","loader","loadAll","load","_toString","_hasOwnProperty","CHAR_BOM","CHAR_TAB","CHAR_LINE_FEED","CHAR_CARRIAGE_RETURN","CHAR_SPACE","CHAR_EXCLAMATION","CHAR_DOUBLE_QUOTE","CHAR_SHARP","CHAR_PERCENT","CHAR_AMPERSAND","CHAR_SINGLE_QUOTE","CHAR_ASTERISK","CHAR_COMMA","CHAR_MINUS","CHAR_COLON","CHAR_EQUALS","CHAR_GREATER_THAN","CHAR_QUESTION","CHAR_COMMERCIAL_AT","CHAR_LEFT_SQUARE_BRACKET","CHAR_RIGHT_SQUARE_BRACKET","CHAR_GRAVE_ACCENT","CHAR_LEFT_CURLY_BRACKET","CHAR_VERTICAL_LINE","CHAR_RIGHT_CURLY_BRACKET","ESCAPE_SEQUENCES","DEPRECATED_BOOLEANS_SYNTAX","DEPRECATED_BASE60_SYNTAX","compileStyleMap","encodeHex","character","QUOTING_TYPE_SINGLE","QUOTING_TYPE_DOUBLE","State","noArrayIndent","skipInvalid","flowLevel","styleMap","sortKeys","lineWidth","noRefs","noCompatMode","condenseFlow","quotingType","forceQuotes","replacer","explicitTypes","duplicates","usedDuplicates","indentString","spaces","ind","generateNextLine","testImplicitResolving","isWhitespace","isPrintable","isNsCharOrWhitespace","isPlainSafe","inblock","cIsNsCharOrWhitespace","cIsNsChar","isPlainSafeFirst","isPlainSafeLast","codePointAt","needIndentIndicator","STYLE_PLAIN","STYLE_SINGLE","STYLE_LITERAL","STYLE_FOLDED","STYLE_DOUBLE","chooseScalarStyle","singleLineOnly","indentPerLevel","testAmbiguousType","prevChar","hasLineBreak","hasFoldableLine","shouldTrackWidth","previousLineBreak","plain","writeScalar","iskey","dump","testAmbiguity","blockHeader","dropEndingNewline","foldString","escapeString","indentIndicator","clip","width","nextLF","moreIndented","lineRe","foldLine","prevMoreIndented","breakRe","curr","escapeSeq","writeFlowSequence","writeNode","writeBlockSequence","writeFlowMapping","objectKey","objectValue","pairBuffer","objectKeyList","writeBlockMapping","explicitPair","detectType","isblockseq","tagStr","duplicateIndex","duplicate","objectOrArray","getDuplicateReferences","objects","duplicatesIndexes","inspectNode","dump$1","dumper","renamed","to","Type","Schema","FAILSAFE_SCHEMA","JSON_SCHEMA","CORE_SCHEMA","DEFAULT_SCHEMA","YAMLException","types","null","safeLoad","safeLoadAll","safeDump","jsYaml","origParse","startsWith","endOffset","raw","frontmatter","createTransformHooks","cleanNode","node","depth","_node$p","includes","v","p","_node$p$start","_node$p2","child","d","Transformer","_this2","plugins$1","hooks","_step2","assetsMap","_iterator2","_step2$value","_name","_transform","Infinity","_step3","_this3","_iterator3","_loop","endsWith","_type","payload","_current","_current2","_text","matches","_root$c","buildTree","_this4","_step4","_iterator4","getAssets","builtInPlugins","factory"],"sourceRoot":""}